{"version":3,"file":"agm-core.js","sources":["ng://@agm/core/services/maps-api-loader/maps-api-loader.ts","ng://@agm/core/services/google-maps-api-wrapper.ts","ng://@agm/core/services/managers/layer-manager.ts","ng://@agm/core/directives/bicycling-layer.ts","ng://@agm/core/services/managers/circle-manager.ts","ng://@agm/core/directives/circle.ts","ng://@agm/core/services/managers/data-layer-manager.ts","ng://@agm/core/directives/data-layer.ts","ng://@agm/core/services/fit-bounds.ts","ng://@agm/core/directives/fit-bounds.ts","ng://@agm/core/services/managers/marker-manager.ts","ng://@agm/core/services/managers/info-window-manager.ts","ng://@agm/core/directives/info-window.ts","ng://@agm/core/services/managers/kml-layer-manager.ts","ng://@agm/core/directives/kml-layer.ts","ng://@agm/core/utils/mvcarray-utils.ts","ng://@agm/core/services/managers/polygon-manager.ts","ng://@agm/core/services/managers/polyline-manager.ts","ng://@agm/core/services/managers/rectangle-manager.ts","ng://@agm/core/directives/map.ts","ng://@agm/core/directives/marker.ts","ng://@agm/core/directives/polygon.ts","ng://@agm/core/directives/polyline-icon.ts","ng://@agm/core/directives/polyline-point.ts","ng://@agm/core/directives/polyline.ts","ng://@agm/core/directives/rectangle.ts","ng://@agm/core/directives/transit-layer.ts","ng://@agm/core/services/google-maps-types.ts","ng://@agm/core/services/geocoder-service.ts","ng://@agm/core/utils/browser-globals.ts","ng://@agm/core/services/maps-api-loader/lazy-maps-api-loader.ts","ng://@agm/core/services/maps-api-loader/noop-maps-api-loader.ts","ng://@agm/core/map-types.ts","ng://@agm/core/core.module.ts","ng://@agm/core/index.ts","ng://@agm/core/agm-core.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport abstract class MapsAPILoader {\r\n  abstract load(): Promise<void>;\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { Observable, Observer } from 'rxjs';\r\n\r\nimport * as mapTypes from './google-maps-types';\r\nimport { Polyline, PolylineOptions } from './google-maps-types';\r\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\r\n\r\n// todo: add types for this\r\ndeclare var google: any;\r\n\r\n/**\r\n * Wrapper class that handles the communication with the Google Maps Javascript\r\n * API v3\r\n */\r\n@Injectable()\r\nexport class GoogleMapsAPIWrapper {\r\n  private _map: Promise<mapTypes.GoogleMap>;\r\n  private _mapResolver: (value?: mapTypes.GoogleMap) => void;\r\n\r\n  constructor(private _loader: MapsAPILoader, private _zone: NgZone) {\r\n    this._map =\r\n        new Promise<mapTypes.GoogleMap>((resolve: () => void) => { this._mapResolver = resolve; });\r\n  }\r\n\r\n  createMap(el: HTMLElement, mapOptions: mapTypes.MapOptions): Promise<void> {\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this._loader.load().then(() => {\r\n        const map = new google.maps.Map(el, mapOptions);\r\n        this._mapResolver(map as mapTypes.GoogleMap);\r\n        return;\r\n      });\r\n    });\r\n  }\r\n\r\n  setMapOptions(options: mapTypes.MapOptions) {\r\n    return this._zone.runOutsideAngular(() => {\r\n      this._map.then((m: mapTypes.GoogleMap) => { m.setOptions(options); });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates a google map marker with the map context\r\n   */\r\n  createMarker(options: mapTypes.MarkerOptions = {} as mapTypes.MarkerOptions, addToMap: boolean = true):\r\n      Promise<mapTypes.Marker> {\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this._map.then((map: mapTypes.GoogleMap) => {\r\n        if (addToMap) {\r\n          options.map = map;\r\n        }\r\n        return new google.maps.Marker(options);\r\n      });\r\n    });\r\n  }\r\n\r\n  createInfoWindow(options?: mapTypes.InfoWindowOptions): Promise<mapTypes.InfoWindow> {\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this._map.then(() => { return new google.maps.InfoWindow(options); });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates a google.map.Circle for the current map.\r\n   */\r\n  createCircle(options: mapTypes.CircleOptions): Promise<mapTypes.Circle> {\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this._map.then((map: mapTypes.GoogleMap) => {\r\n        if (typeof options.strokePosition === 'string') {\r\n          options.strokePosition = google.maps.StrokePosition[options.strokePosition];\r\n        }\r\n        options.map = map;\r\n        return new google.maps.Circle(options);\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates a google.map.Rectangle for the current map.\r\n   */\r\n  createRectangle(options: mapTypes.RectangleOptions): Promise<mapTypes.Rectangle> {\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this._map.then((map: mapTypes.GoogleMap) => {\r\n        options.map = map;\r\n        return new google.maps.Rectangle(options);\r\n      });\r\n    });\r\n  }\r\n\r\n  createPolyline(options: PolylineOptions): Promise<Polyline> {\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this.getNativeMap().then((map: mapTypes.GoogleMap) => {\r\n        let line = new google.maps.Polyline(options);\r\n        line.setMap(map);\r\n        return line;\r\n      });\r\n    });\r\n  }\r\n\r\n  createPolygon(options: mapTypes.PolygonOptions): Promise<mapTypes.Polygon> {\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this.getNativeMap().then((map: mapTypes.GoogleMap) => {\r\n        let polygon = new google.maps.Polygon(options);\r\n        polygon.setMap(map);\r\n        return polygon;\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates a new google.map.Data layer for the current map\r\n   */\r\n  createDataLayer(options?: mapTypes.DataOptions): Promise<mapTypes.Data> {\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this._map.then(m => {\r\n        let data = new google.maps.Data(options);\r\n        data.setMap(m);\r\n        return data;\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates a TransitLayer instance for a map\r\n   * @param {TransitLayerOptions} options - used for setting layer options\r\n   * @returns {Promise<TransitLayer>} a new transit layer object\r\n   */\r\n  createTransitLayer(options: mapTypes.TransitLayerOptions): Promise<mapTypes.TransitLayer>{\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this._map.then((map: mapTypes.GoogleMap) => {\r\n        let newLayer: mapTypes.TransitLayer = new google.maps.TransitLayer();\r\n        newLayer.setMap(options.visible ? map : null);\r\n        return newLayer;\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates a BicyclingLayer instance for a map\r\n   * @param {BicyclingLayerOptions} options - used for setting layer options\r\n   * @returns {Promise<BicyclingLayer>} a new bicycling layer object\r\n   */\r\n  createBicyclingLayer(options: mapTypes.BicyclingLayerOptions): Promise<mapTypes.BicyclingLayer>{\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this._map.then((map: mapTypes.GoogleMap) => {\r\n        let newLayer: mapTypes.BicyclingLayer = new google.maps.BicyclingLayer();\r\n        newLayer.setMap(options.visible ? map : null);\r\n        return newLayer;\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Determines if given coordinates are insite a Polygon path.\r\n   */\r\n  containsLocation(latLng: mapTypes.LatLngLiteral, polygon: mapTypes.Polygon): Promise<boolean> {\r\n    return google.maps.geometry.poly.containsLocation(latLng, polygon);\r\n  }\r\n\r\n  subscribeToMapEvent<E>(eventName: string): Observable<E> {\r\n    return new Observable((observer: Observer<E>) => {\r\n      this._map.then((m: mapTypes.GoogleMap) => {\r\n        m.addListener(eventName, (arg: E) => { this._zone.run(() => observer.next(arg)); });\r\n      });\r\n    });\r\n  }\r\n\r\n  clearInstanceListeners() {\r\n    return this._zone.runOutsideAngular(() => {\r\n      this._map.then((map: mapTypes.GoogleMap) => {\r\n        google.maps.event.clearInstanceListeners(map);\r\n      });\r\n    });\r\n  }\r\n\r\n  setCenter(latLng: mapTypes.LatLngLiteral): Promise<void> {\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this._map.then((map: mapTypes.GoogleMap) => map.setCenter(latLng));\r\n    });\r\n  }\r\n\r\n  getZoom(): Promise<number> {\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this._map.then((map: mapTypes.GoogleMap) => map.getZoom());\r\n    });\r\n  }\r\n\r\n  getBounds(): Promise<mapTypes.LatLngBounds> {\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this._map.then((map: mapTypes.GoogleMap) => map.getBounds());\r\n    });\r\n  }\r\n\r\n  getMapTypeId(): Promise<mapTypes.MapTypeId> {\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this._map.then((map: mapTypes.GoogleMap) => map.getMapTypeId());\r\n    });\r\n  }\r\n\r\n  setZoom(zoom: number): Promise<void> {\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this._map.then((map: mapTypes.GoogleMap) => map.setZoom(zoom));\r\n    });\r\n  }\r\n\r\n  getCenter(): Promise<mapTypes.LatLng> {\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this._map.then((map: mapTypes.GoogleMap) => map.getCenter());\r\n    });\r\n  }\r\n\r\n  panTo(latLng: mapTypes.LatLng | mapTypes.LatLngLiteral): Promise<void> {\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this._map.then((map) => map.panTo(latLng));\r\n    });\r\n  }\r\n\r\n  panBy(x: number, y: number): Promise<void> {\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this._map.then((map) => map.panBy(x, y));\r\n    });\r\n  }\r\n\r\n  fitBounds(latLng: mapTypes.LatLngBounds | mapTypes.LatLngBoundsLiteral, padding?: number | mapTypes.Padding): Promise<void> {\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this._map.then((map) => map.fitBounds(latLng, padding));\r\n    });\r\n  }\r\n\r\n  panToBounds(latLng: mapTypes.LatLngBounds | mapTypes.LatLngBoundsLiteral, padding?: number | mapTypes.Padding): Promise<void> {\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this._map.then((map) => map.panToBounds(latLng, padding));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns the native Google Maps Map instance. Be careful when using this instance directly.\r\n   */\r\n  getNativeMap(): Promise<mapTypes.GoogleMap> { return this._map; }\r\n\r\n  /**\r\n   * Triggers the given event name on the map instance.\r\n   */\r\n  triggerMapEvent(eventName: string): Promise<void> {\r\n    return this._map.then((m) => google.maps.event.trigger(m, eventName));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AgmBicyclingLayer } from '../../directives/bicycling-layer';\r\nimport { AgmTransitLayer } from '../../directives/transit-layer';\r\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\r\nimport { BicyclingLayer, BicyclingLayerOptions, GoogleMap, TransitLayer, TransitLayerOptions } from '../google-maps-types';\r\n\r\n/**\r\n * This class manages Transit and Bicycling Layers for a Google Map instance.\r\n */\r\n\r\n@Injectable()\r\nexport class LayerManager {\r\n    private _layers: Map<AgmTransitLayer | AgmBicyclingLayer, Promise<TransitLayer | BicyclingLayer>> =\r\n        new Map<AgmTransitLayer | AgmBicyclingLayer, Promise<TransitLayer | BicyclingLayer>>();\r\n\r\n    constructor(private _wrapper: GoogleMapsAPIWrapper) {}\r\n\r\n    /**\r\n     * Adds a transit layer to a map instance.\r\n     * @param {AgmTransitLayer} layer - a TransitLayer object\r\n     * @param {TransitLayerOptions} options - TransitLayerOptions options\r\n     * @returns void\r\n     */\r\n    addTransitLayer(layer: AgmTransitLayer, options: TransitLayerOptions): void {\r\n        const newLayer = this._wrapper.createTransitLayer(options);\r\n        this._layers.set(layer, newLayer);\r\n    }\r\n\r\n    /**\r\n     * Adds a bicycling layer to a map instance.\r\n     * @param {AgmBicyclingLayer} layer - a bicycling layer object\r\n     * @param {BicyclingLayerOptions} options - BicyclingLayer options\r\n     * @returns void\r\n     */\r\n    addBicyclingLayer(layer: AgmBicyclingLayer, options: BicyclingLayerOptions): void {\r\n        const newLayer = this._wrapper.createBicyclingLayer(options);\r\n        this._layers.set(layer, newLayer);\r\n    }\r\n\r\n    /**\r\n     * Deletes a map layer\r\n     * @param {AgmTransitLayer|AgmBicyclingLayer} layer - the layer to delete\r\n     * @returns  Promise<void>\r\n     */\r\n    deleteLayer(layer: AgmTransitLayer | AgmBicyclingLayer): Promise<void> {\r\n        return this._layers.get(layer).then(currentLayer => {\r\n            currentLayer.setMap(null);\r\n            this._layers.delete(layer);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide/Show a google map layer\r\n     * @param { AgmTransitLayer|AgmBicyclingLayer} layer - the layer to hide/show\r\n     * @param {TransitLayerOptions|BicyclingLayerOptions} options - used to set visibility of the layer\r\n     * @returns Promise<void>\r\n     */\r\n    toggleLayerVisibility(layer: AgmTransitLayer | AgmBicyclingLayer, options: TransitLayerOptions | BicyclingLayerOptions): Promise<void> {\r\n        return this._layers.get(layer).then(currentLayer => {\r\n            if (!options.visible) {\r\n                currentLayer.setMap(null);\r\n                return;\r\n            } else {\r\n               return this._wrapper.getNativeMap().then( (map: GoogleMap) => {\r\n                   currentLayer.setMap(map);\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { Directive, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\r\nimport { LayerManager } from '../services/managers/layer-manager';\r\n\r\nlet layerId = 0;\r\n\r\n/*\r\n * This directive adds a bicycling layer to a google map instance\r\n * <agm-bicycling-layer [visible]=\"true|false\"> <agm-bicycling-layer>\r\n * */\r\n@Directive({\r\n    selector: 'agm-bicycling-layer',\r\n})\r\n\r\nexport class AgmBicyclingLayer implements OnInit, OnChanges, OnDestroy{\r\n    private _addedToManager = false;\r\n    private _id: string = (layerId++).toString();\r\n\r\n    /**\r\n     * Hide/show bicycling layer\r\n     */\r\n    @Input() visible = true;\r\n\r\n    constructor( private _manager: LayerManager ) {}\r\n\r\n    ngOnInit() {\r\n        if (this._addedToManager) {\r\n            return;\r\n        }\r\n        this._manager.addBicyclingLayer(this, {visible: this.visible});\r\n        this._addedToManager = true;\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (!this._addedToManager) {\r\n            return;\r\n        }\r\n        if (changes['visible'] != null) {\r\n            this._manager.toggleLayerVisibility(this, {visible: changes['visible'].currentValue});\r\n        }\r\n    }\r\n\r\n    /** @internal */\r\n    id(): string { return this._id; }\r\n\r\n    /** @internal */\r\n    toString(): string { return `AgmBicyclingLayer-${this._id.toString()}`; }\r\n\r\n    /** @internal */\r\n    ngOnDestroy() {\r\n        this._manager.deleteLayer(this);\r\n    }\r\n\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\n\r\nimport { Observable, Observer } from 'rxjs';\r\n\r\nimport { AgmCircle } from '../../directives/circle';\r\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\r\nimport * as mapTypes from '../google-maps-types';\r\n\r\ndeclare var google: any;\r\n\r\n@Injectable()\r\nexport class CircleManager {\r\n  private _circles: Map<AgmCircle, Promise<mapTypes.Circle>> =\r\n      new Map<AgmCircle, Promise<mapTypes.Circle>>();\r\n\r\n  constructor(private _apiWrapper: GoogleMapsAPIWrapper, private _zone: NgZone) {}\r\n\r\n  addCircle(circle: AgmCircle) {\r\n    this._circles.set(circle, this._apiWrapper.createCircle({\r\n      center: {lat: circle.latitude, lng: circle.longitude},\r\n      clickable: circle.clickable,\r\n      draggable: circle.draggable,\r\n      editable: circle.editable,\r\n      fillColor: circle.fillColor,\r\n      fillOpacity: circle.fillOpacity,\r\n      radius: circle.radius,\r\n      strokeColor: circle.strokeColor,\r\n      strokeOpacity: circle.strokeOpacity,\r\n      strokePosition: circle.strokePosition,\r\n      strokeWeight: circle.strokeWeight,\r\n      visible: circle.visible,\r\n      zIndex: circle.zIndex,\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Removes the given circle from the map.\r\n   */\r\n  removeCircle(circle: AgmCircle): Promise<void> {\r\n    return this._circles.get(circle).then((c) => {\r\n      c.setMap(null);\r\n      this._circles.delete(circle);\r\n    });\r\n  }\r\n\r\n  setOptions(circle: AgmCircle, options: mapTypes.CircleOptions): Promise<void> {\r\n    return this._circles.get(circle).then((c) => {\r\n      if (typeof options.strokePosition === 'string') {\r\n        options.strokePosition = google.maps.StrokePosition[options.strokePosition];\r\n      }\r\n      c.setOptions(options);\r\n    });\r\n  }\r\n\r\n  getBounds(circle: AgmCircle): Promise<mapTypes.LatLngBounds> {\r\n    return this._circles.get(circle).then((c) => c.getBounds());\r\n  }\r\n\r\n  getCenter(circle: AgmCircle): Promise<mapTypes.LatLng> {\r\n    return this._circles.get(circle).then((c) => c.getCenter());\r\n  }\r\n\r\n  getRadius(circle: AgmCircle): Promise<number> {\r\n    return this._circles.get(circle).then((c) => c.getRadius());\r\n  }\r\n\r\n  setCenter(circle: AgmCircle): Promise<void> {\r\n    return this._circles.get(circle).then(\r\n        (c) => { return c.setCenter({lat: circle.latitude, lng: circle.longitude}); });\r\n  }\r\n\r\n  setEditable(circle: AgmCircle): Promise<void> {\r\n    return this._circles.get(circle).then((c) => { return c.setEditable(circle.editable); });\r\n  }\r\n\r\n  setDraggable(circle: AgmCircle): Promise<void> {\r\n    return this._circles.get(circle).then((c) => { return c.setDraggable(circle.draggable); });\r\n  }\r\n\r\n  setVisible(circle: AgmCircle): Promise<void> {\r\n    return this._circles.get(circle).then((c) => { return c.setVisible(circle.visible); });\r\n  }\r\n\r\n  setRadius(circle: AgmCircle): Promise<void> {\r\n    return this._circles.get(circle).then((c) => { return c.setRadius(circle.radius); });\r\n  }\r\n\r\n  getNativeCircle(circle: AgmCircle): Promise<mapTypes.Circle> {\r\n    return this._circles.get(circle);\r\n  }\r\n\r\n  createEventObservable<T>(eventName: string, circle: AgmCircle): Observable<T> {\r\n    return new Observable((observer: Observer<T>) => {\r\n      let listener: mapTypes.MapsEventListener = null;\r\n      this._circles.get(circle).then((c) => {\r\n        listener = c.addListener(eventName, (e: T) => this._zone.run(() => observer.next(e)));\r\n      });\r\n\r\n      return () => {\r\n        if (listener !== null) {\r\n          listener.remove();\r\n        }\r\n      };\r\n    });\r\n  }\r\n}\r\n","import { Directive, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChange } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { MouseEvent } from '../map-types';\r\nimport { LatLng, LatLngBounds, LatLngLiteral, MouseEvent as MapMouseEvent } from '../services/google-maps-types';\r\nimport { CircleManager } from '../services/managers/circle-manager';\r\n\r\n@Directive({\r\n  selector: 'agm-circle',\r\n})\r\nexport class AgmCircle implements OnInit, OnChanges, OnDestroy {\r\n  /**\r\n   * The latitude position of the circle (required).\r\n   */\r\n  @Input() latitude: number;\r\n\r\n  /**\r\n   * The clickable position of the circle (required).\r\n   */\r\n  @Input() longitude: number;\r\n\r\n  /**\r\n   * Indicates whether this Circle handles mouse events. Defaults to true.\r\n   */\r\n  @Input() clickable = true;\r\n\r\n  /**\r\n   * If set to true, the user can drag this circle over the map. Defaults to false.\r\n   */\r\n  // tslint:disable-next-line:no-input-rename\r\n  @Input('circleDraggable') draggable = false;\r\n\r\n  /**\r\n   * If set to true, the user can edit this circle by dragging the control points shown at\r\n   * the center and around the circumference of the circle. Defaults to false.\r\n   */\r\n  @Input() editable = false;\r\n\r\n  /**\r\n   * The fill color. All CSS3 colors are supported except for extended named colors.\r\n   */\r\n  @Input() fillColor: string;\r\n\r\n  /**\r\n   * The fill opacity between 0.0 and 1.0.\r\n   */\r\n  @Input() fillOpacity: number;\r\n\r\n  /**\r\n   * The radius in meters on the Earth's surface.\r\n   */\r\n  @Input() radius = 0;\r\n\r\n  /**\r\n   * The stroke color. All CSS3 colors are supported except for extended named colors.\r\n   */\r\n  @Input() strokeColor: string;\r\n\r\n  /**\r\n   * The stroke opacity between 0.0 and 1.0\r\n   */\r\n  @Input() strokeOpacity: number;\r\n\r\n  /**\r\n   * The stroke position. Defaults to CENTER.\r\n   * This property is not supported on Internet Explorer 8 and earlier.\r\n   */\r\n  @Input() strokePosition: 'CENTER' | 'INSIDE' | 'OUTSIDE' = 'CENTER';\r\n\r\n  /**\r\n   * The stroke width in pixels.\r\n   */\r\n  @Input() strokeWeight = 0;\r\n\r\n  /**\r\n   * Whether this circle is visible on the map. Defaults to true.\r\n   */\r\n  @Input() visible = true;\r\n\r\n  /**\r\n   * The zIndex compared to other polys.\r\n   */\r\n  @Input() zIndex: number;\r\n\r\n  /**\r\n   * This event is fired when the circle's center is changed.\r\n   */\r\n  @Output() centerChange: EventEmitter<LatLngLiteral> = new EventEmitter<LatLngLiteral>();\r\n\r\n  /**\r\n   * This event emitter gets emitted when the user clicks on the circle.\r\n   */\r\n  @Output() circleClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event emitter gets emitted when the user clicks on the circle.\r\n   */\r\n  @Output() circleDblClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is repeatedly fired while the user drags the circle.\r\n   */\r\n  @Output() drag: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the user stops dragging the circle.\r\n   */\r\n  @Output() dragEnd: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the user starts dragging the circle.\r\n   */\r\n  @Output() dragStart: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the DOM mousedown event is fired on the circle.\r\n   */\r\n  @Output() mouseDown: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the DOM mousemove event is fired on the circle.\r\n   */\r\n  @Output() mouseMove: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired on circle mouseout.\r\n   */\r\n  @Output() mouseOut: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired on circle mouseover.\r\n   */\r\n  @Output() mouseOver: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the DOM mouseup event is fired on the circle.\r\n   */\r\n  @Output() mouseUp: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the circle's radius is changed.\r\n   */\r\n  @Output() radiusChange: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  /**\r\n   * This event is fired when the circle is right-clicked on.\r\n   */\r\n  @Output() rightClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  private _circleAddedToManager = false;\r\n\r\n  private static _mapOptions: string[] = [\r\n    'fillColor', 'fillOpacity', 'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight',\r\n    'visible', 'zIndex', 'clickable',\r\n  ];\r\n\r\n  private _eventSubscriptions: Subscription[] = [];\r\n\r\n  constructor(private _manager: CircleManager) {}\r\n\r\n  /** @internal */\r\n  ngOnInit() {\r\n    this._manager.addCircle(this);\r\n    this._circleAddedToManager = true;\r\n    this._registerEventListeners();\r\n  }\r\n\r\n  /** @internal */\r\n  ngOnChanges(changes: {[key: string]: SimpleChange}) {\r\n    if (!this._circleAddedToManager) {\r\n      return;\r\n    }\r\n    if (changes['latitude'] || changes['longitude']) {\r\n      this._manager.setCenter(this);\r\n    }\r\n    if (changes['editable']) {\r\n      this._manager.setEditable(this);\r\n    }\r\n    if (changes['draggable']) {\r\n      this._manager.setDraggable(this);\r\n    }\r\n    if (changes['visible']) {\r\n      this._manager.setVisible(this);\r\n    }\r\n    if (changes['radius']) {\r\n      this._manager.setRadius(this);\r\n    }\r\n    this._updateCircleOptionsChanges(changes);\r\n  }\r\n\r\n  private _updateCircleOptionsChanges(changes: {[propName: string]: SimpleChange}) {\r\n    let options: {[propName: string]: any} = {};\r\n    let optionKeys =\r\n        Object.keys(changes).filter(k => AgmCircle._mapOptions.indexOf(k) !== -1);\r\n    optionKeys.forEach((k) => { options[k] = changes[k].currentValue; });\r\n    if (optionKeys.length > 0) {\r\n      this._manager.setOptions(this, options);\r\n    }\r\n  }\r\n\r\n  private _registerEventListeners() {\r\n    let events: Map<string, EventEmitter<any>> = new Map<string, EventEmitter<any>>();\r\n    events.set('center_changed', this.centerChange);\r\n    events.set('click', this.circleClick);\r\n    events.set('dblclick', this.circleDblClick);\r\n    events.set('drag', this.drag);\r\n    events.set('dragend', this.dragEnd);\r\n    events.set('dragstart', this.dragStart);\r\n    events.set('mousedown', this.mouseDown);\r\n    events.set('mousemove', this.mouseMove);\r\n    events.set('mouseout', this.mouseOut);\r\n    events.set('mouseover', this.mouseOver);\r\n    events.set('mouseup', this.mouseUp);\r\n    events.set('radius_changed', this.radiusChange);\r\n    events.set('rightclick', this.rightClick);\r\n\r\n    events.forEach((eventEmitter, eventName) => {\r\n      this._eventSubscriptions.push(\r\n          this._manager.createEventObservable<MapMouseEvent>(eventName, this).subscribe((value) => {\r\n            switch (eventName) {\r\n              case 'radius_changed':\r\n                this._manager.getRadius(this).then((radius) => eventEmitter.emit(radius));\r\n                break;\r\n              case 'center_changed':\r\n                this._manager.getCenter(this).then(\r\n                    (center) =>\r\n                        eventEmitter.emit({lat: center.lat(), lng: center.lng()} as LatLngLiteral));\r\n                break;\r\n              default:\r\n                eventEmitter.emit(\r\n                    {coords: {lat: value.latLng.lat(), lng: value.latLng.lng()}} as MouseEvent);\r\n            }\r\n          }));\r\n    });\r\n  }\r\n\r\n  /** @internal */\r\n  ngOnDestroy() {\r\n    this._eventSubscriptions.forEach(function(s: Subscription) { s.unsubscribe(); });\r\n    this._eventSubscriptions = null;\r\n    this._manager.removeCircle(this);\r\n  }\r\n\r\n  /**\r\n   * Gets the LatLngBounds of this Circle.\r\n   */\r\n  getBounds(): Promise<LatLngBounds> { return this._manager.getBounds(this); }\r\n\r\n  getCenter(): Promise<LatLng> { return this._manager.getCenter(this); }\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { Observable, Observer } from 'rxjs';\r\n\r\nimport { AgmDataLayer } from './../../directives/data-layer';\r\nimport { GoogleMapsAPIWrapper } from './../google-maps-api-wrapper';\r\nimport { Data, DataOptions, Feature } from './../google-maps-types';\r\n\r\n/**\r\n * Manages all Data Layers for a Google Map instance.\r\n */\r\n@Injectable()\r\nexport class DataLayerManager {\r\n  private _layers: Map<AgmDataLayer, Promise<Data>> =\r\n  new Map<AgmDataLayer, Promise<Data>>();\r\n\r\n  constructor(private _wrapper: GoogleMapsAPIWrapper, private _zone: NgZone) { }\r\n\r\n  /**\r\n   * Adds a new Data Layer to the map.\r\n   */\r\n  addDataLayer(layer: AgmDataLayer) {\r\n    const newLayer = this._wrapper.createDataLayer({\r\n      style: layer.style,\r\n    } as DataOptions)\r\n    .then(d => {\r\n      if (layer.geoJson) {\r\n        this.getDataFeatures(d, layer.geoJson).then(features => d.features = features);\r\n      }\r\n      return d;\r\n    });\r\n    this._layers.set(layer, newLayer);\r\n  }\r\n\r\n  deleteDataLayer(layer: AgmDataLayer) {\r\n    this._layers.get(layer).then(l => {\r\n      l.setMap(null);\r\n      this._layers.delete(layer);\r\n    });\r\n  }\r\n\r\n  updateGeoJson(layer: AgmDataLayer, geoJson: Object | string) {\r\n    this._layers.get(layer).then(l => {\r\n      l.forEach(function (feature: Feature) {\r\n        l.remove(feature);\r\n\r\n        var index = l.features.indexOf(feature, 0);\r\n        if (index > -1) {\r\n          l.features.splice(index, 1);\r\n        }\r\n      });\r\n      this.getDataFeatures(l, geoJson).then(features => l.features = features);\r\n    });\r\n  }\r\n\r\n  setDataOptions(layer: AgmDataLayer, options: DataOptions)\r\n  {\r\n    this._layers.get(layer).then(l => {\r\n      l.setControlPosition(options.controlPosition);\r\n      l.setControls(options.controls);\r\n      l.setDrawingMode(options.drawingMode);\r\n      l.setStyle(options.style);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates a Google Maps event listener for the given DataLayer as an Observable\r\n   */\r\n  createEventObservable<T>(eventName: string, layer: AgmDataLayer): Observable<T> {\r\n    return new Observable((observer: Observer<T>) => {\r\n      this._layers.get(layer).then((d: Data) => {\r\n        d.addListener(eventName, (e: T) => this._zone.run(() => observer.next(e)));\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Extract features from a geoJson using google.maps Data Class\r\n   * @param d : google.maps.Data class instance\r\n   * @param geoJson : url or geojson object\r\n   */\r\n  getDataFeatures(d: Data, geoJson: Object | string): Promise<Feature[]> {\r\n    return new Promise<Feature[]>((resolve, reject) => {\r\n        if (typeof geoJson === 'object') {\r\n          try {\r\n            const features = d.addGeoJson(geoJson);\r\n            resolve(features);\r\n          } catch (e) {\r\n            reject(e);\r\n          }\r\n        } else if (typeof geoJson === 'string') {\r\n          d.loadGeoJson(geoJson, null, resolve);\r\n        } else {\r\n          reject(`Impossible to extract features from geoJson: wrong argument type`);\r\n        }\r\n      });\r\n  }\r\n}\r\n","import { Directive, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { DataMouseEvent, DataOptions } from './../services/google-maps-types';\r\nimport { DataLayerManager } from './../services/managers/data-layer-manager';\r\n\r\nlet layerId = 0;\r\n\r\n/**\r\n * AgmDataLayer enables the user to add data layers to the map.\r\n *\r\n * ### Example\r\n * ```typescript\r\n * import { Component } from 'angular2/core';\r\n * import { AgmMap, AgmDataLayer } from\r\n * 'angular-google-maps/core';\r\n *\r\n * @Component({\r\n *  selector: 'my-map-cmp',\r\n *  directives: [AgmMap, AgmDataLayer],\r\n *  styles: [`\r\n *    .agm-container {\r\n *      height: 300px;\r\n *    }\r\n * `],\r\n *  template: `\r\n * <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\r\n * \t  <agm-data-layer [geoJson]=\"geoJsonObject\" (layerClick)=\"clicked($event)\" [style]=\"styleFunc\">\r\n * \t  </agm-data-layer>\r\n * </agm-map>\r\n *  `\r\n * })\r\n * export class MyMapCmp {\r\n *   lat: number = -25.274449;\r\n *   lng: number = 133.775060;\r\n *   zoom: number = 5;\r\n *\r\n * clicked(clickEvent) {\r\n *    console.log(clickEvent);\r\n *  }\r\n *\r\n *  styleFunc(feature) {\r\n *    return ({\r\n *      clickable: false,\r\n *      fillColor: feature.getProperty('color'),\r\n *      strokeWeight: 1\r\n *    });\r\n *  }\r\n *\r\n *  geoJsonObject: Object = {\r\n *    \"type\": \"FeatureCollection\",\r\n *    \"features\": [\r\n *      {\r\n *        \"type\": \"Feature\",\r\n *        \"properties\": {\r\n *          \"letter\": \"G\",\r\n *          \"color\": \"blue\",\r\n *          \"rank\": \"7\",\r\n *          \"ascii\": \"71\"\r\n *        },\r\n *        \"geometry\": {\r\n *          \"type\": \"Polygon\",\r\n *          \"coordinates\": [\r\n *            [\r\n *              [123.61, -22.14], [122.38, -21.73], [121.06, -21.69], [119.66, -22.22], [119.00, -23.40],\r\n *              [118.65, -24.76], [118.43, -26.07], [118.78, -27.56], [119.22, -28.57], [120.23, -29.49],\r\n *              [121.77, -29.87], [123.57, -29.64], [124.45, -29.03], [124.71, -27.95], [124.80, -26.70],\r\n *              [124.80, -25.60], [123.61, -25.64], [122.56, -25.64], [121.72, -25.72], [121.81, -26.62],\r\n *              [121.86, -26.98], [122.60, -26.90], [123.57, -27.05], [123.57, -27.68], [123.35, -28.18],\r\n *              [122.51, -28.38], [121.77, -28.26], [121.02, -27.91], [120.49, -27.21], [120.14, -26.50],\r\n *              [120.10, -25.64], [120.27, -24.52], [120.67, -23.68], [121.72, -23.32], [122.43, -23.48],\r\n *              [123.04, -24.04], [124.54, -24.28], [124.58, -23.20], [123.61, -22.14]\r\n *            ]\r\n *          ]\r\n *        }\r\n *      },\r\n *      {\r\n *        \"type\": \"Feature\",\r\n *        \"properties\": {\r\n *          \"letter\": \"o\",\r\n *          \"color\": \"red\",\r\n *          \"rank\": \"15\",\r\n *          \"ascii\": \"111\"\r\n *        },\r\n *        \"geometry\": {\r\n *          \"type\": \"Polygon\",\r\n *          \"coordinates\": [\r\n *            [\r\n *              [128.84, -25.76], [128.18, -25.60], [127.96, -25.52], [127.88, -25.52], [127.70, -25.60],\r\n *              [127.26, -25.79], [126.60, -26.11], [126.16, -26.78], [126.12, -27.68], [126.21, -28.42],\r\n *              [126.69, -29.49], [127.74, -29.80], [128.80, -29.72], [129.41, -29.03], [129.72, -27.95],\r\n *              [129.68, -27.21], [129.33, -26.23], [128.84, -25.76]\r\n *            ],\r\n *            [\r\n *              [128.45, -27.44], [128.32, -26.94], [127.70, -26.82], [127.35, -27.05], [127.17, -27.80],\r\n *              [127.57, -28.22], [128.10, -28.42], [128.49, -27.80], [128.45, -27.44]\r\n *            ]\r\n *          ]\r\n *        }\r\n *      },\r\n *      {\r\n *        \"type\": \"Feature\",\r\n *        \"properties\": {\r\n *          \"letter\": \"o\",\r\n *          \"color\": \"yellow\",\r\n *          \"rank\": \"15\",\r\n *          \"ascii\": \"111\"\r\n *        },\r\n *        \"geometry\": {\r\n *          \"type\": \"Polygon\",\r\n *          \"coordinates\": [\r\n *            [\r\n *              [131.87, -25.76], [131.35, -26.07], [130.95, -26.78], [130.82, -27.64], [130.86, -28.53],\r\n *              [131.26, -29.22], [131.92, -29.76], [132.45, -29.87], [133.06, -29.76], [133.72, -29.34],\r\n *              [134.07, -28.80], [134.20, -27.91], [134.07, -27.21], [133.81, -26.31], [133.37, -25.83],\r\n *              [132.71, -25.64], [131.87, -25.76]\r\n *            ],\r\n *            [\r\n *              [133.15, -27.17], [132.71, -26.86], [132.09, -26.90], [131.74, -27.56], [131.79, -28.26],\r\n *              [132.36, -28.45], [132.93, -28.34], [133.15, -27.76], [133.15, -27.17]\r\n *            ]\r\n *          ]\r\n *        }\r\n *      },\r\n *      {\r\n *        \"type\": \"Feature\",\r\n *        \"properties\": {\r\n *          \"letter\": \"g\",\r\n *          \"color\": \"blue\",\r\n *          \"rank\": \"7\",\r\n *          \"ascii\": \"103\"\r\n *        },\r\n *        \"geometry\": {\r\n *          \"type\": \"Polygon\",\r\n *          \"coordinates\": [\r\n *            [\r\n *              [138.12, -25.04], [136.84, -25.16], [135.96, -25.36], [135.26, -25.99], [135, -26.90],\r\n *              [135.04, -27.91], [135.26, -28.88], [136.05, -29.45], [137.02, -29.49], [137.81, -29.49],\r\n *              [137.94, -29.99], [137.90, -31.20], [137.85, -32.24], [136.88, -32.69], [136.45, -32.36],\r\n *              [136.27, -31.80], [134.95, -31.84], [135.17, -32.99], [135.52, -33.43], [136.14, -33.76],\r\n *              [137.06, -33.83], [138.12, -33.65], [138.86, -33.21], [139.30, -32.28], [139.30, -31.24],\r\n *              [139.30, -30.14], [139.21, -28.96], [139.17, -28.22], [139.08, -27.41], [139.08, -26.47],\r\n *              [138.99, -25.40], [138.73, -25.00], [138.12, -25.04]\r\n *            ],\r\n *            [\r\n *              [137.50, -26.54], [136.97, -26.47], [136.49, -26.58], [136.31, -27.13], [136.31, -27.72],\r\n *              [136.58, -27.99], [137.50, -28.03], [137.68, -27.68], [137.59, -26.78], [137.50, -26.54]\r\n *            ]\r\n *          ]\r\n *        }\r\n *      },\r\n *      {\r\n *        \"type\": \"Feature\",\r\n *        \"properties\": {\r\n *          \"letter\": \"l\",\r\n *          \"color\": \"green\",\r\n *          \"rank\": \"12\",\r\n *          \"ascii\": \"108\"\r\n *        },\r\n *        \"geometry\": {\r\n *          \"type\": \"Polygon\",\r\n *          \"coordinates\": [\r\n *            [\r\n *              [140.14, -21.04], [140.31, -29.42], [141.67, -29.49], [141.59, -20.92], [140.14, -21.04]\r\n *            ]\r\n *          ]\r\n *        }\r\n *      },\r\n *      {\r\n *        \"type\": \"Feature\",\r\n *        \"properties\": {\r\n *          \"letter\": \"e\",\r\n *          \"color\": \"red\",\r\n *          \"rank\": \"5\",\r\n *          \"ascii\": \"101\"\r\n *        },\r\n *        \"geometry\": {\r\n *          \"type\": \"Polygon\",\r\n *          \"coordinates\": [\r\n *            [\r\n *              [144.14, -27.41], [145.67, -27.52], [146.86, -27.09], [146.82, -25.64], [146.25, -25.04],\r\n *              [145.45, -24.68], [144.66, -24.60], [144.09, -24.76], [143.43, -25.08], [142.99, -25.40],\r\n *              [142.64, -26.03], [142.64, -27.05], [142.64, -28.26], [143.30, -29.11], [144.18, -29.57],\r\n *              [145.41, -29.64], [146.46, -29.19], [146.64, -28.72], [146.82, -28.14], [144.84, -28.42],\r\n *              [144.31, -28.26], [144.14, -27.41]\r\n *            ],\r\n *            [\r\n *              [144.18, -26.39], [144.53, -26.58], [145.19, -26.62], [145.72, -26.35], [145.81, -25.91],\r\n *              [145.41, -25.68], [144.97, -25.68], [144.49, -25.64], [144, -25.99], [144.18, -26.39]\r\n *            ]\r\n *          ]\r\n *        }\r\n *      }\r\n *    ]\r\n *  };\r\n * }\r\n * ```\r\n */\r\n@Directive({\r\n  selector: 'agm-data-layer',\r\n})\r\nexport class AgmDataLayer implements OnInit, OnDestroy, OnChanges {\r\n  private static _dataOptionsAttributes: Array<string> = ['style'];\r\n\r\n  private _addedToManager = false;\r\n  private _id: string = (layerId++).toString();\r\n  private _subscriptions: Subscription[] = [];\r\n\r\n  /**\r\n   * This event is fired when a feature in the layer is clicked.\r\n   */\r\n  @Output() layerClick: EventEmitter<DataMouseEvent> = new EventEmitter<DataMouseEvent>();\r\n\r\n  /**\r\n   * The geoJson to be displayed\r\n   */\r\n  @Input() geoJson: Object | string | null = null;\r\n\r\n  /**\r\n   * The layer's style function.\r\n   */\r\n  @Input() style: () => void;\r\n\r\n  constructor(private _manager: DataLayerManager) { }\r\n\r\n  ngOnInit() {\r\n    if (this._addedToManager) {\r\n      return;\r\n    }\r\n    this._manager.addDataLayer(this);\r\n    this._addedToManager = true;\r\n    this._addEventListeners();\r\n  }\r\n\r\n  private _addEventListeners() {\r\n    const listeners = [\r\n      { name: 'click', handler: (ev: DataMouseEvent) => this.layerClick.emit(ev) },\r\n    ];\r\n    listeners.forEach((obj) => {\r\n      const os = this._manager.createEventObservable(obj.name, this).subscribe(obj.handler);\r\n      this._subscriptions.push(os);\r\n    });\r\n  }\r\n\r\n  /** @internal */\r\n  id(): string { return this._id; }\r\n\r\n  /** @internal */\r\n  toString(): string { return `AgmDataLayer-${this._id.toString()}`; }\r\n\r\n  /** @internal */\r\n  ngOnDestroy() {\r\n    this._manager.deleteDataLayer(this);\r\n    // unsubscribe all registered observable subscriptions\r\n    this._subscriptions.forEach(s => s.unsubscribe());\r\n  }\r\n\r\n  /** @internal */\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this._addedToManager) {\r\n      return;\r\n    }\r\n\r\n    var geoJsonChange = changes['geoJson'];\r\n    if (geoJsonChange) {\r\n      this._manager.updateGeoJson(this, geoJsonChange.currentValue);\r\n    }\r\n\r\n    let dataOptions: DataOptions = {};\r\n\r\n    AgmDataLayer._dataOptionsAttributes.forEach(k => (dataOptions as any)[k] = changes.hasOwnProperty(k) ? changes[k].currentValue : (this as any)[k]);\r\n\r\n    this._manager.setDataOptions(this, dataOptions);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, from, Observable, timer } from 'rxjs';\r\nimport {\r\n  flatMap,\r\n  map,\r\n  sample,\r\n  shareReplay,\r\n  switchMap,\r\n} from 'rxjs/operators';\r\nimport { LatLng, LatLngBounds, LatLngLiteral } from './google-maps-types';\r\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\r\n\r\ndeclare var google: any;\r\n\r\nexport interface FitBoundsDetails {\r\n  latLng: LatLng | LatLngLiteral;\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport type BoundsMap = Map<string, LatLng | LatLngLiteral>;\r\n\r\n/**\r\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\r\n * of AGM.\r\n */\r\nexport abstract class FitBoundsAccessor {\r\n  abstract getFitBoundsDetails$(): Observable<FitBoundsDetails>;\r\n}\r\n\r\n/**\r\n * The FitBoundsService is responsible for computing the bounds of the a single map.\r\n */\r\n@Injectable()\r\nexport class FitBoundsService {\r\n  protected readonly bounds$: Observable<LatLngBounds>;\r\n  protected readonly _boundsChangeSampleTime$ = new BehaviorSubject<number>(200);\r\n  protected readonly _includeInBounds$ = new BehaviorSubject<BoundsMap>(new Map<string, LatLng | LatLngLiteral>());\r\n\r\n  constructor(loader: MapsAPILoader) {\r\n    this.bounds$ = from(loader.load()).pipe(\r\n      flatMap(() => this._includeInBounds$),\r\n      sample(\r\n        this._boundsChangeSampleTime$.pipe(switchMap(time => timer(0, time))),\r\n      ),\r\n      map(includeInBounds => this._generateBounds(includeInBounds)),\r\n      shareReplay(1),\r\n    );\r\n  }\r\n\r\n  private _generateBounds(\r\n    includeInBounds: Map<string, LatLng | LatLngLiteral>,\r\n  ) {\r\n    const bounds = new google.maps.LatLngBounds() as LatLngBounds;\r\n    includeInBounds.forEach(b => bounds.extend(b));\r\n    return bounds;\r\n  }\r\n\r\n  addToBounds(latLng: LatLng | LatLngLiteral) {\r\n    const id = this._createIdentifier(latLng);\r\n    if (this._includeInBounds$.value.has(id)) {\r\n      return;\r\n    }\r\n    const map = this._includeInBounds$.value;\r\n    map.set(id, latLng);\r\n    this._includeInBounds$.next(map);\r\n  }\r\n\r\n  removeFromBounds(latLng: LatLng | LatLngLiteral) {\r\n    const map = this._includeInBounds$.value;\r\n    map.delete(this._createIdentifier(latLng));\r\n    this._includeInBounds$.next(map);\r\n  }\r\n\r\n  changeFitBoundsChangeSampleTime(timeMs: number) {\r\n    this._boundsChangeSampleTime$.next(timeMs);\r\n  }\r\n\r\n  getBounds$(): Observable<LatLngBounds> {\r\n    return this.bounds$;\r\n  }\r\n\r\n  protected _createIdentifier(latLng: LatLng | LatLngLiteral): string {\r\n    return `${latLng.lat}+${latLng.lng}`;\r\n  }\r\n}\r\n","import { Directive, Input, OnChanges, OnDestroy, OnInit, Self } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\r\n\r\nimport { FitBoundsAccessor, FitBoundsDetails, FitBoundsService } from '../services/fit-bounds';\r\n\r\n/**\r\n * Adds the given directive to the auto fit bounds feature when the value is true.\r\n * To make it work with you custom AGM component, you also have to implement the {@link FitBoundsAccessor} abstract class.\r\n * @example\r\n * <agm-marker [agmFitBounds]=\"true\"></agm-marker>\r\n */\r\n@Directive({\r\n  selector: '[agmFitBounds]',\r\n})\r\nexport class AgmFitBounds implements OnInit, OnDestroy, OnChanges {\r\n  /**\r\n   * If the value is true, the element gets added to the bounds of the map.\r\n   * Default: true.\r\n   */\r\n  @Input() agmFitBounds = true;\r\n\r\n  private _destroyed$: Subject<void> = new Subject<void>();\r\n  private _latestFitBoundsDetails: FitBoundsDetails | null = null;\r\n\r\n  constructor(\r\n    @Self() private readonly _fitBoundsAccessor: FitBoundsAccessor,\r\n    private readonly _fitBoundsService: FitBoundsService,\r\n  ) {}\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  ngOnChanges() {\r\n    this._updateBounds();\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  ngOnInit() {\r\n    this._fitBoundsAccessor\r\n      .getFitBoundsDetails$()\r\n      .pipe(\r\n        distinctUntilChanged(\r\n          (x: FitBoundsDetails, y: FitBoundsDetails) =>\r\n            x.latLng.lat === y.latLng.lat && x.latLng.lng === y.latLng.lng,\r\n        ),\r\n        takeUntil(this._destroyed$),\r\n      )\r\n      .subscribe(details => this._updateBounds(details));\r\n  }\r\n\r\n  /*\r\n   Either the location changed, or visible status changed.\r\n   Possible state changes are\r\n   invisible -> visible\r\n   visible -> invisible\r\n   visible -> visible (new location)\r\n  */\r\n  private _updateBounds(newFitBoundsDetails?: FitBoundsDetails) {\r\n    // either visibility will change, or location, so remove the old one anyway\r\n    if (this._latestFitBoundsDetails) {\r\n      this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\r\n      // don't set latestFitBoundsDetails to null, because we can toggle visibility from\r\n      // true -> false -> true, in which case we still need old value cached here\r\n    }\r\n\r\n    if (newFitBoundsDetails) {\r\n      this._latestFitBoundsDetails = newFitBoundsDetails;\r\n    }\r\n    if (!this._latestFitBoundsDetails) {\r\n      return;\r\n    }\r\n    if (this.agmFitBounds === true) {\r\n      this._fitBoundsService.addToBounds(this._latestFitBoundsDetails.latLng);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  ngOnDestroy() {\r\n    this._destroyed$.next();\r\n    this._destroyed$.complete();\r\n    if (this._latestFitBoundsDetails !== null) {\r\n      this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\r\n    }\r\n  }\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { Observable, Observer } from 'rxjs';\r\n\r\nimport { AgmMarker } from './../../directives/marker';\r\n\r\nimport { GoogleMapsAPIWrapper } from './../google-maps-api-wrapper';\r\nimport { Marker } from './../google-maps-types';\r\n\r\ndeclare var google: any;\r\n\r\n@Injectable()\r\nexport class MarkerManager {\r\n  protected _markers: Map<AgmMarker, Promise<Marker>> =\r\n      new Map<AgmMarker, Promise<Marker>>();\r\n\r\n  constructor(protected _mapsWrapper: GoogleMapsAPIWrapper, protected _zone: NgZone) {}\r\n\r\n  async convertAnimation(uiAnim: 'BOUNCE' | 'DROP' | null): Promise<any>{\r\n    if (uiAnim === null) {\r\n      return null;\r\n    } else {\r\n      return this._mapsWrapper.getNativeMap().then(() => google.maps.Animation[uiAnim]);\r\n    }\r\n  }\r\n\r\n  deleteMarker(marker: AgmMarker): Promise<void> {\r\n    const m = this._markers.get(marker);\r\n    if (m == null) {\r\n      // marker already deleted\r\n      return Promise.resolve();\r\n    }\r\n    return m.then((m: Marker) => {\r\n      return this._zone.run(() => {\r\n        m.setMap(null);\r\n        this._markers.delete(marker);\r\n      });\r\n    });\r\n  }\r\n\r\n  updateMarkerPosition(marker: AgmMarker): Promise<void> {\r\n    return this._markers.get(marker).then(\r\n        (m: Marker) => m.setPosition({lat: marker.latitude, lng: marker.longitude}));\r\n  }\r\n\r\n  updateTitle(marker: AgmMarker): Promise<void> {\r\n    return this._markers.get(marker).then((m: Marker) => m.setTitle(marker.title));\r\n  }\r\n\r\n  updateLabel(marker: AgmMarker): Promise<void> {\r\n    return this._markers.get(marker).then((m: Marker) => { m.setLabel(marker.label); });\r\n  }\r\n\r\n  updateDraggable(marker: AgmMarker): Promise<void> {\r\n    return this._markers.get(marker).then((m: Marker) => m.setDraggable(marker.draggable));\r\n  }\r\n\r\n  updateIcon(marker: AgmMarker): Promise<void> {\r\n    return this._markers.get(marker).then((m: Marker) => m.setIcon(marker.iconUrl));\r\n  }\r\n\r\n  updateOpacity(marker: AgmMarker): Promise<void> {\r\n    return this._markers.get(marker).then((m: Marker) => m.setOpacity(marker.opacity));\r\n  }\r\n\r\n  updateVisible(marker: AgmMarker): Promise<void> {\r\n    return this._markers.get(marker).then((m: Marker) => m.setVisible(marker.visible));\r\n  }\r\n\r\n  updateZIndex(marker: AgmMarker): Promise<void> {\r\n    return this._markers.get(marker).then((m: Marker) => m.setZIndex(marker.zIndex));\r\n  }\r\n\r\n  updateClickable(marker: AgmMarker): Promise<void> {\r\n    return this._markers.get(marker).then((m: Marker) => m.setClickable(marker.clickable));\r\n  }\r\n\r\n  async updateAnimation(marker: AgmMarker) {\r\n    const m = await this._markers.get(marker);\r\n    m.setAnimation(await this.convertAnimation(marker.animation));\r\n  }\r\n\r\n  addMarker(marker: AgmMarker) {\r\n    const markerPromise = new Promise<Marker>(async (resolve) =>\r\n     this._mapsWrapper.createMarker({\r\n        position: {lat: marker.latitude, lng: marker.longitude},\r\n        label: marker.label,\r\n        draggable: marker.draggable,\r\n        icon: marker.iconUrl,\r\n        opacity: marker.opacity,\r\n        visible: marker.visible,\r\n        zIndex: marker.zIndex,\r\n        title: marker.title,\r\n        clickable: marker.clickable,\r\n        animation: await this.convertAnimation(marker.animation),\r\n      }).then(resolve));\r\n    this._markers.set(marker, markerPromise);\r\n  }\r\n\r\n  getNativeMarker(marker: AgmMarker): Promise<Marker> {\r\n    return this._markers.get(marker);\r\n  }\r\n\r\n  createEventObservable<T>(eventName: string, marker: AgmMarker): Observable<T> {\r\n    return new Observable((observer: Observer<T>) => {\r\n      this._markers.get(marker).then((m: Marker) => {\r\n        m.addListener(eventName, (e: T) => this._zone.run(() => observer.next(e)));\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { Observable, Observer } from 'rxjs';\r\n\r\nimport { AgmInfoWindow } from '../../directives/info-window';\r\n\r\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\r\nimport { InfoWindow, InfoWindowOptions } from '../google-maps-types';\r\nimport { MarkerManager } from './marker-manager';\r\n\r\n@Injectable()\r\nexport class InfoWindowManager {\r\n  private _infoWindows: Map<AgmInfoWindow, Promise<InfoWindow>> =\r\n      new Map<AgmInfoWindow, Promise<InfoWindow>>();\r\n\r\n  constructor(\r\n      private _mapsWrapper: GoogleMapsAPIWrapper, private _zone: NgZone,\r\n      private _markerManager: MarkerManager) {}\r\n\r\n  deleteInfoWindow(infoWindow: AgmInfoWindow): Promise<void> {\r\n    const iWindow = this._infoWindows.get(infoWindow);\r\n    if (iWindow == null) {\r\n      // info window already deleted\r\n      return Promise.resolve();\r\n    }\r\n    return iWindow.then((i: InfoWindow) => {\r\n      return this._zone.run(() => {\r\n        i.close();\r\n        this._infoWindows.delete(infoWindow);\r\n      });\r\n    });\r\n  }\r\n\r\n  setPosition(infoWindow: AgmInfoWindow): Promise<void> {\r\n    return this._infoWindows.get(infoWindow).then((i: InfoWindow) => i.setPosition({\r\n      lat: infoWindow.latitude,\r\n      lng: infoWindow.longitude,\r\n    }));\r\n  }\r\n\r\n  setZIndex(infoWindow: AgmInfoWindow): Promise<void> {\r\n    return this._infoWindows.get(infoWindow)\r\n        .then((i: InfoWindow) => i.setZIndex(infoWindow.zIndex));\r\n  }\r\n\r\n  open(infoWindow: AgmInfoWindow): Promise<void> {\r\n    return this._infoWindows.get(infoWindow).then((w) => {\r\n      if (infoWindow.hostMarker != null) {\r\n        return this._markerManager.getNativeMarker(infoWindow.hostMarker).then((marker) => {\r\n          return this._mapsWrapper.getNativeMap().then((map) => w.open(map, marker));\r\n        });\r\n      }\r\n      return this._mapsWrapper.getNativeMap().then((map) => w.open(map));\r\n    });\r\n  }\r\n\r\n  close(infoWindow: AgmInfoWindow): Promise<void> {\r\n    return this._infoWindows.get(infoWindow).then((w) => w.close());\r\n  }\r\n\r\n  setOptions(infoWindow: AgmInfoWindow, options: InfoWindowOptions) {\r\n    return this._infoWindows.get(infoWindow).then((i: InfoWindow) => i.setOptions(options));\r\n  }\r\n\r\n  addInfoWindow(infoWindow: AgmInfoWindow) {\r\n    const options: InfoWindowOptions = {\r\n      content: infoWindow.content,\r\n      maxWidth: infoWindow.maxWidth,\r\n      zIndex: infoWindow.zIndex,\r\n      disableAutoPan: infoWindow.disableAutoPan,\r\n    };\r\n    if (typeof infoWindow.latitude === 'number' && typeof infoWindow.longitude === 'number') {\r\n      options.position = {lat: infoWindow.latitude, lng: infoWindow.longitude};\r\n    }\r\n    const infoWindowPromise = this._mapsWrapper.createInfoWindow(options);\r\n    this._infoWindows.set(infoWindow, infoWindowPromise);\r\n  }\r\n\r\n   /**\r\n    * Creates a Google Maps event listener for the given InfoWindow as an Observable\r\n    */\r\n  createEventObservable<T>(eventName: string, infoWindow: AgmInfoWindow): Observable<T> {\r\n    return new Observable((observer: Observer<T>) => {\r\n      this._infoWindows.get(infoWindow).then((i: InfoWindow) => {\r\n        i.addListener(eventName, (e: T) => this._zone.run(() => observer.next(e)));\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Component, ElementRef, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChange } from '@angular/core';\r\n\r\nimport { InfoWindowManager } from '../services/managers/info-window-manager';\r\n\r\nimport { AgmMarker } from './marker';\r\n\r\nlet infoWindowId = 0;\r\n\r\n/**\r\n * AgmInfoWindow renders a info window inside a {@link AgmMarker} or standalone.\r\n *\r\n * ### Example\r\n * ```typescript\r\n * import { Component } from '@angular/core';\r\n *\r\n * @Component({\r\n *  selector: 'my-map-cmp',\r\n *  styles: [`\r\n *    .agm-map-container {\r\n *      height: 300px;\r\n *    }\r\n * `],\r\n *  template: `\r\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\r\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\r\n *        <agm-info-window [disableAutoPan]=\"true\">\r\n *          Hi, this is the content of the <strong>info window</strong>\r\n *        </agm-info-window>\r\n *      </agm-marker>\r\n *    </agm-map>\r\n *  `\r\n * })\r\n * ```\r\n */\r\n@Component({\r\n  selector: 'agm-info-window',\r\n  template: `<div class='agm-info-window-content'>\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n})\r\nexport class AgmInfoWindow implements OnDestroy, OnChanges, OnInit {\r\n  /**\r\n   * The latitude position of the info window (only usefull if you use it ouside of a {@link\r\n   * AgmMarker}).\r\n   */\r\n  @Input() latitude: number;\r\n\r\n  /**\r\n   * The longitude position of the info window (only usefull if you use it ouside of a {@link\r\n   * AgmMarker}).\r\n   */\r\n  @Input() longitude: number;\r\n\r\n  /**\r\n   * Disable auto-pan on open. By default, the info window will pan the map so that it is fully\r\n   * visible when it opens.\r\n   */\r\n  @Input() disableAutoPan: boolean;\r\n\r\n  /**\r\n   * All InfoWindows are displayed on the map in order of their zIndex, with higher values\r\n   * displaying in front of InfoWindows with lower values. By default, InfoWindows are displayed\r\n   * according to their latitude, with InfoWindows of lower latitudes appearing in front of\r\n   * InfoWindows at higher latitudes. InfoWindows are always displayed in front of markers.\r\n   */\r\n  @Input() zIndex: number;\r\n\r\n  /**\r\n   * Maximum width of the infowindow, regardless of content's width. This value is only considered\r\n   * if it is set before a call to open. To change the maximum width when changing content, call\r\n   * close, update maxWidth, and then open.\r\n   */\r\n  @Input() maxWidth: number;\r\n\r\n  /**\r\n   * Holds the marker that is the host of the info window (if available)\r\n   */\r\n  hostMarker: AgmMarker;\r\n\r\n  /**\r\n   * Holds the native element that is used for the info window content.\r\n   */\r\n  content: Node;\r\n\r\n  /**\r\n   * Sets the open state for the InfoWindow. You can also call the open() and close() methods.\r\n   */\r\n  @Input() isOpen = false;\r\n\r\n  /**\r\n   * Emits an event when the info window is closed.\r\n   */\r\n  @Output() infoWindowClose: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  private static _infoWindowOptionsInputs: string[] = ['disableAutoPan', 'maxWidth'];\r\n  private _infoWindowAddedToManager = false;\r\n  private _id: string = (infoWindowId++).toString();\r\n\r\n  constructor(private _infoWindowManager: InfoWindowManager, private _el: ElementRef) {}\r\n\r\n  ngOnInit() {\r\n    this.content = this._el.nativeElement.querySelector('.agm-info-window-content');\r\n    this._infoWindowManager.addInfoWindow(this);\r\n    this._infoWindowAddedToManager = true;\r\n    this._updateOpenState();\r\n    this._registerEventListeners();\r\n  }\r\n\r\n  /** @internal */\r\n  ngOnChanges(changes: {[key: string]: SimpleChange}) {\r\n    if (!this._infoWindowAddedToManager) {\r\n      return;\r\n    }\r\n    if ((changes['latitude'] || changes['longitude']) && typeof this.latitude === 'number' &&\r\n        typeof this.longitude === 'number') {\r\n      this._infoWindowManager.setPosition(this);\r\n    }\r\n    if (changes['zIndex']) {\r\n      this._infoWindowManager.setZIndex(this);\r\n    }\r\n    if (changes['isOpen']) {\r\n      this._updateOpenState();\r\n    }\r\n    this._setInfoWindowOptions(changes);\r\n  }\r\n\r\n  private _registerEventListeners() {\r\n    this._infoWindowManager.createEventObservable('closeclick', this).subscribe(() => {\r\n      this.isOpen = false;\r\n      this.infoWindowClose.emit();\r\n    });\r\n  }\r\n\r\n  private _updateOpenState() {\r\n    this.isOpen ? this.open() : this.close();\r\n  }\r\n\r\n  private _setInfoWindowOptions(changes: {[key: string]: SimpleChange}) {\r\n    let options: {[propName: string]: any} = {};\r\n    let optionKeys = Object.keys(changes).filter(\r\n        k => AgmInfoWindow._infoWindowOptionsInputs.indexOf(k) !== -1);\r\n    optionKeys.forEach((k) => { options[k] = changes[k].currentValue; });\r\n    this._infoWindowManager.setOptions(this, options);\r\n  }\r\n\r\n  /**\r\n   * Opens the info window.\r\n   */\r\n  open(): Promise<void> { return this._infoWindowManager.open(this); }\r\n\r\n  /**\r\n   * Closes the info window.\r\n   */\r\n  close(): Promise<void> {\r\n    return this._infoWindowManager.close(this).then(() => { this.infoWindowClose.emit(); });\r\n  }\r\n\r\n  /** @internal */\r\n  id(): string { return this._id; }\r\n\r\n  /** @internal */\r\n  toString(): string { return 'AgmInfoWindow-' + this._id.toString(); }\r\n\r\n  /** @internal */\r\n  ngOnDestroy() { this._infoWindowManager.deleteInfoWindow(this); }\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { Observable, Observer } from 'rxjs';\r\n\r\nimport { AgmKmlLayer } from './../../directives/kml-layer';\r\nimport { GoogleMapsAPIWrapper } from './../google-maps-api-wrapper';\r\nimport { KmlLayer, KmlLayerOptions } from './../google-maps-types';\r\n\r\ndeclare var google: any;\r\n\r\n/**\r\n * Manages all KML Layers for a Google Map instance.\r\n */\r\n@Injectable()\r\nexport class KmlLayerManager {\r\n  private _layers: Map<AgmKmlLayer, Promise<KmlLayer>> =\r\n      new Map<AgmKmlLayer, Promise<KmlLayer>>();\r\n\r\n  constructor(private _wrapper: GoogleMapsAPIWrapper, private _zone: NgZone) {}\r\n\r\n  /**\r\n   * Adds a new KML Layer to the map.\r\n   */\r\n  addKmlLayer(layer: AgmKmlLayer) {\r\n    const newLayer = this._wrapper.getNativeMap().then(m => {\r\n      return new google.maps.KmlLayer({\r\n        clickable: layer.clickable,\r\n        map: m,\r\n        preserveViewport: layer.preserveViewport,\r\n        screenOverlays: layer.screenOverlays,\r\n        suppressInfoWindows: layer.suppressInfoWindows,\r\n        url: layer.url,\r\n        zIndex: layer.zIndex,\r\n      } as KmlLayerOptions);\r\n    });\r\n    this._layers.set(layer, newLayer);\r\n  }\r\n\r\n  setOptions(layer: AgmKmlLayer, options: KmlLayerOptions) {\r\n    this._layers.get(layer).then(l => l.setOptions(options));\r\n  }\r\n\r\n  deleteKmlLayer(layer: AgmKmlLayer) {\r\n    this._layers.get(layer).then(l => {\r\n      l.setMap(null);\r\n      this._layers.delete(layer);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates a Google Maps event listener for the given KmlLayer as an Observable\r\n   */\r\n  createEventObservable<T>(eventName: string, layer: AgmKmlLayer): Observable<T> {\r\n    return new Observable((observer: Observer<T>) => {\r\n      this._layers.get(layer).then((m: KmlLayer) => {\r\n        m.addListener(eventName, (e: T) => this._zone.run(() => observer.next(e)));\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Directive, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { KmlMouseEvent } from './../services/google-maps-types';\r\nimport { KmlLayerManager } from './../services/managers/kml-layer-manager';\r\n\r\nlet layerId = 0;\r\n\r\n@Directive({\r\n  selector: 'agm-kml-layer',\r\n})\r\nexport class AgmKmlLayer implements OnInit, OnDestroy, OnChanges {\r\n  private _addedToManager = false;\r\n  private _id: string = (layerId++).toString();\r\n  private _subscriptions: Subscription[] = [];\r\n  private static _kmlLayerOptions: string[] =\r\n      ['clickable', 'preserveViewport', 'screenOverlays', 'suppressInfoWindows', 'url', 'zIndex'];\r\n\r\n  /**\r\n   * If true, the layer receives mouse events. Default value is true.\r\n   */\r\n  @Input() clickable = true;\r\n\r\n  /**\r\n   * By default, the input map is centered and zoomed to the bounding box of the contents of the\r\n   * layer.\r\n   * If this option is set to true, the viewport is left unchanged, unless the map's center and zoom\r\n   * were never set.\r\n   */\r\n  @Input() preserveViewport = false;\r\n\r\n  /**\r\n   * Whether to render the screen overlays. Default true.\r\n   */\r\n  @Input() screenOverlays = true;\r\n\r\n  /**\r\n   * Suppress the rendering of info windows when layer features are clicked.\r\n   */\r\n  @Input() suppressInfoWindows = false;\r\n\r\n  /**\r\n   * The URL of the KML document to display.\r\n   */\r\n  @Input() url: string = null;\r\n\r\n  /**\r\n   * The z-index of the layer.\r\n   */\r\n  @Input() zIndex: number | null = null;\r\n\r\n  /**\r\n   * This event is fired when a feature in the layer is clicked.\r\n   */\r\n  @Output() layerClick: EventEmitter<KmlMouseEvent> = new EventEmitter<KmlMouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the KML layers default viewport has changed.\r\n   */\r\n  @Output() defaultViewportChange: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /**\r\n   * This event is fired when the KML layer has finished loading.\r\n   * At this point it is safe to read the status property to determine if the layer loaded\r\n   * successfully.\r\n   */\r\n  @Output() statusChange: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  constructor(private _manager: KmlLayerManager) {}\r\n\r\n  ngOnInit() {\r\n    if (this._addedToManager) {\r\n      return;\r\n    }\r\n    this._manager.addKmlLayer(this);\r\n    this._addedToManager = true;\r\n    this._addEventListeners();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this._addedToManager) {\r\n      return;\r\n    }\r\n    this._updatePolygonOptions(changes);\r\n  }\r\n\r\n  private _updatePolygonOptions(changes: SimpleChanges) {\r\n    const options = Object.keys(changes)\r\n                        .filter(k => AgmKmlLayer._kmlLayerOptions.indexOf(k) !== -1)\r\n                        .reduce((obj: any, k: string) => {\r\n                          obj[k] = changes[k].currentValue;\r\n                          return obj;\r\n                        }, {});\r\n    if (Object.keys(options).length > 0) {\r\n      this._manager.setOptions(this, options);\r\n    }\r\n  }\r\n\r\n  private _addEventListeners() {\r\n    const listeners = [\r\n      {name: 'click', handler: (ev: KmlMouseEvent) => this.layerClick.emit(ev)},\r\n      {name: 'defaultviewport_changed', handler: () => this.defaultViewportChange.emit()},\r\n      {name: 'status_changed', handler: () => this.statusChange.emit()},\r\n    ];\r\n    listeners.forEach((obj) => {\r\n      const os = this._manager.createEventObservable(obj.name, this).subscribe(obj.handler);\r\n      this._subscriptions.push(os);\r\n    });\r\n  }\r\n\r\n  /** @internal */\r\n  id(): string { return this._id; }\r\n\r\n  /** @internal */\r\n  toString(): string { return `AgmKmlLayer-${this._id.toString()}`; }\r\n\r\n  /** @internal */\r\n  ngOnDestroy() {\r\n    this._manager.deleteKmlLayer(this);\r\n    // unsubscribe all registered observable subscriptions\r\n    this._subscriptions.forEach(s => s.unsubscribe());\r\n  }\r\n}\r\n","import { fromEventPattern, Observable } from 'rxjs';\r\nimport { MapsEventListener, MVCArray } from '../services/google-maps-types';\r\n\r\nexport function createMVCEventObservable<T>(array: MVCArray<T>): Observable<MVCEvent<T>>{\r\n  const eventNames = ['insert_at', 'remove_at', 'set_at'];\r\n  return fromEventPattern(\r\n    (handler: Function) => eventNames.map(evName => array.addListener(evName,\r\n      (index: number, previous?: T) => handler.apply(array, [ {'newArr': array.getArray(), evName, index, previous} as MVCEvent<T>]))),\r\n    (_handler: Function, evListeners: MapsEventListener[]) => evListeners.forEach(evListener => evListener.remove()));\r\n}\r\n\r\nexport interface MVCEvent<T> {\r\n  newArr: T[];\r\n  evName: MvcEventType;\r\n  index: number;\r\n  previous?: T;\r\n}\r\n\r\nexport type MvcEventType = 'insert_at' | 'remove_at' | 'set_at';\r\n\r\nexport class MvcArrayMock<T> implements MVCArray<T> {\r\n  private vals: T[] = [];\r\n  private listeners: {\r\n    'remove_at': Function[];\r\n    'insert_at': Function[];\r\n    'set_at': Function[];\r\n    [key: string]: Function[];\r\n  } = {\r\n    'remove_at': [] as Function[],\r\n    'insert_at': [] as Function[],\r\n    'set_at': [] as Function[],\r\n  };\r\n  clear(): void {\r\n    for (let i = this.vals.length - 1; i >= 0; i--) {\r\n        this.removeAt(i);\r\n    }\r\n  }\r\n  getArray(): T[] {\r\n    return [...this.vals];\r\n  }\r\n  getAt(i: number): T {\r\n    return this.vals[i];\r\n  }\r\n  getLength(): number {\r\n    return this.vals.length;\r\n  }\r\n  insertAt(i: number, elem: T): void {\r\n    this.vals.splice(i, 0, elem);\r\n    this.listeners.insert_at.map(listener => listener(i));\r\n  }\r\n  pop(): T {\r\n    const deleted = this.vals.pop();\r\n    this.listeners.remove_at.map(listener => listener(this.vals.length, deleted));\r\n    return deleted;\r\n  }\r\n  push(elem: T): number {\r\n    this.vals.push(elem);\r\n    this.listeners.insert_at.map(listener => listener(this.vals.length - 1));\r\n    return this.vals.length;\r\n  }\r\n  removeAt(i: number): T {\r\n    const deleted = this.vals.splice(i, 1)[0];\r\n    this.listeners.remove_at.map(listener => listener(i, deleted));\r\n    return deleted;\r\n  }\r\n  setAt(i: number, elem: T): void {\r\n    const deleted = this.vals[i];\r\n    this.vals[i] = elem;\r\n    this.listeners.set_at.map(listener => listener(i, deleted));\r\n  }\r\n  forEach(callback: (elem: T, i: number) => void): void {\r\n    this.vals.forEach(callback);\r\n  }\r\n  addListener(eventName: string, handler: Function): MapsEventListener {\r\n    const listenerArr = this.listeners[eventName];\r\n    listenerArr.push(handler);\r\n    return {\r\n        remove: () => {\r\n            listenerArr.splice(listenerArr.indexOf(handler), 1);\r\n        },\r\n    };\r\n  }\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { merge, Observable, Observer } from 'rxjs';\r\nimport { map, skip, startWith, switchMap } from 'rxjs/operators';\r\n\r\nimport { AgmPolygon, PathChangePolygonPathEvent, PathCollectionChangePolygonPathEvent, PolygonPathEvent } from '../../directives/polygon';\r\nimport { createMVCEventObservable, MVCEvent } from '../../utils/mvcarray-utils';\r\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\r\nimport { LatLng, MVCArray, Polygon } from '../google-maps-types';\r\n\r\n@Injectable()\r\nexport class PolygonManager {\r\n  private _polygons: Map<AgmPolygon, Promise<Polygon>> =\r\n    new Map<AgmPolygon, Promise<Polygon>>();\r\n\r\n  constructor(private _mapsWrapper: GoogleMapsAPIWrapper, private _zone: NgZone) { }\r\n\r\n  addPolygon(path: AgmPolygon) {\r\n    const polygonPromise = this._mapsWrapper.createPolygon({\r\n      clickable: path.clickable,\r\n      draggable: path.draggable,\r\n      editable: path.editable,\r\n      fillColor: path.fillColor,\r\n      fillOpacity: path.fillOpacity,\r\n      geodesic: path.geodesic,\r\n      paths: path.paths,\r\n      strokeColor: path.strokeColor,\r\n      strokeOpacity: path.strokeOpacity,\r\n      strokeWeight: path.strokeWeight,\r\n      visible: path.visible,\r\n      zIndex: path.zIndex,\r\n    });\r\n    this._polygons.set(path, polygonPromise);\r\n  }\r\n\r\n  updatePolygon(polygon: AgmPolygon): Promise<void> {\r\n    const m = this._polygons.get(polygon);\r\n    if (m == null) {\r\n      return Promise.resolve();\r\n    }\r\n    return m.then((l: Polygon) => this._zone.run(() => { l.setPaths(polygon.paths); }));\r\n  }\r\n\r\n  setPolygonOptions(path: AgmPolygon, options: { [propName: string]: any }): Promise<void> {\r\n    return this._polygons.get(path).then((l: Polygon) => { l.setOptions(options); });\r\n  }\r\n\r\n  deletePolygon(paths: AgmPolygon): Promise<void> {\r\n    const m = this._polygons.get(paths);\r\n    if (m == null) {\r\n      return Promise.resolve();\r\n    }\r\n    return m.then((l: Polygon) => {\r\n      return this._zone.run(() => {\r\n        l.setMap(null);\r\n        this._polygons.delete(paths);\r\n      });\r\n    });\r\n  }\r\n\r\n  getPath(polygon: AgmPolygon): Promise<Array<LatLng>> {\r\n    return this._polygons.get(polygon)\r\n      .then((polygon) => polygon.getPath().getArray());\r\n  }\r\n\r\n  getPaths(polygon: AgmPolygon): Promise<Array<Array<LatLng>>> {\r\n    return this._polygons.get(polygon)\r\n      .then((polygon) => polygon.getPaths().getArray().map((p) => p.getArray()));\r\n  }\r\n\r\n  createEventObservable<T>(eventName: string, path: AgmPolygon): Observable<T> {\r\n    return new Observable((observer: Observer<T>) => {\r\n      this._polygons.get(path).then((l: Polygon) => {\r\n        l.addListener(eventName, (e: T) => this._zone.run(() => observer.next(e)));\r\n      });\r\n    });\r\n  }\r\n\r\n  async createPathEventObservable(agmPolygon: AgmPolygon): Promise<Observable<PolygonPathEvent<any>>> {\r\n    const polygon = await this._polygons.get(agmPolygon);\r\n    const paths = polygon.getPaths();\r\n    const pathsChanges$ = createMVCEventObservable(paths);\r\n    return pathsChanges$.pipe(startWith(({ newArr: paths.getArray() } as MVCEvent<MVCArray<LatLng>>)), // in order to subscribe to them all\r\n      switchMap(parentMVEvent => merge(...// rest parameter\r\n        parentMVEvent.newArr.map((chMVC, index) =>\r\n          createMVCEventObservable(chMVC)\r\n          .pipe(map(chMVCEvent => ({ parentMVEvent, chMVCEvent, pathIndex: index })))))\r\n        .pipe(startWith({ parentMVEvent, chMVCEvent: null, pathIndex: null }))), // start the merged ob with an event signinifing change to parent\r\n      skip(1), // skip the manually added event\r\n      map(({ parentMVEvent, chMVCEvent, pathIndex }) => {\r\n        let retVal;\r\n        if (!chMVCEvent) {\r\n          retVal = {\r\n            newArr: parentMVEvent.newArr.map(subArr => subArr.getArray().map(latLng => latLng.toJSON())),\r\n            eventName: parentMVEvent.evName,\r\n            index: parentMVEvent.index,\r\n          } as PathCollectionChangePolygonPathEvent;\r\n          if (parentMVEvent.previous) {\r\n            retVal.previous =  parentMVEvent.previous.getArray();\r\n          }\r\n        } else {\r\n          retVal = {\r\n            newArr: parentMVEvent.newArr.map(subArr => subArr.getArray().map(latLng => latLng.toJSON())),\r\n            pathIndex,\r\n            eventName: chMVCEvent.evName,\r\n            index: chMVCEvent.index,\r\n          } as PathChangePolygonPathEvent;\r\n          if (chMVCEvent.previous) {\r\n            retVal.previous = chMVCEvent.previous;\r\n          }\r\n        }\r\n        return retVal;\r\n      }));\r\n  }\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { Observable, Observer } from 'rxjs';\r\n\r\nimport { AgmPolyline, PathEvent } from '../../directives/polyline';\r\nimport { AgmPolylinePoint } from '../../directives/polyline-point';\r\nimport { createMVCEventObservable } from '../../utils/mvcarray-utils';\r\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\r\nimport { IconSequence, LatLng, LatLngLiteral, MVCArray, Polyline } from '../google-maps-types';\r\n\r\ndeclare var google: any;\r\n\r\n@Injectable()\r\nexport class PolylineManager {\r\n  private _polylines: Map<AgmPolyline, Promise<Polyline>> =\r\n      new Map<AgmPolyline, Promise<Polyline>>();\r\n\r\n  constructor(private _mapsWrapper: GoogleMapsAPIWrapper, private _zone: NgZone) {}\r\n\r\n  private static _convertPoints(line: AgmPolyline): Array<LatLngLiteral> {\r\n    const path = line._getPoints().map((point: AgmPolylinePoint) => {\r\n      return {lat: point.latitude, lng: point.longitude} as LatLngLiteral;\r\n    });\r\n    return path;\r\n  }\r\n\r\n  private static _convertPath(path: 'CIRCLE' | 'BACKWARD_CLOSED_ARROW' | 'BACKWARD_OPEN_ARROW' | 'FORWARD_CLOSED_ARROW' |\r\n  'FORWARD_CLOSED_ARROW' | string): number | string{\r\n    const symbolPath = google.maps.SymbolPath[path];\r\n    if (typeof symbolPath === 'number') {\r\n      return symbolPath;\r\n    } else{\r\n      return path;\r\n    }\r\n  }\r\n\r\n  private static _convertIcons(line: AgmPolyline): Array<IconSequence> {\r\n    const icons = line._getIcons().map(agmIcon => ({\r\n      fixedRotation: agmIcon.fixedRotation,\r\n      offset: agmIcon.offset,\r\n      repeat: agmIcon.repeat,\r\n      icon: {\r\n        anchor: new google.maps.Point(agmIcon.anchorX, agmIcon.anchorY),\r\n        fillColor: agmIcon.fillColor,\r\n        fillOpacity: agmIcon.fillOpacity,\r\n        path: PolylineManager._convertPath(agmIcon.path),\r\n        rotation: agmIcon.rotation,\r\n        scale: agmIcon.scale,\r\n        strokeColor: agmIcon.strokeColor,\r\n        strokeOpacity: agmIcon.strokeOpacity,\r\n        strokeWeight: agmIcon.strokeWeight,\r\n      },\r\n    } as IconSequence));\r\n    // prune undefineds;\r\n    icons.forEach(icon => {\r\n      Object.entries(icon).forEach(([key, val]) => {\r\n        if (typeof val === 'undefined') {\r\n          delete (icon as any)[key];\r\n        }\r\n      });\r\n      if (typeof icon.icon.anchor.x === 'undefined' ||\r\n        typeof icon.icon.anchor.y === 'undefined') {\r\n          delete icon.icon.anchor;\r\n        }\r\n    });\r\n    return icons;\r\n  }\r\n\r\n  addPolyline(line: AgmPolyline) {\r\n    const polylinePromise = this._mapsWrapper.getNativeMap()\r\n    .then(() => [ PolylineManager._convertPoints(line),\r\n                  PolylineManager._convertIcons(line)])\r\n    .then(([path, icons]: [LatLngLiteral[], IconSequence[]]) =>\r\n      this._mapsWrapper.createPolyline({\r\n        clickable: line.clickable,\r\n        draggable: line.draggable,\r\n        editable: line.editable,\r\n        geodesic: line.geodesic,\r\n        strokeColor: line.strokeColor,\r\n        strokeOpacity: line.strokeOpacity,\r\n        strokeWeight: line.strokeWeight,\r\n        visible: line.visible,\r\n        zIndex: line.zIndex,\r\n        path: path,\r\n        icons: icons,\r\n    }));\r\n    this._polylines.set(line, polylinePromise);\r\n  }\r\n\r\n  updatePolylinePoints(line: AgmPolyline): Promise<void> {\r\n    const path = PolylineManager._convertPoints(line);\r\n    const m = this._polylines.get(line);\r\n    if (m == null) {\r\n      return Promise.resolve();\r\n    }\r\n    return m.then((l: Polyline) => { return this._zone.run(() => { l.setPath(path); }); });\r\n  }\r\n\r\n  async updateIconSequences(line: AgmPolyline): Promise<void> {\r\n    await this._mapsWrapper.getNativeMap();\r\n    const icons = PolylineManager._convertIcons(line);\r\n    const m = this._polylines.get(line);\r\n    if (m == null) {\r\n      return;\r\n    }\r\n    return m.then(l => this._zone.run(() => l.setOptions({icons: icons}) ) );\r\n  }\r\n\r\n  setPolylineOptions(line: AgmPolyline, options: {[propName: string]: any}):\r\n      Promise<void> {\r\n    return this._polylines.get(line).then((l: Polyline) => { l.setOptions(options); });\r\n  }\r\n\r\n  deletePolyline(line: AgmPolyline): Promise<void> {\r\n    const m = this._polylines.get(line);\r\n    if (m == null) {\r\n      return Promise.resolve();\r\n    }\r\n    return m.then((l: Polyline) => {\r\n      return this._zone.run(() => {\r\n        l.setMap(null);\r\n        this._polylines.delete(line);\r\n      });\r\n    });\r\n  }\r\n\r\n  private async getMVCPath(agmPolyline: AgmPolyline): Promise<MVCArray<LatLng>> {\r\n    const polyline = await this._polylines.get(agmPolyline);\r\n    return polyline.getPath();\r\n  }\r\n\r\n  async getPath(agmPolyline: AgmPolyline): Promise<Array<LatLng>> {\r\n    return (await this.getMVCPath(agmPolyline)).getArray();\r\n  }\r\n\r\n  createEventObservable<T>(eventName: string, line: AgmPolyline): Observable<T> {\r\n    return new Observable((observer: Observer<T>) => {\r\n      this._polylines.get(line).then((l: Polyline) => {\r\n        l.addListener(eventName, (e: T) => this._zone.run(() => observer.next(e)));\r\n      });\r\n    });\r\n  }\r\n\r\n  async createPathEventObservable(line: AgmPolyline): Promise<Observable<PathEvent>> {\r\n    const mvcPath = await this.getMVCPath(line);\r\n    return createMVCEventObservable(mvcPath);\r\n  }\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\n\r\nimport { Observable, Observer } from 'rxjs';\r\n\r\nimport { AgmRectangle } from '../../directives/rectangle';\r\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\r\nimport * as mapTypes from '../google-maps-types';\r\n\r\n@Injectable()\r\nexport class RectangleManager {\r\n  private _rectangles: Map<AgmRectangle, Promise<mapTypes.Rectangle>> =\r\n      new Map<AgmRectangle, Promise<mapTypes.Rectangle>>();\r\n\r\n  constructor(private _apiWrapper: GoogleMapsAPIWrapper, private _zone: NgZone) {}\r\n\r\n  addRectangle(rectangle: AgmRectangle) {\r\n    this._rectangles.set(rectangle, this._apiWrapper.createRectangle({\r\n      bounds: {\r\n        north: rectangle.north,\r\n        east: rectangle.east,\r\n        south: rectangle.south,\r\n        west: rectangle.west,\r\n      },\r\n      clickable: rectangle.clickable,\r\n      draggable: rectangle.draggable,\r\n      editable: rectangle.editable,\r\n      fillColor: rectangle.fillColor,\r\n      fillOpacity: rectangle.fillOpacity,\r\n      strokeColor: rectangle.strokeColor,\r\n      strokeOpacity: rectangle.strokeOpacity,\r\n      strokePosition: rectangle.strokePosition,\r\n      strokeWeight: rectangle.strokeWeight,\r\n      visible: rectangle.visible,\r\n      zIndex: rectangle.zIndex,\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Removes the given rectangle from the map.\r\n   */\r\n  removeRectangle(rectangle: AgmRectangle): Promise<void> {\r\n    return this._rectangles.get(rectangle).then((r) => {\r\n      r.setMap(null);\r\n      this._rectangles.delete(rectangle);\r\n    });\r\n  }\r\n\r\n  setOptions(rectangle: AgmRectangle, options: mapTypes.RectangleOptions): Promise<void> {\r\n    return this._rectangles.get(rectangle).then((r) => r.setOptions(options));\r\n  }\r\n\r\n  getBounds(rectangle: AgmRectangle): Promise<mapTypes.LatLngBounds> {\r\n    return this._rectangles.get(rectangle).then((r) => r.getBounds());\r\n  }\r\n\r\n  setBounds(rectangle: AgmRectangle): Promise<void> {\r\n    return this._rectangles.get(rectangle).then((r) => {\r\n      return r.setBounds({\r\n        north: rectangle.north,\r\n        east: rectangle.east,\r\n        south: rectangle.south,\r\n        west: rectangle.west,\r\n      });\r\n    });\r\n  }\r\n\r\n  setEditable(rectangle: AgmRectangle): Promise<void> {\r\n    return this._rectangles.get(rectangle).then((r) => {\r\n      return r.setEditable(rectangle.editable);\r\n    });\r\n  }\r\n\r\n  setDraggable(rectangle: AgmRectangle): Promise<void> {\r\n    return this._rectangles.get(rectangle).then((r) => {\r\n      return r.setDraggable(rectangle.draggable);\r\n    });\r\n  }\r\n\r\n  setVisible(rectangle: AgmRectangle): Promise<void> {\r\n    return this._rectangles.get(rectangle).then((r) => {\r\n      return r.setVisible(rectangle.visible);\r\n    });\r\n  }\r\n\r\n  createEventObservable<T>(eventName: string, rectangle: AgmRectangle): Observable<T> {\r\n    return Observable.create((observer: Observer<T>) => {\r\n      let listener: mapTypes.MapsEventListener = null;\r\n      this._rectangles.get(rectangle).then((r) => {\r\n        listener = r.addListener(eventName, (e: T) => this._zone.run(() => observer.next(e)));\r\n      });\r\n\r\n      return () => {\r\n        if (listener !== null) {\r\n          listener.remove();\r\n        }\r\n      };\r\n    });\r\n  }\r\n}\r\n","import { isPlatformServer } from '@angular/common';\r\nimport { Component, ElementRef, EventEmitter, Inject, Input, NgZone, OnChanges, OnDestroy, OnInit, Output, PLATFORM_ID, SimpleChanges } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { MouseEvent } from '../map-types';\r\nimport { FitBoundsService } from '../services/fit-bounds';\r\nimport { GoogleMapsAPIWrapper } from '../services/google-maps-api-wrapper';\r\nimport {\r\n  FullscreenControlOptions, LatLng, LatLngBounds, LatLngBoundsLiteral, LatLngLiteral,\r\n  MapRestriction, MapTypeControlOptions, MapTypeId, MapTypeStyle, Padding, PanControlOptions,\r\n  RotateControlOptions, ScaleControlOptions, StreetViewControlOptions, ZoomControlOptions,\r\n} from '../services/google-maps-types';\r\nimport { CircleManager } from '../services/managers/circle-manager';\r\nimport { InfoWindowManager } from '../services/managers/info-window-manager';\r\nimport { LayerManager } from '../services/managers/layer-manager';\r\nimport { MarkerManager } from '../services/managers/marker-manager';\r\nimport { PolygonManager } from '../services/managers/polygon-manager';\r\nimport { PolylineManager } from '../services/managers/polyline-manager';\r\nimport { RectangleManager } from '../services/managers/rectangle-manager';\r\nimport { DataLayerManager } from './../services/managers/data-layer-manager';\r\nimport { KmlLayerManager } from './../services/managers/kml-layer-manager';\r\n\r\ndeclare var google: any;\r\n\r\n/**\r\n * AgmMap renders a Google Map.\r\n * **Important note**: To be able see a map in the browser, you have to define a height for the\r\n * element `agm-map`.\r\n *\r\n * ### Example\r\n * ```typescript\r\n * import { Component } from '@angular/core';\r\n *\r\n * @Component({\r\n *  selector: 'my-map-cmp',\r\n *  styles: [`\r\n *    agm-map {\r\n *      height: 300px;\r\n *    }\r\n * `],\r\n *  template: `\r\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\r\n *    </agm-map>\r\n *  `\r\n * })\r\n * ```\r\n */\r\n@Component({\r\n  selector: 'agm-map',\r\n  providers: [\r\n    CircleManager,\r\n    DataLayerManager,\r\n    DataLayerManager,\r\n    FitBoundsService,\r\n    GoogleMapsAPIWrapper,\r\n    InfoWindowManager,\r\n    KmlLayerManager,\r\n    LayerManager,\r\n    MarkerManager,\r\n    PolygonManager,\r\n    PolylineManager,\r\n    RectangleManager,\r\n  ],\r\n  host: {\r\n    // todo: deprecated - we will remove it with the next version\r\n    '[class.sebm-google-map-container]': 'true',\r\n  },\r\n  styles: [`\r\n    .agm-map-container-inner {\r\n      width: inherit;\r\n      height: inherit;\r\n    }\r\n    .agm-map-content {\r\n      display:none;\r\n    }\r\n  `],\r\n  template: `\r\n              <div class='agm-map-container-inner sebm-google-map-container-inner'></div>\r\n              <div class='agm-map-content'>\r\n                <ng-content></ng-content>\r\n              </div>\r\n  `,\r\n})\r\nexport class AgmMap implements OnChanges, OnInit, OnDestroy {\r\n  /**\r\n   * The longitude that defines the center of the map.\r\n   */\r\n  @Input() longitude = 0;\r\n\r\n  /**\r\n   * The latitude that defines the center of the map.\r\n   */\r\n  @Input() latitude = 0;\r\n\r\n  /**\r\n   * The zoom level of the map. The default zoom level is 8.\r\n   */\r\n  @Input() zoom = 8;\r\n\r\n  /**\r\n   * The minimal zoom level of the map allowed. When not provided, no restrictions to the zoom level\r\n   * are enforced.\r\n   */\r\n  @Input() minZoom: number;\r\n\r\n  /**\r\n   * The maximal zoom level of the map allowed. When not provided, no restrictions to the zoom level\r\n   * are enforced.\r\n   */\r\n  @Input() maxZoom: number;\r\n\r\n  /**\r\n   * The control size for the default map controls. Only governs the controls made by the Maps API itself\r\n   */\r\n  @Input() controlSize: number;\r\n\r\n  /**\r\n   * Enables/disables if map is draggable.\r\n   */\r\n  // tslint:disable-next-line:no-input-rename\r\n  @Input('mapDraggable') draggable = true;\r\n\r\n  /**\r\n   * Enables/disables zoom and center on double click. Enabled by default.\r\n   */\r\n  @Input() disableDoubleClickZoom = false;\r\n\r\n  /**\r\n   * Enables/disables all default UI of the Google map. Please note: When the map is created, this\r\n   * value cannot get updated.\r\n   */\r\n  @Input() disableDefaultUI = false;\r\n\r\n  /**\r\n   * If false, disables scrollwheel zooming on the map. The scrollwheel is enabled by default.\r\n   */\r\n  @Input() scrollwheel = true;\r\n\r\n  /**\r\n   * Color used for the background of the Map div. This color will be visible when tiles have not\r\n   * yet loaded as the user pans. This option can only be set when the map is initialized.\r\n   */\r\n  @Input() backgroundColor: string;\r\n\r\n  /**\r\n   * The name or url of the cursor to display when mousing over a draggable map. This property uses\r\n   * the css  * cursor attribute to change the icon. As with the css property, you must specify at\r\n   * least one fallback cursor that is not a URL. For example:\r\n   * [draggableCursor]=\"'url(http://www.example.com/icon.png), auto;'\"\r\n   */\r\n  @Input() draggableCursor: string;\r\n\r\n  /**\r\n   * The name or url of the cursor to display when the map is being dragged. This property uses the\r\n   * css cursor attribute to change the icon. As with the css property, you must specify at least\r\n   * one fallback cursor that is not a URL. For example:\r\n   * [draggingCursor]=\"'url(http://www.example.com/icon.png), auto;'\"\r\n   */\r\n  @Input() draggingCursor: string;\r\n\r\n  /**\r\n   * If false, prevents the map from being controlled by the keyboard. Keyboard shortcuts are\r\n   * enabled by default.\r\n   */\r\n  @Input() keyboardShortcuts = true;\r\n\r\n  /**\r\n   * The enabled/disabled state of the Zoom control.\r\n   */\r\n  @Input() zoomControl: boolean;\r\n\r\n  /**\r\n   * Options for the Zoom control.\r\n   */\r\n  @Input() zoomControlOptions: ZoomControlOptions;\r\n\r\n  /**\r\n   * Styles to apply to each of the default map types. Note that for Satellite/Hybrid and Terrain\r\n   * modes, these styles will only apply to labels and geometry.\r\n   */\r\n  @Input() styles: MapTypeStyle[] = [];\r\n\r\n  /**\r\n   * When true and the latitude and/or longitude values changes, the Google Maps panTo method is\r\n   * used to\r\n   * center the map. See: https://developers.google.com/maps/documentation/javascript/reference#Map\r\n   */\r\n  @Input() usePanning = false;\r\n\r\n  /**\r\n   * The initial enabled/disabled state of the Street View Pegman control.\r\n   * This control is part of the default UI, and should be set to false when displaying a map type\r\n   * on which the Street View road overlay should not appear (e.g. a non-Earth map type).\r\n   */\r\n  @Input() streetViewControl: boolean;\r\n\r\n  /**\r\n   * Options for the Street View control.\r\n   */\r\n  @Input() streetViewControlOptions: StreetViewControlOptions;\r\n\r\n  /**\r\n   * Sets the viewport to contain the given bounds.\r\n   * If this option to `true`, the bounds get automatically computed from all elements that use the {@link AgmFitBounds} directive.\r\n   */\r\n  @Input() fitBounds: LatLngBoundsLiteral | LatLngBounds | boolean = false;\r\n\r\n  /**\r\n   * Padding amount for the bounds.\r\n   */\r\n  @Input() fitBoundsPadding: number | Padding;\r\n\r\n  /**\r\n   * The initial enabled/disabled state of the Scale control. This is disabled by default.\r\n   */\r\n  @Input() scaleControl = false;\r\n\r\n  /**\r\n   * Options for the scale control.\r\n   */\r\n  @Input() scaleControlOptions: ScaleControlOptions;\r\n\r\n  /**\r\n   * The initial enabled/disabled state of the Map type control.\r\n   */\r\n  @Input() mapTypeControl = false;\r\n\r\n  /**\r\n   * Options for the Map type control.\r\n   */\r\n  @Input() mapTypeControlOptions: MapTypeControlOptions;\r\n\r\n  /**\r\n   * The initial enabled/disabled state of the Pan control.\r\n   */\r\n  @Input() panControl  = false;\r\n\r\n  /**\r\n   * Options for the Pan control.\r\n   */\r\n  @Input() panControlOptions: PanControlOptions;\r\n\r\n  /**\r\n   * The initial enabled/disabled state of the Rotate control.\r\n   */\r\n  @Input() rotateControl = false;\r\n\r\n  /**\r\n   * Options for the Rotate control.\r\n   */\r\n  @Input() rotateControlOptions: RotateControlOptions;\r\n\r\n  /**\r\n   * The initial enabled/disabled state of the Fullscreen control.\r\n   */\r\n  @Input() fullscreenControl  = false;\r\n\r\n  /**\r\n   * Options for the Fullscreen control.\r\n   */\r\n  @Input() fullscreenControlOptions: FullscreenControlOptions;\r\n\r\n  /**\r\n   * The map mapTypeId. Defaults to 'roadmap'.\r\n   */\r\n  @Input() mapTypeId: 'roadmap' | 'hybrid' | 'satellite' | 'terrain' | string = 'roadmap';\r\n\r\n  /**\r\n   * When false, map icons are not clickable. A map icon represents a point of interest,\r\n   * also known as a POI. By default map icons are clickable.\r\n   */\r\n  @Input() clickableIcons = true;\r\n\r\n  /**\r\n   * A map icon represents a point of interest, also known as a POI.\r\n   * When map icons are clickable by default, an info window is displayed.\r\n   * When this property is set to false, the info window will not be shown but the click event\r\n   * will still fire\r\n   */\r\n  @Input() showDefaultInfoWindow = true;\r\n\r\n  /**\r\n   * This setting controls how gestures on the map are handled.\r\n   * Allowed values:\r\n   * - 'cooperative' (Two-finger touch gestures pan and zoom the map. One-finger touch gestures are not handled by the map.)\r\n   * - 'greedy'      (All touch gestures pan or zoom the map.)\r\n   * - 'none'        (The map cannot be panned or zoomed by user gestures.)\r\n   * - 'auto'        [default] (Gesture handling is either cooperative or greedy, depending on whether the page is scrollable or not.\r\n   */\r\n  @Input() gestureHandling: 'cooperative' | 'greedy' | 'none' | 'auto' = 'auto';\r\n\r\n    /**\r\n     * Controls the automatic switching behavior for the angle of incidence of\r\n     * the map. The only allowed values are 0 and 45. The value 0 causes the map\r\n     * to always use a 0Â° overhead view regardless of the zoom level and\r\n     * viewport. The value 45 causes the tilt angle to automatically switch to\r\n     * 45 whenever 45Â° imagery is available for the current zoom level and\r\n     * viewport, and switch back to 0 whenever 45Â° imagery is not available\r\n     * (this is the default behavior). 45Â° imagery is only available for\r\n     * satellite and hybrid map types, within some locations, and at some zoom\r\n     * levels. Note: getTilt returns the current tilt angle, not the value\r\n     * specified by this option. Because getTilt and this option refer to\r\n     * different things, do not bind() the tilt property; doing so may yield\r\n     * unpredictable effects. (Default of AGM is 0 (disabled). Enable it with value 45.)\r\n     */\r\n  @Input() tilt = 0;\r\n\r\n  /**\r\n   * Options for restricting the bounds of the map.\r\n   * User cannot pan or zoom away from restricted area.\r\n   */\r\n  @Input() restriction: MapRestriction;\r\n  /**\r\n   * Map option attributes that can change over time\r\n   */\r\n  private static _mapOptionsAttributes: string[] = [\r\n    'disableDoubleClickZoom', 'scrollwheel', 'draggable', 'draggableCursor', 'draggingCursor',\r\n    'keyboardShortcuts', 'zoomControl', 'zoomControlOptions', 'styles', 'streetViewControl',\r\n    'streetViewControlOptions', 'zoom', 'mapTypeControl', 'mapTypeControlOptions', 'minZoom',\r\n    'maxZoom', 'panControl', 'panControlOptions', 'rotateControl', 'rotateControlOptions',\r\n    'fullscreenControl', 'fullscreenControlOptions', 'scaleControl', 'scaleControlOptions',\r\n    'mapTypeId', 'clickableIcons', 'gestureHandling', 'tilt', 'restriction',\r\n  ];\r\n\r\n  private _observableSubscriptions: Subscription[] = [];\r\n  private _fitBoundsSubscription: Subscription;\r\n\r\n  /**\r\n   * This event emitter gets emitted when the user clicks on the map (but not when they click on a\r\n   * marker or infoWindow).\r\n   */\r\n  @Output() mapClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event emitter gets emitted when the user right-clicks on the map (but not when they click\r\n   * on a marker or infoWindow).\r\n   */\r\n  @Output() mapRightClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event emitter gets emitted when the user double-clicks on the map (but not when they click\r\n   * on a marker or infoWindow).\r\n   */\r\n  @Output() mapDblClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event emitter is fired when the map center changes.\r\n   */\r\n  @Output() centerChange: EventEmitter<LatLngLiteral> = new EventEmitter<LatLngLiteral>();\r\n\r\n  /**\r\n   * This event is fired when the viewport bounds have changed.\r\n   */\r\n  @Output() boundsChange: EventEmitter<LatLngBounds> = new EventEmitter<LatLngBounds>();\r\n\r\n  /**\r\n   * This event is fired when the mapTypeId property changes.\r\n   */\r\n  @Output() mapTypeIdChange: EventEmitter<MapTypeId> = new EventEmitter<MapTypeId>();\r\n\r\n  /**\r\n   * This event is fired when the map becomes idle after panning or zooming.\r\n   */\r\n  @Output() idle: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /**\r\n   * This event is fired when the zoom level has changed.\r\n   */\r\n  @Output() zoomChange: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  /**\r\n   * This event is fired when the google map is fully initialized.\r\n   * You get the google.maps.Map instance as a result of this EventEmitter.\r\n   */\r\n  @Output() mapReady: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * This event is fired when the visible tiles have finished loading.\r\n   */\r\n  @Output() tilesLoaded: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  constructor(\r\n    private _elem: ElementRef,\r\n    private _mapsWrapper: GoogleMapsAPIWrapper,\r\n    @Inject(PLATFORM_ID) private _platformId: Object,\r\n    protected _fitBoundsService: FitBoundsService,\r\n    private _zone: NgZone\r\n  ) {}\r\n\r\n  /** @internal */\r\n  ngOnInit() {\r\n    if (isPlatformServer(this._platformId)) {\r\n      // The code is running on the server, do nothing\r\n      return;\r\n    }\r\n    // todo: this should be solved with a new component and a viewChild decorator\r\n    const container = this._elem.nativeElement.querySelector('.agm-map-container-inner');\r\n    this._initMapInstance(container);\r\n  }\r\n\r\n  private _initMapInstance(el: HTMLElement) {\r\n    this._mapsWrapper.createMap(el, {\r\n      center: {lat: this.latitude || 0, lng: this.longitude || 0},\r\n      zoom: this.zoom,\r\n      minZoom: this.minZoom,\r\n      maxZoom: this.maxZoom,\r\n      controlSize: this.controlSize,\r\n      disableDefaultUI: this.disableDefaultUI,\r\n      disableDoubleClickZoom: this.disableDoubleClickZoom,\r\n      scrollwheel: this.scrollwheel,\r\n      backgroundColor: this.backgroundColor,\r\n      draggable: this.draggable,\r\n      draggableCursor: this.draggableCursor,\r\n      draggingCursor: this.draggingCursor,\r\n      keyboardShortcuts: this.keyboardShortcuts,\r\n      styles: this.styles,\r\n      zoomControl: this.zoomControl,\r\n      zoomControlOptions: this.zoomControlOptions,\r\n      streetViewControl: this.streetViewControl,\r\n      streetViewControlOptions: this.streetViewControlOptions,\r\n      scaleControl: this.scaleControl,\r\n      scaleControlOptions: this.scaleControlOptions,\r\n      mapTypeControl: this.mapTypeControl,\r\n      mapTypeControlOptions: this.mapTypeControlOptions,\r\n      panControl: this.panControl,\r\n      panControlOptions: this.panControlOptions,\r\n      rotateControl: this.rotateControl,\r\n      rotateControlOptions: this.rotateControlOptions,\r\n      fullscreenControl: this.fullscreenControl,\r\n      fullscreenControlOptions: this.fullscreenControlOptions,\r\n      mapTypeId: this.mapTypeId,\r\n      clickableIcons: this.clickableIcons,\r\n      gestureHandling: this.gestureHandling,\r\n      tilt: this.tilt,\r\n      restriction: this.restriction,\r\n    })\r\n      .then(() => this._mapsWrapper.getNativeMap())\r\n      .then(map => this.mapReady.emit(map));\r\n\r\n    // register event listeners\r\n    this._handleMapCenterChange();\r\n    this._handleMapZoomChange();\r\n    this._handleMapMouseEvents();\r\n    this._handleBoundsChange();\r\n    this._handleMapTypeIdChange();\r\n    this._handleTilesLoadedEvent();\r\n    this._handleIdleEvent();\r\n  }\r\n\r\n  /** @internal */\r\n  ngOnDestroy() {\r\n    // unsubscribe all registered observable subscriptions\r\n    this._observableSubscriptions.forEach((s) => s.unsubscribe());\r\n\r\n    // remove all listeners from the map instance\r\n    this._mapsWrapper.clearInstanceListeners();\r\n    if (this._fitBoundsSubscription) {\r\n      this._fitBoundsSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  /* @internal */\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this._updateMapOptionsChanges(changes);\r\n    this._updatePosition(changes);\r\n  }\r\n\r\n  private _updateMapOptionsChanges(changes: SimpleChanges) {\r\n    let options: {[propName: string]: any} = {};\r\n    let optionKeys =\r\n      Object.keys(changes).filter(k => AgmMap._mapOptionsAttributes.indexOf(k) !== -1);\r\n    optionKeys.forEach((k) => { options[k] = changes[k].currentValue; });\r\n    this._mapsWrapper.setMapOptions(options);\r\n  }\r\n\r\n  /**\r\n   * Triggers a resize event on the google map instance.\r\n   * When recenter is true, the of the google map gets called with the current lat/lng values or fitBounds value to recenter the map.\r\n   * Returns a promise that gets resolved after the event was triggered.\r\n   */\r\n  triggerResize(recenter: boolean = true): Promise<void> {\r\n    // Note: When we would trigger the resize event and show the map in the same turn (which is a\r\n    // common case for triggering a resize event), then the resize event would not\r\n    // work (to show the map), so we trigger the event in a timeout.\r\n    return new Promise<void>((resolve) => {\r\n      setTimeout(() => {\r\n        return this._mapsWrapper.triggerMapEvent('resize').then(() => {\r\n          if (recenter) {\r\n            this.fitBounds != null ? this._fitBounds() : this._setCenter();\r\n          }\r\n          resolve();\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  private _updatePosition(changes: SimpleChanges) {\r\n    if (changes['latitude'] == null && changes['longitude'] == null &&\r\n        !changes['fitBounds']) {\r\n      // no position update needed\r\n      return;\r\n    }\r\n\r\n    // we prefer fitBounds in changes\r\n    if ('fitBounds' in changes) {\r\n      this._fitBounds();\r\n      return;\r\n    }\r\n\r\n    if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\r\n      return;\r\n    }\r\n    this._setCenter();\r\n  }\r\n\r\n  private _setCenter() {\r\n    let newCenter = {\r\n      lat: this.latitude,\r\n      lng: this.longitude,\r\n    };\r\n    if (this.usePanning) {\r\n      this._mapsWrapper.panTo(newCenter);\r\n    } else {\r\n      this._mapsWrapper.setCenter(newCenter);\r\n    }\r\n  }\r\n\r\n  private _fitBounds() {\r\n    switch (this.fitBounds) {\r\n      case true:\r\n        this._subscribeToFitBoundsUpdates();\r\n        break;\r\n      case false:\r\n        if (this._fitBoundsSubscription) {\r\n          this._fitBoundsSubscription.unsubscribe();\r\n        }\r\n        break;\r\n      default:\r\n        this._updateBounds(this.fitBounds, this.fitBoundsPadding);\r\n    }\r\n  }\r\n\r\n  private _subscribeToFitBoundsUpdates() {\r\n    this._zone.runOutsideAngular(() => {\r\n      this._fitBoundsSubscription = this._fitBoundsService.getBounds$().subscribe(b => {\r\n        this._zone.run(() => this._updateBounds(b, this.fitBoundsPadding));\r\n      });\r\n    });\r\n  }\r\n\r\n  protected _updateBounds(bounds: LatLngBounds | LatLngBoundsLiteral, padding?: number | Padding) {\r\n    if (!bounds) {\r\n      return;\r\n    }\r\n    if (this._isLatLngBoundsLiteral(bounds) && typeof google !== 'undefined' && google && google.maps && google.maps.LatLngBounds) {\r\n      const newBounds = new google.maps.LatLngBounds();\r\n      newBounds.union(bounds);\r\n      bounds = newBounds;\r\n    }\r\n    if (this.usePanning) {\r\n      this._mapsWrapper.panToBounds(bounds, padding);\r\n      return;\r\n    }\r\n    this._mapsWrapper.fitBounds(bounds, padding);\r\n  }\r\n\r\n  private _isLatLngBoundsLiteral(bounds: LatLngBounds | LatLngBoundsLiteral): bounds is LatLngBoundsLiteral {\r\n    return bounds != null && (bounds as any).extend === undefined;\r\n  }\r\n\r\n  private _handleMapCenterChange() {\r\n    const s = this._mapsWrapper.subscribeToMapEvent<void>('center_changed').subscribe(() => {\r\n      this._mapsWrapper.getCenter().then((center: LatLng) => {\r\n        this.latitude = center.lat();\r\n        this.longitude = center.lng();\r\n        this.centerChange.emit({lat: this.latitude, lng: this.longitude} as LatLngLiteral);\r\n      });\r\n    });\r\n    this._observableSubscriptions.push(s);\r\n  }\r\n\r\n  private _handleBoundsChange() {\r\n    const s = this._mapsWrapper.subscribeToMapEvent<void>('bounds_changed').subscribe(() => {\r\n      this._mapsWrapper.getBounds().then(\r\n        (bounds: LatLngBounds) => { this.boundsChange.emit(bounds); });\r\n    });\r\n    this._observableSubscriptions.push(s);\r\n  }\r\n\r\n  private _handleMapTypeIdChange() {\r\n    const s = this._mapsWrapper.subscribeToMapEvent<void>('maptypeid_changed').subscribe(() => {\r\n      this._mapsWrapper.getMapTypeId().then(\r\n        (mapTypeId: MapTypeId) => { this.mapTypeIdChange.emit(mapTypeId); });\r\n    });\r\n    this._observableSubscriptions.push(s);\r\n  }\r\n\r\n  private _handleMapZoomChange() {\r\n    const s = this._mapsWrapper.subscribeToMapEvent<void>('zoom_changed').subscribe(() => {\r\n      this._mapsWrapper.getZoom().then((z: number) => {\r\n        this.zoom = z;\r\n        this.zoomChange.emit(z);\r\n      });\r\n    });\r\n    this._observableSubscriptions.push(s);\r\n  }\r\n\r\n  private _handleIdleEvent() {\r\n    const s = this._mapsWrapper.subscribeToMapEvent<void>('idle').subscribe(\r\n      () => { this.idle.emit(void 0); });\r\n    this._observableSubscriptions.push(s);\r\n  }\r\n\r\n  private _handleTilesLoadedEvent() {\r\n    const s = this._mapsWrapper.subscribeToMapEvent<void>('tilesloaded').subscribe(\r\n      () => this.tilesLoaded.emit(void 0),\r\n    );\r\n    this._observableSubscriptions.push(s);\r\n  }\r\n\r\n  private _handleMapMouseEvents() {\r\n    interface Emitter {\r\n      emit(value: any): void;\r\n    }\r\n\r\n    type Event = { name: string, emitter: Emitter };\r\n\r\n    const events: Event[] = [\r\n      {name: 'click', emitter: this.mapClick},\r\n      {name: 'rightclick', emitter: this.mapRightClick},\r\n      {name: 'dblclick', emitter: this.mapDblClick},\r\n    ];\r\n\r\n    events.forEach((e: Event) => {\r\n      const s = this._mapsWrapper.subscribeToMapEvent<{latLng: LatLng}>(e.name).subscribe(\r\n        (event: {latLng: LatLng}) => {\r\n          let value: MouseEvent = {\r\n            coords: {\r\n              lat: event.latLng.lat(),\r\n              lng: event.latLng.lng(),\r\n            },\r\n            placeId: (event as {latLng: LatLng, placeId: string}).placeId,\r\n          };\r\n          // the placeId will be undefined in case the event was not an IconMouseEvent (google types)\r\n          if (value.placeId && !this.showDefaultInfoWindow) {\r\n            (event as any).stop();\r\n          }\r\n          e.emitter.emit(value);\r\n        });\r\n      this._observableSubscriptions.push(s);\r\n    });\r\n  }\r\n}\r\n","import { AfterContentInit, ContentChildren, Directive, EventEmitter, forwardRef, Input, OnChanges, OnDestroy, Output, QueryList, SimpleChange } from '@angular/core';\r\nimport { Observable, ReplaySubject, Subscription } from 'rxjs';\r\nimport { MouseEvent } from '../map-types';\r\nimport { FitBoundsAccessor, FitBoundsDetails } from '../services/fit-bounds';\r\nimport * as mapTypes from '../services/google-maps-types';\r\nimport { MarkerManager } from '../services/managers/marker-manager';\r\nimport { AgmInfoWindow } from './info-window';\r\n\r\nlet markerId = 0;\r\n\r\n/**\r\n * AgmMarker renders a map marker inside a {@link AgmMap}.\r\n *\r\n * ### Example\r\n * ```typescript\r\n * import { Component } from '@angular/core';\r\n *\r\n * @Component({\r\n *  selector: 'my-map-cmp',\r\n *  styles: [`\r\n *    .agm-map-container {\r\n *      height: 300px;\r\n *    }\r\n * `],\r\n *  template: `\r\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\r\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\r\n *      </agm-marker>\r\n *    </agm-map>\r\n *  `\r\n * })\r\n * ```\r\n */\r\n@Directive({\r\n  selector: 'agm-marker',\r\n  providers: [\r\n    { provide: FitBoundsAccessor, useExisting: forwardRef(() => AgmMarker) },\r\n  ],\r\n  inputs: [\r\n    'latitude', 'longitude', 'title', 'label', 'draggable: markerDraggable', 'iconUrl',\r\n    'openInfoWindow', 'opacity', 'visible', 'zIndex', 'animation',\r\n  ],\r\n  outputs: ['markerClick', 'dragStart', 'drag', 'dragEnd', 'mouseOver', 'mouseOut'],\r\n})\r\nexport class AgmMarker implements OnDestroy, OnChanges, AfterContentInit, FitBoundsAccessor {\r\n  /**\r\n   * The latitude position of the marker.\r\n   */\r\n  @Input() latitude: number;\r\n\r\n  /**\r\n   * The longitude position of the marker.\r\n   */\r\n  @Input() longitude: number;\r\n\r\n  /**\r\n   * The title of the marker.\r\n   */\r\n  @Input() title: string;\r\n\r\n  /**\r\n   * The label (a single uppercase character) for the marker.\r\n   */\r\n  @Input() label: string | mapTypes.MarkerLabel;\r\n\r\n  /**\r\n   * If true, the marker can be dragged. Default value is false.\r\n   */\r\n  // tslint:disable-next-line:no-input-rename\r\n  @Input('markerDraggable') draggable = false;\r\n\r\n  /**\r\n   * Icon (the URL of the image) for the foreground.\r\n   */\r\n  @Input() iconUrl: string;\r\n\r\n  /**\r\n   * If true, the marker is visible\r\n   */\r\n  @Input() visible = true;\r\n\r\n  /**\r\n   * Whether to automatically open the child info window when the marker is clicked.\r\n   */\r\n  @Input() openInfoWindow = true;\r\n\r\n  /**\r\n   * The marker's opacity between 0.0 and 1.0.\r\n   */\r\n  @Input() opacity = 1;\r\n\r\n  /**\r\n   * All markers are displayed on the map in order of their zIndex, with higher values displaying in\r\n   * front of markers with lower values. By default, markers are displayed according to their\r\n   * vertical position on screen, with lower markers appearing in front of markers further up the\r\n   * screen.\r\n   */\r\n  @Input() zIndex = 1;\r\n\r\n  /**\r\n   * If true, the marker can be clicked. Default value is true.\r\n   */\r\n  // tslint:disable-next-line:no-input-rename\r\n  @Input('markerClickable') clickable = true;\r\n\r\n  /**\r\n   * Which animation to play when marker is added to a map.\r\n   * This can be 'BOUNCE' or 'DROP'\r\n   */\r\n  @Input() animation: Animation;\r\n\r\n  /**\r\n   * This event is fired when the marker's animation property changes.\r\n   *\r\n   * @memberof AgmMarker\r\n   */\r\n  @Output() animationChange = new EventEmitter<Animation>();\r\n\r\n  /**\r\n   * This event emitter gets emitted when the user clicks on the marker.\r\n   */\r\n  @Output() markerClick: EventEmitter<AgmMarker> = new EventEmitter<AgmMarker>();\r\n\r\n  /**\r\n   * This event emitter gets emitted when the user clicks twice on the marker.\r\n   */\r\n  @Output() markerDblClick: EventEmitter<AgmMarker> = new EventEmitter<AgmMarker>();\r\n\r\n  /**\r\n   * This event is fired when the user rightclicks on the marker.\r\n   */\r\n  @Output() markerRightClick: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /**\r\n   * This event is fired when the user starts dragging the marker.\r\n   */\r\n  @Output() dragStart: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is repeatedly fired while the user drags the marker.\r\n   */\r\n  @Output() drag: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the user stops dragging the marker.\r\n   */\r\n  @Output() dragEnd: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the user mouses over the marker.\r\n   */\r\n  @Output() mouseOver: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the user mouses outside the marker.\r\n   */\r\n  @Output() mouseOut: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /** @internal */\r\n  @ContentChildren(AgmInfoWindow) infoWindow: QueryList<AgmInfoWindow> = new QueryList<AgmInfoWindow>();\r\n\r\n  private _markerAddedToManger = false;\r\n  private _id: string;\r\n  private _observableSubscriptions: Subscription[] = [];\r\n\r\n  protected readonly _fitBoundsDetails$: ReplaySubject<FitBoundsDetails> = new ReplaySubject<FitBoundsDetails>(1);\r\n\r\n  constructor(private _markerManager: MarkerManager) { this._id = (markerId++).toString(); }\r\n\r\n  /* @internal */\r\n  ngAfterContentInit() {\r\n    this.handleInfoWindowUpdate();\r\n    this.infoWindow.changes.subscribe(() => this.handleInfoWindowUpdate());\r\n  }\r\n\r\n  private handleInfoWindowUpdate() {\r\n    if (this.infoWindow.length > 1) {\r\n      throw new Error('Expected no more than one info window.');\r\n    }\r\n    this.infoWindow.forEach(marker => {\r\n      marker.hostMarker = this;\r\n    });\r\n  }\r\n\r\n  /** @internal */\r\n  ngOnChanges(changes: { [key: string]: SimpleChange }) {\r\n    if (typeof this.latitude === 'string') {\r\n      this.latitude = Number(this.latitude);\r\n    }\r\n    if (typeof this.longitude === 'string') {\r\n      this.longitude = Number(this.longitude);\r\n    }\r\n    if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\r\n      return;\r\n    }\r\n    if (!this._markerAddedToManger) {\r\n      this._markerManager.addMarker(this);\r\n      this._updateFitBoundsDetails();\r\n      this._markerAddedToManger = true;\r\n      this._addEventListeners();\r\n      return;\r\n    }\r\n    if (changes['latitude'] || changes['longitude']) {\r\n      this._markerManager.updateMarkerPosition(this);\r\n      this._updateFitBoundsDetails();\r\n    }\r\n    if (changes['title']) {\r\n      this._markerManager.updateTitle(this);\r\n    }\r\n    if (changes['label']) {\r\n      this._markerManager.updateLabel(this);\r\n    }\r\n    if (changes['draggable']) {\r\n      this._markerManager.updateDraggable(this);\r\n    }\r\n    if (changes['iconUrl']) {\r\n      this._markerManager.updateIcon(this);\r\n    }\r\n    if (changes['opacity']) {\r\n      this._markerManager.updateOpacity(this);\r\n    }\r\n    if (changes['visible']) {\r\n      this._markerManager.updateVisible(this);\r\n    }\r\n    if (changes['zIndex']) {\r\n      this._markerManager.updateZIndex(this);\r\n    }\r\n    if (changes['clickable']) {\r\n      this._markerManager.updateClickable(this);\r\n    }\r\n    if (changes['animation']) {\r\n      this._markerManager.updateAnimation(this);\r\n    }\r\n  }\r\n\r\n  /** @internal */\r\n  getFitBoundsDetails$(): Observable<FitBoundsDetails> {\r\n    return this._fitBoundsDetails$.asObservable();\r\n  }\r\n\r\n  protected _updateFitBoundsDetails() {\r\n    this._fitBoundsDetails$.next({ latLng: { lat: this.latitude, lng: this.longitude } });\r\n  }\r\n\r\n  private _addEventListeners() {\r\n    const cs = this._markerManager.createEventObservable('click', this).subscribe(() => {\r\n      if (this.openInfoWindow) {\r\n        this.infoWindow.forEach(infoWindow => infoWindow.open());\r\n      }\r\n      this.markerClick.emit(this);\r\n    });\r\n    this._observableSubscriptions.push(cs);\r\n\r\n    const dcs = this._markerManager.createEventObservable('dblclick', this).subscribe(() => {\r\n      this.markerDblClick.emit(null);\r\n    });\r\n    this._observableSubscriptions.push(dcs);\r\n\r\n    const rc = this._markerManager.createEventObservable('rightclick', this).subscribe(() => {\r\n      this.markerRightClick.emit(null);\r\n    });\r\n    this._observableSubscriptions.push(rc);\r\n\r\n    const ds =\r\n      this._markerManager.createEventObservable<mapTypes.MouseEvent>('dragstart', this)\r\n        .subscribe((e: mapTypes.MouseEvent) => {\r\n          this.dragStart.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } } as MouseEvent);\r\n        });\r\n    this._observableSubscriptions.push(ds);\r\n\r\n    const d =\r\n      this._markerManager.createEventObservable<mapTypes.MouseEvent>('drag', this)\r\n        .subscribe((e: mapTypes.MouseEvent) => {\r\n          this.drag.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } } as MouseEvent);\r\n        });\r\n    this._observableSubscriptions.push(d);\r\n\r\n    const de =\r\n      this._markerManager.createEventObservable<mapTypes.MouseEvent>('dragend', this)\r\n        .subscribe((e: mapTypes.MouseEvent) => {\r\n          this.dragEnd.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } } as MouseEvent);\r\n        });\r\n    this._observableSubscriptions.push(de);\r\n\r\n    const mover =\r\n      this._markerManager.createEventObservable<mapTypes.MouseEvent>('mouseover', this)\r\n        .subscribe((e: mapTypes.MouseEvent) => {\r\n          this.mouseOver.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } } as MouseEvent);\r\n        });\r\n    this._observableSubscriptions.push(mover);\r\n\r\n    const mout =\r\n      this._markerManager.createEventObservable<mapTypes.MouseEvent>('mouseout', this)\r\n        .subscribe((e: mapTypes.MouseEvent) => {\r\n          this.mouseOut.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } } as MouseEvent);\r\n        });\r\n    this._observableSubscriptions.push(mout);\r\n\r\n    const anChng =\r\n      this._markerManager.createEventObservable<void>('animation_changed', this)\r\n        .subscribe(() => {\r\n          this.animationChange.emit(this.animation);\r\n        });\r\n    this._observableSubscriptions.push(anChng);\r\n  }\r\n\r\n  /** @internal */\r\n  id(): string { return this._id; }\r\n\r\n  /** @internal */\r\n  toString(): string { return 'AgmMarker-' + this._id.toString(); }\r\n\r\n  /** @internal */\r\n  ngOnDestroy() {\r\n    this._markerManager.deleteMarker(this);\r\n    // unsubscribe all registered observable subscriptions\r\n    this._observableSubscriptions.forEach((s) => s.unsubscribe());\r\n  }\r\n}\r\n\r\nexport type Animation = 'BOUNCE' | 'DROP' | null;\r\n","import { AfterContentInit, Directive, EventEmitter, Input, OnChanges, OnDestroy, Output, SimpleChanges } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { LatLng, LatLngLiteral, PolygonOptions, PolyMouseEvent } from '../services/google-maps-types';\r\nimport { PolygonManager } from '../services/managers/polygon-manager';\r\nimport { MvcEventType } from '../utils/mvcarray-utils';\r\n\r\n/**\r\n * AgmPolygon renders a polygon on a {@link AgmMap}\r\n *\r\n * ### Example\r\n * ```typescript\r\n * import { Component } from '@angular/core';\r\n *\r\n * @Component({\r\n *  selector: 'my-map-cmp',\r\n *  styles: [`\r\n *    agm-map {\r\n *      height: 300px;\r\n *    }\r\n * `],\r\n *  template: `\r\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\r\n *      <agm-polygon [paths]=\"paths\">\r\n *      </agm-polygon>\r\n *    </agm-map>\r\n *  `\r\n * })\r\n * export class MyMapCmp {\r\n *   lat: number = 0;\r\n *   lng: number = 0;\r\n *   zoom: number = 10;\r\n *   paths: Array<LatLngLiteral> = [\r\n *     { lat: 0,  lng: 10 },\r\n *     { lat: 0,  lng: 20 },\r\n *     { lat: 10, lng: 20 },\r\n *     { lat: 10, lng: 10 },\r\n *     { lat: 0,  lng: 10 }\r\n *   ]\r\n *   // Nesting paths will create a hole where they overlap;\r\n *   nestedPaths: Array<Array<LatLngLiteral>> = [[\r\n *     { lat: 0,  lng: 10 },\r\n *     { lat: 0,  lng: 20 },\r\n *     { lat: 10, lng: 20 },\r\n *     { lat: 10, lng: 10 },\r\n *     { lat: 0,  lng: 10 }\r\n *   ], [\r\n *     { lat: 0, lng: 15 },\r\n *     { lat: 0, lng: 20 },\r\n *     { lat: 5, lng: 20 },\r\n *     { lat: 5, lng: 15 },\r\n *     { lat: 0, lng: 15 }\r\n *   ]]\r\n * }\r\n * ```\r\n */\r\n@Directive({\r\n  selector: 'agm-polygon',\r\n})\r\nexport class AgmPolygon implements OnDestroy, OnChanges, AfterContentInit {\r\n  /**\r\n   * Indicates whether this Polygon handles mouse events. Defaults to true.\r\n   */\r\n  @Input() clickable = true;\r\n\r\n  /**\r\n   * If set to true, the user can drag this shape over the map. The geodesic\r\n   * property defines the mode of dragging. Defaults to false.\r\n   */\r\n  // tslint:disable-next-line:no-input-rename\r\n  @Input('polyDraggable') draggable = false;\r\n\r\n  /**\r\n   * If set to true, the user can edit this shape by dragging the control\r\n   * points shown at the vertices and on each segment. Defaults to false.\r\n   */\r\n  @Input() editable = false;\r\n\r\n  /**\r\n   * The fill color. All CSS3 colors are supported except for extended\r\n   * named colors.\r\n   */\r\n  @Input() fillColor: string;\r\n\r\n  /**\r\n   * The fill opacity between 0.0 and 1.0\r\n   */\r\n  @Input() fillOpacity: number;\r\n\r\n  /**\r\n   * When true, edges of the polygon are interpreted as geodesic and will\r\n   * follow the curvature of the Earth. When false, edges of the polygon are\r\n   * rendered as straight lines in screen space. Note that the shape of a\r\n   * geodesic polygon may appear to change when dragged, as the dimensions\r\n   * are maintained relative to the surface of the earth. Defaults to false.\r\n   */\r\n  @Input() geodesic = false;\r\n\r\n  /**\r\n   * The ordered sequence of coordinates that designates a closed loop.\r\n   * Unlike polylines, a polygon may consist of one or more paths.\r\n   *  As a result, the paths property may specify one or more arrays of\r\n   * LatLng coordinates. Paths are closed automatically; do not repeat the\r\n   * first vertex of the path as the last vertex. Simple polygons may be\r\n   * defined using a single array of LatLngs. More complex polygons may\r\n   * specify an array of arrays. Any simple arrays are converted into Arrays.\r\n   * Inserting or removing LatLngs from the Array will automatically update\r\n   * the polygon on the map.\r\n   */\r\n  @Input() paths: Array<LatLng | LatLngLiteral> | Array<Array<LatLng | LatLngLiteral>> = [];\r\n\r\n  /**\r\n   * The stroke color. All CSS3 colors are supported except for extended\r\n   * named colors.\r\n   */\r\n  @Input() strokeColor: string;\r\n\r\n  /**\r\n   * The stroke opacity between 0.0 and 1.0\r\n   */\r\n  @Input() strokeOpacity: number;\r\n\r\n  /**\r\n   * The stroke width in pixels.\r\n   */\r\n  @Input() strokeWeight: number;\r\n\r\n  /**\r\n   * Whether this polygon is visible on the map. Defaults to true.\r\n   */\r\n  @Input() visible: boolean;\r\n\r\n  /**\r\n   * The zIndex compared to other polys.\r\n   */\r\n  @Input() zIndex: number;\r\n\r\n  /**\r\n   * This event is fired when the DOM click event is fired on the Polygon.\r\n   */\r\n  @Output() polyClick: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the DOM dblclick event is fired on the Polygon.\r\n   */\r\n  @Output() polyDblClick: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is repeatedly fired while the user drags the polygon.\r\n   */\r\n  @Output() polyDrag: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the user stops dragging the polygon.\r\n   */\r\n  @Output() polyDragEnd: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the user starts dragging the polygon.\r\n   */\r\n  @Output() polyDragStart: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the DOM mousedown event is fired on the Polygon.\r\n   */\r\n  @Output() polyMouseDown: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the DOM mousemove event is fired on the Polygon.\r\n   */\r\n  @Output() polyMouseMove: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is fired on Polygon mouseout.\r\n   */\r\n  @Output() polyMouseOut: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is fired on Polygon mouseover.\r\n   */\r\n  @Output() polyMouseOver: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is fired whe the DOM mouseup event is fired on the Polygon\r\n   */\r\n  @Output() polyMouseUp: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the Polygon is right-clicked on.\r\n   */\r\n  @Output() polyRightClick: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is fired after Polygon first path changes.\r\n   */\r\n  @Output() polyPathsChange = new EventEmitter<PolygonPathEvent<any>>();\r\n\r\n  private static _polygonOptionsAttributes: Array<string> = [\r\n    'clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'geodesic', 'icon', 'map',\r\n    'paths', 'strokeColor', 'strokeOpacity', 'strokeWeight', 'visible', 'zIndex', 'draggable',\r\n    'editable', 'visible',\r\n  ];\r\n\r\n  private _id: string;\r\n  private _polygonAddedToManager = false;\r\n  private _subscriptions: Subscription[] = [];\r\n\r\n  constructor(private _polygonManager: PolygonManager) { }\r\n\r\n  /** @internal */\r\n  ngAfterContentInit() {\r\n    if (!this._polygonAddedToManager) {\r\n      this._init();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): any {\r\n    if (!this._polygonAddedToManager) {\r\n      this._init();\r\n      return;\r\n    }\r\n\r\n    this._polygonManager.setPolygonOptions(this, this._updatePolygonOptions(changes));\r\n  }\r\n\r\n  private _init() {\r\n    this._polygonManager.addPolygon(this);\r\n    this._polygonAddedToManager = true;\r\n    this._addEventListeners();\r\n  }\r\n\r\n  private _addEventListeners() {\r\n    const handlers = [\r\n      { name: 'click', handler: (ev: PolyMouseEvent) => this.polyClick.emit(ev) },\r\n      { name: 'dblclick', handler: (ev: PolyMouseEvent) => this.polyDblClick.emit(ev) },\r\n      { name: 'drag', handler: (ev: MouseEvent) => this.polyDrag.emit(ev) },\r\n      { name: 'dragend', handler: (ev: MouseEvent) => this.polyDragEnd.emit(ev) },\r\n      { name: 'dragstart', handler: (ev: MouseEvent) => this.polyDragStart.emit(ev) },\r\n      { name: 'mousedown', handler: (ev: PolyMouseEvent) => this.polyMouseDown.emit(ev) },\r\n      { name: 'mousemove', handler: (ev: PolyMouseEvent) => this.polyMouseMove.emit(ev) },\r\n      { name: 'mouseout', handler: (ev: PolyMouseEvent) => this.polyMouseOut.emit(ev) },\r\n      { name: 'mouseover', handler: (ev: PolyMouseEvent) => this.polyMouseOver.emit(ev) },\r\n      { name: 'mouseup', handler: (ev: PolyMouseEvent) => this.polyMouseUp.emit(ev) },\r\n      { name: 'rightclick', handler: (ev: PolyMouseEvent) => this.polyRightClick.emit(ev) },\r\n    ];\r\n    handlers.forEach((obj) => {\r\n      const os = this._polygonManager.createEventObservable(obj.name, this).subscribe(obj.handler);\r\n      this._subscriptions.push(os);\r\n    });\r\n\r\n    this._polygonManager.createPathEventObservable(this)\r\n    .then(paths$ => {\r\n      const os = paths$.subscribe(pathEvent => this.polyPathsChange.emit(pathEvent));\r\n      this._subscriptions.push(os);\r\n    });\r\n  }\r\n\r\n  private _updatePolygonOptions(changes: SimpleChanges): PolygonOptions {\r\n    return Object.keys(changes)\r\n      .filter(k => AgmPolygon._polygonOptionsAttributes.indexOf(k) !== -1)\r\n      .reduce((obj: any, k: string) => {\r\n        obj[k] = changes[k].currentValue;\r\n        return obj;\r\n      }, {});\r\n  }\r\n\r\n  /** @internal */\r\n  id(): string { return this._id; }\r\n\r\n  /** @internal */\r\n  ngOnDestroy() {\r\n    this._polygonManager.deletePolygon(this);\r\n    // unsubscribe all registered observable subscriptions\r\n    this._subscriptions.forEach((s) => s.unsubscribe());\r\n  }\r\n\r\n  getPath(): Promise<Array<LatLng>> {\r\n    return this._polygonManager.getPath(this);\r\n  }\r\n\r\n  getPaths(): Promise<Array<Array<LatLng>>> {\r\n    return this._polygonManager.getPaths(this);\r\n  }\r\n}\r\n\r\nexport interface PolygonPathEvent<T extends (LatLng | Array<LatLng>)> {\r\n  newArr: LatLng[][];\r\n  eventName: MvcEventType;\r\n  index: number;\r\n  previous?: T;\r\n}\r\n\r\nexport interface PathCollectionChangePolygonPathEvent extends PolygonPathEvent <Array<LatLng>>{\r\n}\r\n\r\nexport interface PathChangePolygonPathEvent extends PolygonPathEvent<LatLng> {\r\n  pathIndex: number;\r\n}\r\n","import { Directive, Input, OnInit } from '@angular/core';\r\n\r\n/**\r\n * AgmPolylineIcon enables to add polyline sequences to add arrows, circle,\r\n * or custom icons either along the entire line, or in a specific part of it.\r\n * See https://developers.google.com/maps/documentation/javascript/shapes#polyline_customize\r\n *\r\n * ### Example\r\n * ```html\r\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\r\n *      <agm-polyline>\r\n *          <agm-icon-sequence [fixedRotation]=\"true\" [path]=\"'FORWARD_OPEN_ARROW'\">\r\n *          </agm-icon-sequence>\r\n *      </agm-polyline>\r\n *    </agm-map>\r\n * ```\r\n *\r\n * @export\r\n * @class AgmPolylineIcon\r\n */\r\n@Directive({selector: 'agm-polyline agm-icon-sequence'})\r\nexport class AgmPolylineIcon implements OnInit{\r\n\r\n  /**\r\n   * If `true`, each icon in the sequence has the same fixed rotation regardless of the\r\n   * angle of the edge on which it lies. Defaults to `false`, in which case each icon\r\n   * in the sequence is rotated to align with its edge.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof AgmPolylineIcon\r\n   */\r\n  @Input() fixedRotation: boolean;\r\n\r\n  /**\r\n   * The distance from the start of the line at which an icon is to be rendered. This\r\n   * distance may be expressed as a percentage of line's length (e.g. '50%') or in pixels\r\n   * (e.g. '50px'). Defaults to '100%'.\r\n   *\r\n   * @type {string}\r\n   * @memberof AgmPolylineIcon\r\n   */\r\n  @Input() offset: string;\r\n\r\n  /**\r\n   * The distance between consecutive icons on the line. This distance may be expressed as\r\n   * a percentage of the line's length (e.g. '50%') or in pixels (e.g. '50px'). To disable\r\n   * repeating of the icon, specify '0'. Defaults to '0'.\r\n   *\r\n   * @type {string}\r\n   * @memberof AgmPolylineIcon\r\n   */\r\n  @Input() repeat: string;\r\n\r\n  /**\r\n   * The x coordinate of the position of the symbol relative to the polyline. The coordinate\r\n   * of the symbol's path is translated _left_ by the anchor's x coordinate. By default, a\r\n   * symbol is anchored at (0, 0). The position is expressed in the same coordinate system as the\r\n   * symbol's path.\r\n   *\r\n   * @type {number}\r\n   * @memberof AgmPolylineIcon\r\n   */\r\n  @Input() anchorX: number;\r\n\r\n  /**\r\n   * The y coordinate of the position of the symbol relative to the polyline. The coordinate\r\n   * of the symbol's path is translated _up_ by the anchor's y coordinate. By default, a\r\n   * symbol is anchored at (0, 0). The position is expressed in the same coordinate system as the\r\n   * symbol's path.\r\n   *\r\n   * @type {number}\r\n   * @memberof AgmPolylineIcon\r\n   */\r\n  @Input() anchorY: number;\r\n\r\n  /**\r\n   * The symbol's fill color. All CSS3 colors are supported except for extended named\r\n   * colors. Defaults to the stroke color of the corresponding polyline.\r\n   *\r\n   * @type {string}\r\n   * @memberof AgmPolylineIcon\r\n   */\r\n  @Input() fillColor: string;\r\n\r\n  /**\r\n   * The symbol's fill opacity. Defaults to 0.\r\n   */\r\n  @Input() fillOpacity: number;\r\n\r\n  /**\r\n   * The symbol's path, which is a built-in symbol path, or a custom path expressed using\r\n   * SVG path notation. Required.\r\n   *\r\n   * @type {SymbolPath}\r\n   * @memberof AgmPolylineIcon\r\n   */\r\n  @Input() path: 'CIRCLE' | 'BACKWARD_CLOSED_ARROW' | 'BACKWARD_OPEN_ARROW' | 'FORWARD_CLOSED_ARROW' |\r\n        'FORWARD_OPEN_ARROW' | string;\r\n\r\n  /**\r\n   * The angle by which to rotate the symbol, expressed clockwise in degrees.\r\n   * Defaults to 0. A symbol where `fixedRotation` is `false` is rotated relative to\r\n   * the angle of the edge on which it lies.\r\n   *\r\n   * @type {number}\r\n   * @memberof AgmPolylineIcon\r\n   */\r\n  @Input() rotation: number;\r\n\r\n  /**\r\n   * The amount by which the symbol is scaled in size. Defaults to the stroke weight\r\n   * of the polyline; after scaling, the symbol must lie inside a square 22 pixels in\r\n   * size centered at the symbol's anchor.\r\n   *\r\n   * @type {number}\r\n   * @memberof AgmPolylineIcon\r\n   */\r\n  @Input() scale: number;\r\n\r\n  /**\r\n   * The symbol's stroke color. All CSS3 colors are supported except for extended named\r\n   * colors. Defaults to the stroke color of the polyline.\r\n   *\r\n   * @type {string}\r\n   * @memberof AgmPolylineIcon\r\n   */\r\n  @Input() strokeColor: string;\r\n\r\n  /**\r\n   * The symbol's stroke opacity. Defaults to the stroke opacity of the polyline.\r\n   *\r\n   * @type {number}\r\n   * @memberof AgmPolylineIcon\r\n   */\r\n  @Input() strokeOpacity: number;\r\n\r\n  /**\r\n   * The symbol's stroke weight. Defaults to the scale of the symbol.\r\n   *\r\n   * @type {number}\r\n   * @memberof AgmPolylineIcon\r\n   */\r\n  @Input() strokeWeight: number;\r\n\r\n  ngOnInit(): void {\r\n    if (this.path == null) {\r\n      throw new Error('Icon Sequence path is required');\r\n    }\r\n  }\r\n}\r\n","import { Directive, EventEmitter, forwardRef, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { LatLngLiteral } from '../../core/services/google-maps-types';\r\nimport { FitBoundsAccessor, FitBoundsDetails } from '../services/fit-bounds';\r\n\r\n/**\r\n * AgmPolylinePoint represents one element of a polyline within a  {@link\r\n * AgmPolyline}\r\n */\r\n@Directive({\r\n  selector: 'agm-polyline-point',\r\n  providers: [\r\n    {provide: FitBoundsAccessor, useExisting: forwardRef(() => AgmPolylinePoint)},\r\n  ],\r\n})\r\nexport class AgmPolylinePoint implements OnChanges, FitBoundsAccessor {\r\n  /**\r\n   * The latitude position of the point.\r\n   */\r\n  @Input() public latitude: number;\r\n\r\n  /**\r\n   * The longitude position of the point;\r\n   */\r\n  @Input() public longitude: number;\r\n\r\n  /**\r\n   * This event emitter gets emitted when the position of the point changed.\r\n   */\r\n  @Output() positionChanged: EventEmitter<LatLngLiteral> = new EventEmitter<LatLngLiteral>();\r\n\r\n  constructor() {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): any {\r\n    if (changes['latitude'] || changes['longitude']) {\r\n      const position: LatLngLiteral = {\r\n        lat: changes['latitude'] ? changes['latitude'].currentValue : this.latitude,\r\n        lng: changes['longitude'] ? changes['longitude'].currentValue : this.longitude,\r\n      } as LatLngLiteral;\r\n      this.positionChanged.emit(position);\r\n    }\r\n  }\r\n\r\n  /** @internal */\r\n  getFitBoundsDetails$(): Observable<FitBoundsDetails> {\r\n    return this.positionChanged.pipe(\r\n      startWith({lat: this.latitude, lng: this.longitude}),\r\n      map(position => ({latLng: position}))\r\n    );\r\n  }\r\n}\r\n","import { AfterContentInit, ContentChildren, Directive, EventEmitter, Input, OnChanges, OnDestroy, Output, QueryList, SimpleChanges } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { LatLng, PolyMouseEvent } from '../services/google-maps-types';\r\nimport { PolylineManager } from '../services/managers/polyline-manager';\r\nimport { AgmPolylineIcon } from './polyline-icon';\r\nimport { AgmPolylinePoint } from './polyline-point';\r\n\r\nlet polylineId = 0;\r\n/**\r\n * AgmPolyline renders a polyline on a {@link AgmMap}\r\n *\r\n * ### Example\r\n * ```typescript\r\n * import { Component } from '@angular/core';\r\n *\r\n * @Component({\r\n *  selector: 'my-map-cmp',\r\n *  styles: [`\r\n *    .agm-map-container {\r\n *      height: 300px;\r\n *    }\r\n * `],\r\n *  template: `\r\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\r\n *      <agm-polyline>\r\n *          <agm-polyline-point [latitude]=\"latA\" [longitude]=\"lngA\">\r\n *          </agm-polyline-point>\r\n *          <agm-polyline-point [latitude]=\"latB\" [longitude]=\"lngB\">\r\n *          </agm-polyline-point>\r\n *      </agm-polyline>\r\n *    </agm-map>\r\n *  `\r\n * })\r\n * ```\r\n */\r\n@Directive({\r\n  selector: 'agm-polyline',\r\n})\r\nexport class AgmPolyline implements OnDestroy, OnChanges, AfterContentInit {\r\n  /**\r\n   * Indicates whether this Polyline handles mouse events. Defaults to true.\r\n   */\r\n  @Input() clickable = true;\r\n\r\n  /**\r\n   * If set to true, the user can drag this shape over the map. The geodesic property defines the\r\n   * mode of dragging. Defaults to false.\r\n   */\r\n  // tslint:disable-next-line:no-input-rename\r\n  @Input('polylineDraggable') draggable = false;\r\n\r\n  /**\r\n   * If set to true, the user can edit this shape by dragging the control points shown at the\r\n   * vertices and on each segment. Defaults to false.\r\n   */\r\n  @Input() editable = false;\r\n\r\n  /**\r\n   * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of\r\n   * the Earth. When false, edges of the polygon are rendered as straight lines in screen space.\r\n   * Note that the shape of a geodesic polygon may appear to change when dragged, as the dimensions\r\n   * are maintained relative to the surface of the earth. Defaults to false.\r\n   */\r\n  @Input() geodesic = false;\r\n\r\n  /**\r\n   * The stroke color. All CSS3 colors are supported except for extended named colors.\r\n   */\r\n  @Input() strokeColor: string;\r\n\r\n  /**\r\n   * The stroke opacity between 0.0 and 1.0.\r\n   */\r\n  @Input() strokeOpacity: number;\r\n\r\n  /**\r\n   * The stroke width in pixels.\r\n   */\r\n  @Input() strokeWeight: number;\r\n\r\n  /**\r\n   * Whether this polyline is visible on the map. Defaults to true.\r\n   */\r\n  @Input() visible = true;\r\n\r\n  /**\r\n   * The zIndex compared to other polys.\r\n   */\r\n  @Input() zIndex: number;\r\n\r\n  /**\r\n   * This event is fired when the DOM click event is fired on the Polyline.\r\n   */\r\n  @Output() lineClick: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the DOM dblclick event is fired on the Polyline.\r\n   */\r\n  @Output() lineDblClick: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is repeatedly fired while the user drags the polyline.\r\n   */\r\n  @Output() lineDrag: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the user stops dragging the polyline.\r\n   */\r\n  @Output() lineDragEnd: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the user starts dragging the polyline.\r\n   */\r\n  @Output() lineDragStart: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the DOM mousedown event is fired on the Polyline.\r\n   */\r\n  @Output() lineMouseDown: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the DOM mousemove event is fired on the Polyline.\r\n   */\r\n  @Output() lineMouseMove: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is fired on Polyline mouseout.\r\n   */\r\n  @Output() lineMouseOut: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is fired on Polyline mouseover.\r\n   */\r\n  @Output() lineMouseOver: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is fired whe the DOM mouseup event is fired on the Polyline\r\n   */\r\n  @Output() lineMouseUp: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the Polyline is right-clicked on.\r\n   */\r\n  @Output() lineRightClick: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is fired after Polyline's path changes.\r\n   */\r\n  @Output() polyPathChange = new EventEmitter<PathEvent>();\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  @ContentChildren(AgmPolylinePoint) points: QueryList<AgmPolylinePoint>;\r\n\r\n  @ContentChildren(AgmPolylineIcon) iconSequences: QueryList<AgmPolylineIcon>;\r\n\r\n  private static _polylineOptionsAttributes: Array<string> = [\r\n    'draggable', 'editable', 'visible', 'geodesic', 'strokeColor', 'strokeOpacity', 'strokeWeight',\r\n    'zIndex',\r\n  ];\r\n\r\n  private _id: string;\r\n  private _polylineAddedToManager = false;\r\n  private _subscriptions: Subscription[] = [];\r\n\r\n  constructor(private _polylineManager: PolylineManager) { this._id = (polylineId++).toString(); }\r\n\r\n  /** @internal */\r\n  ngAfterContentInit() {\r\n    if (this.points.length) {\r\n      this.points.forEach((point: AgmPolylinePoint) => {\r\n        const s = point.positionChanged.subscribe(\r\n            () => { this._polylineManager.updatePolylinePoints(this); });\r\n        this._subscriptions.push(s);\r\n      });\r\n    }\r\n    if (!this._polylineAddedToManager) {\r\n      this._init();\r\n    }\r\n    const pointSub = this.points.changes.subscribe(() => this._polylineManager.updatePolylinePoints(this));\r\n    this._subscriptions.push(pointSub);\r\n    this._polylineManager.updatePolylinePoints(this);\r\n\r\n    const iconSub = this.iconSequences.changes.subscribe(() => this._polylineManager.updateIconSequences(this));\r\n    this._subscriptions.push(iconSub);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): any {\r\n    if (!this._polylineAddedToManager) {\r\n      this._init();\r\n      return;\r\n    }\r\n\r\n    let options: {[propName: string]: any} = {};\r\n    const optionKeys = Object.keys(changes).filter(\r\n        k => AgmPolyline._polylineOptionsAttributes.indexOf(k) !== -1);\r\n    optionKeys.forEach(k => options[k] = changes[k].currentValue);\r\n    this._polylineManager.setPolylineOptions(this, options);\r\n  }\r\n\r\n  getPath(): Promise<Array<LatLng>> {\r\n    return this._polylineManager.getPath(this);\r\n  }\r\n\r\n  private _init() {\r\n    this._polylineManager.addPolyline(this);\r\n    this._polylineAddedToManager = true;\r\n    this._addEventListeners();\r\n  }\r\n\r\n  private _addEventListeners() {\r\n    const handlers = [\r\n      {name: 'click', handler: (ev: PolyMouseEvent) => this.lineClick.emit(ev)},\r\n      {name: 'dblclick', handler: (ev: PolyMouseEvent) => this.lineDblClick.emit(ev)},\r\n      {name: 'drag', handler: (ev: MouseEvent) => this.lineDrag.emit(ev)},\r\n      {name: 'dragend', handler: (ev: MouseEvent) => this.lineDragEnd.emit(ev)},\r\n      {name: 'dragstart', handler: (ev: MouseEvent) => this.lineDragStart.emit(ev)},\r\n      {name: 'mousedown', handler: (ev: PolyMouseEvent) => this.lineMouseDown.emit(ev)},\r\n      {name: 'mousemove', handler: (ev: PolyMouseEvent) => this.lineMouseMove.emit(ev)},\r\n      {name: 'mouseout', handler: (ev: PolyMouseEvent) => this.lineMouseOut.emit(ev)},\r\n      {name: 'mouseover', handler: (ev: PolyMouseEvent) => this.lineMouseOver.emit(ev)},\r\n      {name: 'mouseup', handler: (ev: PolyMouseEvent) => this.lineMouseUp.emit(ev)},\r\n      {name: 'rightclick', handler: (ev: PolyMouseEvent) => this.lineRightClick.emit(ev)},\r\n    ];\r\n    handlers.forEach((obj) => {\r\n      const os = this._polylineManager.createEventObservable(obj.name, this).subscribe(obj.handler);\r\n      this._subscriptions.push(os);\r\n    });\r\n\r\n    this._polylineManager.createPathEventObservable(this).then((ob$) => {\r\n      const os = ob$.subscribe(pathEvent => this.polyPathChange.emit(pathEvent));\r\n      this._subscriptions.push(os);\r\n    });\r\n  }\r\n\r\n  /** @internal */\r\n  _getPoints(): Array<AgmPolylinePoint> {\r\n    if (this.points) {\r\n      return this.points.toArray();\r\n    }\r\n    return [];\r\n  }\r\n\r\n  _getIcons(): Array<AgmPolylineIcon> {\r\n    if (this.iconSequences) {\r\n      return this.iconSequences.toArray();\r\n    }\r\n    return [];\r\n  }\r\n\r\n  /** @internal */\r\n  id(): string { return this._id; }\r\n\r\n  /** @internal */\r\n  ngOnDestroy() {\r\n    this._polylineManager.deletePolyline(this);\r\n    // unsubscribe all registered observable subscriptions\r\n    this._subscriptions.forEach((s) => s.unsubscribe());\r\n  }\r\n}\r\n\r\nexport interface PathEvent {\r\n  newArr: LatLng[];\r\n  evName: 'insert_at' | 'remove_at' | 'set_at';\r\n  index: number;\r\n  previous?: LatLng;\r\n}\r\n","import {\r\n  Directive,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChange,\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { MouseEvent } from '../map-types';\r\nimport {\r\n  LatLngBounds,\r\n  LatLngBoundsLiteral,\r\n  MouseEvent as MapMouseEvent,\r\n} from '../services/google-maps-types';\r\nimport { RectangleManager } from '../services/managers/rectangle-manager';\r\n\r\n@Directive({\r\n  selector: 'agm-rectangle',\r\n})\r\nexport class AgmRectangle implements OnInit, OnChanges, OnDestroy {\r\n  /**\r\n   * The north position of the rectangle (required).\r\n   */\r\n  @Input() north: number;\r\n\r\n  /**\r\n   * The east position of the rectangle (required).\r\n   */\r\n  @Input() east: number;\r\n\r\n  /**\r\n   * The south position of the rectangle (required).\r\n   */\r\n  @Input() south: number;\r\n\r\n  /**\r\n   * The west position of the rectangle (required).\r\n   */\r\n  @Input() west: number;\r\n\r\n  /**\r\n   * Indicates whether this Rectangle handles mouse events. Defaults to true.\r\n   */\r\n  @Input() clickable = true;\r\n\r\n  /**\r\n   * If set to true, the user can drag this rectangle over the map. Defaults to false.\r\n   */\r\n  // tslint:disable-next-line:no-input-rename\r\n  @Input('rectangleDraggable') draggable = false;\r\n\r\n  /**\r\n   * If set to true, the user can edit this rectangle by dragging the control points shown at\r\n   * the center and around the circumference of the rectangle. Defaults to false.\r\n   */\r\n  @Input() editable = false;\r\n\r\n  /**\r\n   * The fill color. All CSS3 colors are supported except for extended named colors.\r\n   */\r\n  @Input() fillColor: string;\r\n\r\n  /**\r\n   * The fill opacity between 0.0 and 1.0.\r\n   */\r\n  @Input() fillOpacity: number;\r\n\r\n  /**\r\n   * The stroke color. All CSS3 colors are supported except for extended named colors.\r\n   */\r\n  @Input() strokeColor: string;\r\n\r\n  /**\r\n   * The stroke opacity between 0.0 and 1.0\r\n   */\r\n  @Input() strokeOpacity: number;\r\n\r\n  /**\r\n   * The stroke position. Defaults to CENTER.\r\n   * This property is not supported on Internet Explorer 8 and earlier.\r\n   */\r\n  @Input() strokePosition: 'CENTER' | 'INSIDE' | 'OUTSIDE' = 'CENTER';\r\n\r\n  /**\r\n   * The stroke width in pixels.\r\n   */\r\n  @Input() strokeWeight = 0;\r\n\r\n  /**\r\n   * Whether this rectangle is visible on the map. Defaults to true.\r\n   */\r\n  @Input() visible = true;\r\n\r\n  /**\r\n   * The zIndex compared to other polys.\r\n   */\r\n  @Input() zIndex: number;\r\n\r\n  /**\r\n   * This event is fired when the rectangle's is changed.\r\n   */\r\n  @Output()\r\n  boundsChange: EventEmitter<LatLngBoundsLiteral> = new EventEmitter<\r\n    LatLngBoundsLiteral\r\n  >();\r\n\r\n  /**\r\n   * This event emitter gets emitted when the user clicks on the rectangle.\r\n   */\r\n  @Output()\r\n  rectangleClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event emitter gets emitted when the user clicks on the rectangle.\r\n   */\r\n  @Output()\r\n  rectangleDblClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is repeatedly fired while the user drags the rectangle.\r\n   */\r\n  @Output() drag: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the user stops dragging the rectangle.\r\n   */\r\n  @Output() dragEnd: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the user starts dragging the rectangle.\r\n   */\r\n  @Output()\r\n  dragStart: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the DOM mousedown event is fired on the rectangle.\r\n   */\r\n  @Output()\r\n  mouseDown: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the DOM mousemove event is fired on the rectangle.\r\n   */\r\n  @Output()\r\n  mouseMove: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired on rectangle mouseout.\r\n   */\r\n  @Output() mouseOut: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired on rectangle mouseover.\r\n   */\r\n  @Output()\r\n  mouseOver: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the DOM mouseup event is fired on the rectangle.\r\n   */\r\n  @Output() mouseUp: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the rectangle is right-clicked on.\r\n   */\r\n  @Output()\r\n  rightClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  private _rectangleAddedToManager = false;\r\n\r\n  private static _mapOptions: string[] = [\r\n    'fillColor',\r\n    'fillOpacity',\r\n    'strokeColor',\r\n    'strokeOpacity',\r\n    'strokePosition',\r\n    'strokeWeight',\r\n    'visible',\r\n    'zIndex',\r\n    'clickable',\r\n  ];\r\n\r\n  private _eventSubscriptions: Subscription[] = [];\r\n\r\n  constructor(private _manager: RectangleManager) {}\r\n\r\n  /** @internal */\r\n  ngOnInit() {\r\n    this._manager.addRectangle(this);\r\n    this._rectangleAddedToManager = true;\r\n    this._registerEventListeners();\r\n  }\r\n\r\n  /** @internal */\r\n  ngOnChanges(changes: { [key: string]: SimpleChange }) {\r\n    if (!this._rectangleAddedToManager) {\r\n      return;\r\n    }\r\n    if (\r\n      changes['north'] ||\r\n      changes['east'] ||\r\n      changes['south'] ||\r\n      changes['west']\r\n    ) {\r\n      this._manager.setBounds(this);\r\n    }\r\n    if (changes['editable']) {\r\n      this._manager.setEditable(this);\r\n    }\r\n    if (changes['draggable']) {\r\n      this._manager.setDraggable(this);\r\n    }\r\n    if (changes['visible']) {\r\n      this._manager.setVisible(this);\r\n    }\r\n    this._updateRectangleOptionsChanges(changes);\r\n  }\r\n\r\n  private _updateRectangleOptionsChanges(changes: {\r\n    [propName: string]: SimpleChange;\r\n  }) {\r\n    let options: { [propName: string]: any } = {};\r\n    let optionKeys = Object.keys(changes).filter(\r\n      k => AgmRectangle._mapOptions.indexOf(k) !== -1,\r\n    );\r\n    optionKeys.forEach(k => {\r\n      options[k] = changes[k].currentValue;\r\n    });\r\n    if (optionKeys.length > 0) {\r\n      this._manager.setOptions(this, options);\r\n    }\r\n  }\r\n\r\n  private _registerEventListeners() {\r\n    let events: Map<string, EventEmitter<any>> = new Map<\r\n      string,\r\n      EventEmitter<any>\r\n    >();\r\n    events.set('bounds_changed', this.boundsChange);\r\n    events.set('click', this.rectangleClick);\r\n    events.set('dblclick', this.rectangleDblClick);\r\n    events.set('drag', this.drag);\r\n    events.set('dragend', this.dragEnd);\r\n    events.set('dragStart', this.dragStart);\r\n    events.set('mousedown', this.mouseDown);\r\n    events.set('mousemove', this.mouseMove);\r\n    events.set('mouseout', this.mouseOut);\r\n    events.set('mouseover', this.mouseOver);\r\n    events.set('mouseup', this.mouseUp);\r\n    events.set('rightclick', this.rightClick);\r\n\r\n    events.forEach((eventEmitter, eventName) => {\r\n      this._eventSubscriptions.push(\r\n        this._manager\r\n          .createEventObservable<MapMouseEvent>(eventName, this)\r\n          .subscribe(value => {\r\n            switch (eventName) {\r\n              case 'bounds_changed':\r\n                this._manager.getBounds(this).then(bounds =>\r\n                  eventEmitter.emit({\r\n                    north: bounds.getNorthEast().lat(),\r\n                    east: bounds.getNorthEast().lng(),\r\n                    south: bounds.getSouthWest().lat(),\r\n                    west: bounds.getSouthWest().lng(),\r\n                  } as LatLngBoundsLiteral),\r\n                );\r\n                break;\r\n              default:\r\n                eventEmitter.emit({\r\n                  coords: { lat: value.latLng.lat(), lng: value.latLng.lng() },\r\n                } as MouseEvent);\r\n            }\r\n          }),\r\n      );\r\n    });\r\n  }\r\n\r\n  /** @internal */\r\n  ngOnDestroy() {\r\n    this._eventSubscriptions.forEach(function(s: Subscription) {\r\n      s.unsubscribe();\r\n    });\r\n    this._eventSubscriptions = null;\r\n    this._manager.removeRectangle(this);\r\n  }\r\n\r\n  /**\r\n   * Gets the LatLngBounds of this Rectangle.\r\n   */\r\n  getBounds(): Promise<LatLngBounds> {\r\n    return this._manager.getBounds(this);\r\n  }\r\n}\r\n","import { Directive, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\r\nimport { LayerManager } from '../services/managers/layer-manager';\r\n\r\nlet layerId = 0;\r\n\r\n/*\r\n * This directive adds a transit layer to a google map instance\r\n * <agm-transit-layer [visible]=\"true|false\"> <agm-transit-layer>\r\n * */\r\n@Directive({\r\n    selector: 'agm-transit-layer',\r\n})\r\n\r\nexport class AgmTransitLayer implements OnInit, OnChanges, OnDestroy{\r\n    private _addedToManager = false;\r\n    private _id: string = (layerId++).toString();\r\n\r\n    /**\r\n     * Hide/show transit layer\r\n     */\r\n    @Input() visible = true;\r\n\r\n    constructor( private _manager: LayerManager ) {}\r\n\r\n    ngOnInit() {\r\n        if (this._addedToManager) {\r\n            return;\r\n        }\r\n        this._manager.addTransitLayer(this, {visible: this.visible});\r\n        this._addedToManager = true;\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (!this._addedToManager) {\r\n            return;\r\n        }\r\n        if (changes['visible'] != null) {\r\n            this._manager.toggleLayerVisibility(this, {visible: changes['visible'].currentValue});\r\n        }\r\n    }\r\n\r\n    /** @internal */\r\n    id(): string { return this._id; }\r\n\r\n    /** @internal */\r\n    toString(): string { return `AgmTransitLayer-${this._id.toString()}`; }\r\n\r\n    /** @internal */\r\n    ngOnDestroy() {\r\n        this._manager.deleteLayer(this);\r\n    }\r\n\r\n}\r\n","export var google: any;\r\n\r\nexport interface MVCObject {\r\n  addListener(eventName: string, handler: Function): MapsEventListener;\r\n}\r\n\r\nexport interface MVCArray<T> extends MVCObject {\r\n  clear(): void;\r\n  getArray(): Array<T>;\r\n  getAt(i: number): T;\r\n  getLength(): number;\r\n  insertAt(i: number, elem: T): void;\r\n  pop(): T;\r\n  push(elem: T): number;\r\n  removeAt(i: number): T;\r\n  setAt(i: number, elem: T): void;\r\n  /* tslint:disable */\r\n  /*\r\n  * Tslint configuration check-parameters will prompt errors for these lines of code.\r\n  * https://palantir.github.io/tslint/rules/no-unused-variable/\r\n  */\r\n  forEach(callback: (elem: T, i: number) => void): void;\r\n  /* tslint:enable */\r\n}\r\n\r\nexport interface GoogleMap extends MVCObject {\r\n  data?: Data;\r\n  panTo(latLng: LatLng | LatLngLiteral): void;\r\n  panBy(x: number, y: number): void;\r\n  setZoom(zoom: number): void;\r\n  getCenter(): LatLng;\r\n  setCenter(latLng: LatLng | LatLngLiteral): void;\r\n  getBounds(): LatLngBounds;\r\n  getMapTypeId(): MapTypeId;\r\n  getZoom(): number;\r\n  setOptions(options: MapOptions): void;\r\n  panToBounds(latLngBounds: LatLngBounds | LatLngBoundsLiteral, padding?: number | Padding): void;\r\n  fitBounds(bounds: LatLngBounds | LatLngBoundsLiteral, padding?: number | Padding): void;\r\n}\r\n\r\nexport interface LatLng {\r\n  lat(): number;\r\n  lng(): number;\r\n  toJSON(): any;\r\n  toString(): string;\r\n}\r\n\r\nexport interface Marker extends MVCObject {\r\n  setMap(map: GoogleMap): void;\r\n  setPosition(latLng: LatLng | LatLngLiteral): void;\r\n  setTitle(title: string): void;\r\n  setLabel(label: string | MarkerLabel): void;\r\n  setDraggable(draggable: boolean): void;\r\n  setIcon(icon: string): void;\r\n  setOpacity(opacity: number): void;\r\n  setVisible(visible: boolean): void;\r\n  setZIndex(zIndex: number): void;\r\n  setAnimation(animation: any): void;\r\n  getLabel(): MarkerLabel;\r\n  setClickable(clickable: boolean): void;\r\n}\r\n\r\nexport interface MarkerOptions {\r\n  position: LatLng | LatLngLiteral;\r\n  title?: string;\r\n  map?: GoogleMap;\r\n  label?: string | MarkerLabel;\r\n  draggable?: boolean;\r\n  icon?: string;\r\n  opacity?: number;\r\n  visible?: boolean;\r\n  zIndex?: number;\r\n  clickable: boolean;\r\n  animation?: any;\r\n}\r\n\r\nexport interface MarkerLabel {\r\n  color: string;\r\n  fontFamily: string;\r\n  fontSize: string;\r\n  fontWeight: string;\r\n  text: string;\r\n}\r\n\r\nexport interface Circle extends MVCObject {\r\n  getBounds(): LatLngBounds;\r\n  getCenter(): LatLng;\r\n  getDraggable(): boolean;\r\n  getEditable(): boolean;\r\n  getMap(): GoogleMap;\r\n  getRadius(): number;\r\n  getVisible(): boolean;\r\n  setCenter(center: LatLng | LatLngLiteral): void;\r\n  setDraggable(draggable: boolean): void;\r\n  setEditable(editable: boolean): void;\r\n  setMap(map: GoogleMap): void;\r\n  setOptions(options: CircleOptions): void;\r\n  setRadius(radius: number): void;\r\n  setVisible(visible: boolean): void;\r\n}\r\n\r\nexport interface CircleOptions {\r\n  center?: LatLng | LatLngLiteral;\r\n  clickable?: boolean;\r\n  draggable?: boolean;\r\n  editable?: boolean;\r\n  fillColor?: string;\r\n  fillOpacity?: number;\r\n  map?: GoogleMap;\r\n  radius?: number;\r\n  strokeColor?: string;\r\n  strokeOpacity?: number;\r\n  strokePosition?: 'CENTER' | 'INSIDE' | 'OUTSIDE';\r\n  strokeWeight?: number;\r\n  visible?: boolean;\r\n  zIndex?: number;\r\n}\r\n\r\nexport interface Rectangle extends MVCObject {\r\n  getBounds(): LatLngBounds;\r\n  getDraggable(): boolean;\r\n  getEditable(): boolean;\r\n  getMap(): GoogleMap;\r\n  getVisible(): boolean;\r\n  setBounds(bounds: LatLngBounds | LatLngBoundsLiteral): void;\r\n  setDraggable(draggable: boolean): void;\r\n  setEditable(editable: boolean): void;\r\n  setMap(map: GoogleMap): void;\r\n  setOptions(options: RectangleOptions): void;\r\n  setVisible(visible: boolean): void;\r\n}\r\n\r\nexport interface RectangleOptions {\r\n  bounds?: LatLngBounds | LatLngBoundsLiteral;\r\n  clickable?: boolean;\r\n  draggable?: boolean;\r\n  editable?: boolean;\r\n  fillColor?: string;\r\n  fillOpacity?: number;\r\n  map?: GoogleMap;\r\n  strokeColor?: string;\r\n  strokeOpacity?: number;\r\n  strokePosition?: 'CENTER' | 'INSIDE' | 'OUTSIDE';\r\n  strokeWeight?: number;\r\n  visible?: boolean;\r\n  zIndex?: number;\r\n}\r\n\r\nexport interface LatLngBounds {\r\n  contains(latLng: LatLng): boolean;\r\n  equals(other: LatLngBounds | LatLngBoundsLiteral): boolean;\r\n  extend(point: LatLng | LatLngLiteral): void;\r\n  getCenter(): LatLng;\r\n  getNorthEast(): LatLng;\r\n  getSouthWest(): LatLng;\r\n  intersects(other: LatLngBounds | LatLngBoundsLiteral): boolean;\r\n  isEmpty(): boolean;\r\n  toJSON(): LatLngBoundsLiteral;\r\n  toSpan(): LatLng;\r\n  toString(): string;\r\n  toUrlValue(precision?: number): string;\r\n  union(other: LatLngBounds | LatLngBoundsLiteral): LatLngBounds;\r\n}\r\n\r\nexport interface Padding {\r\n  top: number;\r\n  left: number;\r\n  right: number;\r\n  bottom: number;\r\n}\r\n\r\nexport interface LatLngBoundsLiteral {\r\n  east: number;\r\n  north: number;\r\n  south: number;\r\n  west: number;\r\n}\r\n\r\nexport interface LatLngLiteral {\r\n  lat: number;\r\n  lng: number;\r\n}\r\n\r\nexport interface MouseEvent { latLng: LatLng; }\r\n\r\nexport interface MapOptions {\r\n  center?: LatLng | LatLngLiteral;\r\n  zoom?: number;\r\n  minZoom?: number;\r\n  maxZoom?: number;\r\n  controlSize?: number;\r\n  disableDoubleClickZoom?: boolean;\r\n  disableDefaultUI?: boolean;\r\n  scrollwheel?: boolean;\r\n  backgroundColor?: string;\r\n  draggable?: boolean;\r\n  draggableCursor?: string;\r\n  draggingCursor?: string;\r\n  keyboardShortcuts?: boolean;\r\n  styles?: MapTypeStyle[];\r\n  zoomControl?: boolean;\r\n  zoomControlOptions?: ZoomControlOptions;\r\n  streetViewControl?: boolean;\r\n  streetViewControlOptions?: StreetViewControlOptions;\r\n  scaleControl?: boolean;\r\n  scaleControlOptions?: ScaleControlOptions;\r\n  mapTypeControl?: boolean;\r\n  mapTypeControlOptions?: MapTypeControlOptions;\r\n  panControl?: boolean;\r\n  panControlOptions?: PanControlOptions;\r\n  rotateControl?: boolean;\r\n  rotateControlOptions?: RotateControlOptions;\r\n  fullscreenControl?: boolean;\r\n  fullscreenControlOptions?: FullscreenControlOptions;\r\n  mapTypeId?: string | MapTypeId;\r\n  clickableIcons?: boolean;\r\n  gestureHandling?: 'cooperative' | 'greedy' | 'none' | 'auto';\r\n  tilt?: number;\r\n  restriction?: MapRestriction;\r\n}\r\n\r\nexport interface MapTypeStyle {\r\n  elementType?: 'all' | 'geometry' | 'geometry.fill' | 'geometry.stroke' | 'labels' | 'labels.icon' |\r\n  'labels.text' | 'labels.text.fill' | 'labels.text.stroke';\r\n  featureType?: 'administrative' | 'administrative.country' | 'administrative.land_parcel' |\r\n  'administrative.locality' | 'administrative.neighborhood' | 'administrative.province' | 'all' |\r\n  'landscape' | 'landscape.man_made' | 'landscape.natural' | 'landscape.natural.landcover' |\r\n  'landscape.natural.terrain' | 'poi' | 'poi.attraction' | 'poi.business' | 'poi.government' |\r\n  'poi.medical' | 'poi.park' | 'poi.place_of_worship' | 'poi.school' | 'poi.sports_complex' | 'road' |\r\n  'road.arterial' | 'road.highway' | 'road.highway.controlled_access' | 'road.local' | 'transit' |\r\n  'transit.line' | 'transit.station' | 'transit.station.airport' | 'transit.station.bus' |\r\n  'transit.station.rail' | 'water';\r\n  stylers: MapTypeStyler[];\r\n}\r\n\r\n/**\r\n *  If more than one key is specified in a single MapTypeStyler, all but one will be ignored.\r\n */\r\nexport interface MapTypeStyler {\r\n  color?: string;\r\n  gamma?: number;\r\n  hue?: string;\r\n  invert_lightness?: boolean;\r\n  lightness?: number;\r\n  saturation?: number;\r\n  visibility?: string;\r\n  weight?: number;\r\n}\r\n\r\nexport interface InfoWindow extends MVCObject {\r\n  close(): void;\r\n  getContent(): string | Node;\r\n  getPosition(): LatLng;\r\n  getZIndex(): number;\r\n  open(map?: GoogleMap, anchor?: MVCObject): void;\r\n  setContent(content: string | Node): void;\r\n  setOptions(options: InfoWindowOptions): void;\r\n  setPosition(position: LatLng | LatLngLiteral): void;\r\n  setZIndex(zIndex: number): void;\r\n}\r\n\r\nexport interface MapsEventListener { remove(): void; }\r\n\r\nexport interface Size {\r\n  height: number;\r\n  width: number;\r\n  equals(other: Size): boolean;\r\n  toString(): string;\r\n}\r\n\r\nexport interface InfoWindowOptions {\r\n  content?: string | Node;\r\n  disableAutoPan?: boolean;\r\n  maxWidth?: number;\r\n  pixelOffset?: Size;\r\n  position?: LatLng | LatLngLiteral;\r\n  zIndex?: number;\r\n}\r\n\r\nexport interface Point {\r\n  x: number;\r\n  y: number;\r\n  equals(other: Point): boolean;\r\n  toString(): string;\r\n}\r\n\r\nexport interface GoogleSymbol {\r\n  anchor?: Point;\r\n  fillColor?: string;\r\n  fillOpacity?: number;\r\n  labelOrigin?: Point;\r\n  path?: string | SymbolPath;\r\n  rotation?: number;\r\n  scale?: number;\r\n  strokeColor?: string;\r\n  strokeOpacity?: number;\r\n  strokeWeight?: number;\r\n}\r\n\r\nexport interface IconSequence {\r\n  fixedRotation?: boolean;\r\n  icon?: GoogleSymbol;\r\n  offset?: string;\r\n  repeat?: string;\r\n}\r\n\r\nexport enum SymbolPath {\r\n  BACKWARD_CLOSED_ARROW = 3,\r\n  BACKWARD_OPEN_ARROW = 4,\r\n  CIRCLE = 0,\r\n  FORWARD_CLOSED_ARROW = 1,\r\n  FORWARD_OPEN_ARROW = 2,\r\n}\r\n\r\nexport interface PolylineOptions {\r\n  clickable?: boolean;\r\n  draggable?: boolean;\r\n  editable?: boolean;\r\n  geodesic?: boolean;\r\n  icons?: Array<IconSequence>;\r\n  map?: GoogleMap;\r\n  path?: Array<LatLng> | Array<LatLng | LatLngLiteral>;\r\n  strokeColor?: string;\r\n  strokeOpacity?: number;\r\n  strokeWeight?: number;\r\n  visible?: boolean;\r\n  zIndex?: number;\r\n}\r\n\r\nexport interface Polyline extends MVCObject {\r\n  getDraggable(): boolean;\r\n  getEditable(): boolean;\r\n  getMap(): GoogleMap;\r\n  getPath(): MVCArray<LatLng>;\r\n  getVisible(): boolean;\r\n  setDraggable(draggable: boolean): void;\r\n  setEditable(editable: boolean): void;\r\n  setMap(map: GoogleMap): void;\r\n  setOptions(options: PolylineOptions): void;\r\n  setPath(path: Array<LatLng | LatLngLiteral>): void;\r\n  setVisible(visible: boolean): void;\r\n}\r\n\r\n/**\r\n * PolyMouseEvent gets emitted when the user triggers mouse events on a polyline.\r\n */\r\nexport interface PolyMouseEvent extends MouseEvent {\r\n  edge: number;\r\n  path: number;\r\n  vertex: number;\r\n}\r\n\r\nexport interface PolygonOptions {\r\n  clickable?: boolean;\r\n  draggable?: boolean;\r\n  editable?: boolean;\r\n  fillColor?: string;\r\n  fillOpacity?: number;\r\n  geodesic?: boolean;\r\n  icon?: Array<IconSequence>;\r\n  map?: GoogleMap;\r\n  paths?: Array<LatLng | LatLngLiteral> | Array<Array<LatLng | LatLngLiteral>>;\r\n  strokeColor?: string;\r\n  strokeOpacity?: number;\r\n  strokeWeight?: number;\r\n  visible?: boolean;\r\n  zIndex?: number;\r\n}\r\n\r\nexport interface Polygon extends MVCObject {\r\n  getDraggable(): boolean;\r\n  getEditable(): boolean;\r\n  getMap(): GoogleMap;\r\n  getPath(): MVCArray<LatLng>;\r\n  getPaths(): MVCArray<MVCArray<LatLng>>;\r\n  getVisible(): boolean;\r\n  setDraggable(draggable: boolean): void;\r\n  setEditable(editable: boolean): void;\r\n  setMap(map: GoogleMap): void;\r\n  setPath(path: Array<LatLng> | Array<LatLng | LatLngLiteral>): void;\r\n  setOptions(options: PolygonOptions): void;\r\n  setPaths(paths: Array<Array<LatLng | LatLngLiteral>> | Array<LatLng | LatLngLiteral>): void;\r\n  setVisible(visible: boolean): void;\r\n}\r\n\r\nexport interface KmlLayer extends MVCObject {\r\n  getDefaultViewport(): LatLngBounds;\r\n  getMap(): GoogleMap;\r\n  getMetadata(): KmlLayerMetadata;\r\n  getStatus(): KmlLayerStatus;\r\n  getUrl(): string;\r\n  getZIndex(): number;\r\n  setMap(map: GoogleMap): void;\r\n  setOptions(options: KmlLayerOptions): void;\r\n  setUrl(url: string): void;\r\n  setZIndex(zIndex: number): void;\r\n}\r\n\r\n/**\r\n * See: https://developers.google.com/maps/documentation/javascript/reference?hl=de#KmlLayerStatus\r\n */\r\nexport type KmlLayerStatus = 'DOCUMENT_NOT_FOUND' |\r\n  'DOCUMENT_TOO_LARGE' | 'FETCH_ERROR' | 'INVALID_DOCUMENT' | 'INVALID_REQUEST' |\r\n  'LIMITS_EXCEEDED' | 'OK' | 'TIMED_OUT' | 'UNKNOWN';\r\n\r\n/**\r\n * See: https://developers.google.com/maps/documentation/javascript/reference?hl=de#KmlLayerMetadata\r\n */\r\nexport interface KmlLayerMetadata {\r\n  author: KmlAuthor;\r\n  description: string;\r\n  hasScreenOverlays: boolean;\r\n  name: string;\r\n  snippet: string;\r\n}\r\n\r\nexport interface KmlAuthor {\r\n  email: string;\r\n  name: string;\r\n  uri: string;\r\n}\r\n\r\nexport interface KmlLayerOptions {\r\n  clickable?: boolean;\r\n  map?: GoogleMap;\r\n  preserveViewport?: boolean;\r\n  screenOverlays?: boolean;\r\n  suppressInfoWindows?: boolean;\r\n  url?: string;\r\n  zIndex?: number;\r\n}\r\n\r\nexport interface KmlFeatureData {\r\n  author: KmlAuthor;\r\n  description: string;\r\n  id: string;\r\n  infoWindowHtml: string;\r\n  name: string;\r\n  snippet: string;\r\n}\r\n\r\nexport interface KmlMouseEvent extends MouseEvent {\r\n  featureData: KmlFeatureData;\r\n  pixelOffset: Size;\r\n}\r\n\r\nexport interface TransitLayer extends MVCObject {\r\n  getMap(): GoogleMap;\r\n  setMap(map: GoogleMap): void;\r\n}\r\n\r\nexport interface TransitLayerOptions {\r\n  visible: boolean;\r\n}\r\n\r\nexport interface BicyclingLayer extends MVCObject {\r\n  getMap(): GoogleMap;\r\n  setMap(map: GoogleMap): void;\r\n}\r\n\r\nexport interface BicyclingLayerOptions {\r\n  visible: boolean;\r\n}\r\n\r\nexport interface Data extends MVCObject {\r\n  features: Feature[];\r\n  addGeoJson(geoJson: Object, options?: GeoJsonOptions): Feature[];\r\n  remove(feature: Feature): void;\r\n  setControlPosition(controlPosition: ControlPosition): void;\r\n  setControls(controls: string[]): void;\r\n  setDrawingMode(drawingMode: string): void;\r\n  setMap(map: GoogleMap): void;\r\n  /* tslint:disable */\r\n  /*\r\n  * Tslint configuration check-parameters will prompt errors for these lines of code.\r\n  * https://palantir.github.io/tslint/rules/no-unused-variable/\r\n  */\r\n  setStyle(style: () => void): void;\r\n  forEach(callback: (feature: Feature) => void): void;\r\n  loadGeoJson(url: string, options?: GeoJsonOptions, callback?: (feats: Feature[]) => void): void;\r\n  /* tslint:enable */\r\n}\r\n\r\nexport interface Feature extends MVCObject {\r\n  id?: number | string | undefined;\r\n  geometry: Geometry;\r\n  properties: any;\r\n}\r\n\r\nexport interface DataOptions {\r\n  controlPosition?: ControlPosition;\r\n  controls?: string[];\r\n  drawingMode?: string;\r\n  featureFactory?: (geometry: Geometry) => Feature;\r\n  map?: GoogleMap;\r\n  style?: () => void;\r\n}\r\n\r\nexport interface DataMouseEvent extends MouseEvent {\r\n  feature: Feature;\r\n}\r\n\r\nexport interface GeoJsonOptions {\r\n  idPropertyName: string;\r\n}\r\n\r\nexport interface Geometry {\r\n  type: string;\r\n}\r\n\r\n/**\r\n * Identifiers used to specify the placement of controls on the map. Controls are\r\n * positioned relative to other controls in the same layout position. Controls that\r\n * are added first are positioned closer to the edge of the map.\r\n */\r\nexport enum ControlPosition {\r\n  RIGHT_BOTTOM,\r\n  TOP_LEFT,\r\n  TOP_CENTER,\r\n  TOP_RIGHT,\r\n  LEFT_CENTER,\r\n  LEFT_TOP,\r\n  LEFT_BOTTOM,\r\n  RIGHT_TOP,\r\n  RIGHT_CENTER,\r\n  BOTTOM_RIGHT,\r\n  BOTTOM_LEFT,\r\n  BOTTOM_CENTER,\r\n}\r\n\r\nexport enum MapTypeId {\r\n  /** This map type displays a transparent layer of major streets on satellite images. */\r\n  HYBRID,\r\n  /** This map type displays a normal street map. */\r\n  ROADMAP,\r\n  /** This map type displays satellite images. */\r\n  SATELLITE,\r\n  /** This map type displays maps with physical features such as terrain and vegetation. */\r\n  TERRAIN,\r\n}\r\n\r\n/***** Controls *****/\r\n/** Options for the rendering of the map type control. */\r\nexport interface MapTypeControlOptions {\r\n  /** IDs of map types to show in the control. */\r\n  mapTypeIds?: (MapTypeId | string)[];\r\n  /**\r\n   * Position id. Used to specify the position of the control on the map.\r\n   * The default position is TOP_RIGHT.\r\n   */\r\n  position?: ControlPosition;\r\n  /** Style id. Used to select what style of map type control to display. */\r\n  style?: MapTypeControlStyle;\r\n}\r\n\r\nexport enum MapTypeControlStyle {\r\n  DEFAULT = 0,\r\n  DROPDOWN_MENU = 2,\r\n  HORIZONTAL_BAR = 1,\r\n}\r\n\r\nexport interface OverviewMapControlOptions {\r\n  opened?: boolean;\r\n}\r\n\r\n/** Options for the rendering of the pan control. */\r\nexport interface PanControlOptions {\r\n  /**\r\n   * Position id. Used to specify the position of the control on the map.\r\n   * The default position is TOP_LEFT.\r\n   */\r\n  position?: ControlPosition;\r\n}\r\n\r\n/** Options for the rendering of the rotate control. */\r\nexport interface RotateControlOptions {\r\n  /**\r\n   * Position id. Used to specify the position of the control on the map.\r\n   * The default position is TOP_LEFT.\r\n   */\r\n  position?: ControlPosition;\r\n}\r\n\r\n/** Options for the rendering of the scale control. */\r\nexport interface ScaleControlOptions {\r\n  /** Style id. Used to select what style of scale control to display. */\r\n  style?: ScaleControlStyle;\r\n}\r\n\r\nexport enum ScaleControlStyle {\r\n  DEFAULT,\r\n}\r\n\r\n/** Options for the rendering of the Street View pegman control on the map. */\r\nexport interface StreetViewControlOptions {\r\n  /**\r\n   * Position id. Used to specify the position of the control on the map. The\r\n   * default position is embedded within the navigation (zoom and pan) controls.\r\n   * If this position is empty or the same as that specified in the\r\n   * zoomControlOptions or panControlOptions, the Street View control will be\r\n   * displayed as part of the navigation controls. Otherwise, it will be displayed\r\n   * separately.\r\n   */\r\n  position?: ControlPosition;\r\n}\r\n\r\n/** Options for the rendering of the zoom control. */\r\nexport interface ZoomControlOptions {\r\n  /**\r\n   * Position id. Used to specify the position of the control on the map.\r\n   * The default position is TOP_LEFT.\r\n   */\r\n  position?: ControlPosition;\r\n  style?: ZoomControlStyle;\r\n}\r\n\r\nexport enum ZoomControlStyle {\r\n  DEFAULT,\r\n  LARGE,\r\n  SMALL,\r\n}\r\n\r\n/** Options for the rendering of the fullscreen control. */\r\nexport interface FullscreenControlOptions {\r\n  /**\r\n   * Position id. Used to specify the position of the control on the map.\r\n   * The default position is RIGHT_TOP.\r\n   */\r\n  position?: ControlPosition;\r\n}\r\n\r\n/** Options for the restricting the bounds of the map. */\r\nexport interface MapRestriction {\r\n  latLngBounds: LatLngBounds | LatLngBoundsLiteral;\r\n  strictBounds?: boolean;\r\n}\r\n\r\nexport interface Geocoder {\r\n  geocode: (request: GeocoderRequest, googleCallback: (results: GeocoderResult[], status: GeocoderStatus) => void) => void;\r\n}\r\n\r\nexport interface GeocoderAddressComponent {\r\n  long_name: string;\r\n  short_name: string;\r\n  types: string[];\r\n}\r\n\r\n/** Options for restricting the geocoder results */\r\nexport interface GeocoderComponentRestrictions {\r\n  administrativeArea?: string;\r\n  country?: string;\r\n  locality?: string;\r\n  postalCode?: string;\r\n  route?: string;\r\n}\r\n\r\nexport interface GeocoderGeometry {\r\n  bounds: LatLngBounds;\r\n  location: LatLng;\r\n  location_type: GeocoderLocationType;\r\n  viewport: LatLngBounds;\r\n}\r\n\r\nexport enum GeocoderLocationType {\r\n  APPROXIMATE = 'APPROXIMATE',\r\n  GEOMETRIC_CENTER = 'GEOMETRIC_CENTER',\r\n  RANGE_INTERPOLATED = 'RANGE_INTERPOLATED',\r\n  ROOFTOP = 'ROOFTOP',\r\n}\r\n\r\nexport interface GeocoderRequest {\r\n  address?: string;\r\n  bounds?: LatLngBounds | LatLngBoundsLiteral;\r\n  componentRestrictions?: GeocoderComponentRestrictions;\r\n  location?: LatLng | LatLngLiteral;\r\n  placeId?: string;\r\n  region?: string;\r\n}\r\n\r\nexport interface GeocoderResult {\r\n  address_components: GeocoderAddressComponent[];\r\n  formatted_address: string;\r\n  geometry: GeocoderGeometry;\r\n  partial_match: boolean;\r\n  place_id: string;\r\n  postcode_localities: string[];\r\n  types: string[];\r\n}\r\n\r\nexport enum GeocoderStatus {\r\n  ERROR = 'ERROR',\r\n  INVALID_REQUEST = 'INVALID_REQUEST',\r\n  OK = 'OK',\r\n  OVER_QUERY_LIMIT = 'OVER_QUERY_LIMIT',\r\n  REQUEST_DENIED = 'REQUEST_DENIED',\r\n  UNKNOWN_ERROR = 'UNKNOWN_ERROR',\r\n  ZERO_RESULTS = 'ZERO_RESULTS',\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { bindCallback, ConnectableObservable, Observable, of, ReplaySubject, throwError } from 'rxjs';\r\nimport { map, multicast, switchMap } from 'rxjs/operators';\r\nimport { Geocoder, GeocoderRequest, GeocoderResult, GeocoderStatus } from './google-maps-types';\r\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\r\n\r\ndeclare var google: any;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AgmGeocoder {\r\n  protected readonly geocoder$: Observable<Geocoder>;\r\n\r\n  constructor(loader: MapsAPILoader) {\r\n    const connectableGeocoder$ = new Observable(subscriber => {\r\n      loader.load().then(() => subscriber.next());\r\n    })\r\n      .pipe(\r\n        map(() => this._createGeocoder()),\r\n        multicast(new ReplaySubject(1)),\r\n      ) as ConnectableObservable<Geocoder>;\r\n\r\n    connectableGeocoder$.connect(); // ignore the subscription\r\n    // since we will remain subscribed till application exits\r\n\r\n    this.geocoder$ = connectableGeocoder$;\r\n  }\r\n\r\n  geocode(request: GeocoderRequest): Observable<GeocoderResult[]> {\r\n    return this.geocoder$.pipe(\r\n      switchMap((geocoder) => this._getGoogleResults(geocoder, request))\r\n    );\r\n  }\r\n\r\n  private _getGoogleResults(geocoder: Geocoder, request: GeocoderRequest): Observable<GeocoderResult[]> {\r\n    const geocodeObservable = bindCallback(geocoder.geocode);\r\n    return geocodeObservable(request).pipe(\r\n      switchMap(([results, status]) => {\r\n        if (status === GeocoderStatus.OK) {\r\n          return of(results);\r\n        }\r\n\r\n        return throwError(status);\r\n      })\r\n    );\r\n  }\r\n\r\n  private _createGeocoder(): Geocoder {\r\n    return new google.maps.Geocoder() as Geocoder;\r\n  }\r\n}\r\n","import { Provider } from '@angular/core';\r\n\r\nexport class WindowRef {\r\n  getNativeWindow(): any { return window; }\r\n}\r\n\r\nexport class DocumentRef {\r\n  getNativeDocument(): any { return document; }\r\n}\r\n\r\nexport const BROWSER_GLOBALS_PROVIDERS: Provider[] = [WindowRef, DocumentRef];\r\n","import { Inject, Injectable, InjectionToken, LOCALE_ID, Optional } from '@angular/core';\r\n\r\nimport { DocumentRef, WindowRef } from '../../utils/browser-globals';\r\n\r\nimport { MapsAPILoader } from './maps-api-loader';\r\n\r\nexport enum GoogleMapsScriptProtocol {\r\n  HTTP = 1,\r\n  HTTPS = 2,\r\n  AUTO = 3,\r\n}\r\n\r\n/**\r\n * Token for the config of the LazyMapsAPILoader. Please provide an object of type {@link\r\n * LazyMapsAPILoaderConfig}.\r\n */\r\nexport const LAZY_MAPS_API_CONFIG = new InjectionToken<LazyMapsAPILoaderConfigLiteral>('angular-google-maps LAZY_MAPS_API_CONFIG');\r\n\r\n/**\r\n * Configuration for the {@link LazyMapsAPILoader}.\r\n */\r\nexport interface LazyMapsAPILoaderConfigLiteral {\r\n  /**\r\n   * The Google Maps API Key (see:\r\n   * https://developers.google.com/maps/documentation/javascript/get-api-key)\r\n   */\r\n  apiKey?: string;\r\n\r\n  /**\r\n   * The Google Maps client ID (for premium plans).\r\n   * When you have a Google Maps APIs Premium Plan license, you must authenticate\r\n   * your application with either an API key or a client ID.\r\n   * The Google Maps API will fail to load if both a client ID and an API key are included.\r\n   */\r\n  clientId?: string;\r\n\r\n  /**\r\n   * The Google Maps channel name (for premium plans).\r\n   * A channel parameter is an optional parameter that allows you to track usage under your client\r\n   * ID by assigning a distinct channel to each of your applications.\r\n   */\r\n  channel?: string;\r\n\r\n  /**\r\n   * Google Maps API version.\r\n   */\r\n  apiVersion?: string;\r\n\r\n  /**\r\n   * Host and Path used for the `<script>` tag.\r\n   */\r\n  hostAndPath?: string;\r\n\r\n  /**\r\n   * Protocol used for the `<script>` tag.\r\n   */\r\n  protocol?: GoogleMapsScriptProtocol;\r\n\r\n  /**\r\n   * Defines which Google Maps libraries should get loaded.\r\n   */\r\n  libraries?: string[];\r\n\r\n  /**\r\n   * The default bias for the map behavior is US.\r\n   * If you wish to alter your application to serve different map tiles or bias the\r\n   * application, you can overwrite the default behavior (US) by defining a `region`.\r\n   * See https://developers.google.com/maps/documentation/javascript/basics#Region\r\n   */\r\n  region?: string;\r\n\r\n  /**\r\n   * The Google Maps API uses the browser's preferred language when displaying\r\n   * textual information. If you wish to overwrite this behavior and force the API\r\n   * to use a given language, you can use this setting.\r\n   * See https://developers.google.com/maps/documentation/javascript/basics#Language\r\n   */\r\n  language?: string;\r\n}\r\n\r\n@Injectable()\r\nexport class LazyMapsAPILoader extends MapsAPILoader {\r\n  protected _scriptLoadingPromise: Promise<void>;\r\n  protected _config: LazyMapsAPILoaderConfigLiteral;\r\n  protected _windowRef: WindowRef;\r\n  protected _documentRef: DocumentRef;\r\n  protected readonly _SCRIPT_ID: string = 'agmGoogleMapsApiScript';\r\n  protected readonly callbackName: string = `agmLazyMapsAPILoader`;\r\n\r\n  constructor(@Optional() @Inject(LAZY_MAPS_API_CONFIG) config: any = null, w: WindowRef, d: DocumentRef,\r\n   @Inject(LOCALE_ID) private localeId: string) {\r\n    super();\r\n    this._config = config || {};\r\n    this._windowRef = w;\r\n    this._documentRef = d;\r\n  }\r\n\r\n  load(): Promise<void> {\r\n    const window = this._windowRef.getNativeWindow() as any;\r\n    if (window.google && window.google.maps) {\r\n      // Google maps already loaded on the page.\r\n      return Promise.resolve();\r\n    }\r\n\r\n    if (this._scriptLoadingPromise) {\r\n      return this._scriptLoadingPromise;\r\n    }\r\n\r\n    // this can happen in HMR situations or Stackblitz.io editors.\r\n    const scriptOnPage = this._documentRef.getNativeDocument().getElementById(this._SCRIPT_ID);\r\n    if (scriptOnPage) {\r\n      this._assignScriptLoadingPromise(scriptOnPage);\r\n      return this._scriptLoadingPromise;\r\n    }\r\n\r\n    const script = this._documentRef.getNativeDocument().createElement('script');\r\n    script.type = 'text/javascript';\r\n    script.async = true;\r\n    script.defer = true;\r\n    script.id = this._SCRIPT_ID;\r\n    script.src = this._getScriptSrc(this.callbackName);\r\n    this._assignScriptLoadingPromise(script);\r\n    this._documentRef.getNativeDocument().body.appendChild(script);\r\n    return this._scriptLoadingPromise;\r\n  }\r\n\r\n  private _assignScriptLoadingPromise(scriptElem: HTMLElement) {\r\n    this._scriptLoadingPromise = new Promise<void>((resolve: Function, reject: Function) => {\r\n      (this._windowRef.getNativeWindow() as any)[this.callbackName] = () => {\r\n        resolve();\r\n      };\r\n\r\n      scriptElem.onerror = (error: Event) => {\r\n        reject(error);\r\n      };\r\n    });\r\n  }\r\n\r\n  protected _getScriptSrc(callbackName: string): string {\r\n    let protocolType: GoogleMapsScriptProtocol =\r\n        (this._config && this._config.protocol) || GoogleMapsScriptProtocol.HTTPS;\r\n    let protocol: string;\r\n\r\n    switch (protocolType) {\r\n      case GoogleMapsScriptProtocol.AUTO:\r\n        protocol = '';\r\n        break;\r\n      case GoogleMapsScriptProtocol.HTTP:\r\n        protocol = 'http:';\r\n        break;\r\n      case GoogleMapsScriptProtocol.HTTPS:\r\n        protocol = 'https:';\r\n        break;\r\n    }\r\n\r\n    const hostAndPath: string = this._config.hostAndPath || 'maps.googleapis.com/maps/api/js';\r\n    const queryParams: {[key: string]: string | Array<string>} = {\r\n      v: this._config.apiVersion || 'quarterly',\r\n      callback: callbackName,\r\n      key: this._config.apiKey,\r\n      client: this._config.clientId,\r\n      channel: this._config.channel,\r\n      libraries: this._config.libraries,\r\n      region: this._config.region,\r\n      language: this._config.language || (this.localeId !== 'en-US' ? this.localeId : null),\r\n    };\r\n    const params: string = Object.keys(queryParams)\r\n                               .filter((k: string) => queryParams[k] != null)\r\n                               .filter((k: string) => {\r\n                                 // remove empty arrays\r\n                                 return !Array.isArray(queryParams[k]) ||\r\n                                     (Array.isArray(queryParams[k]) && queryParams[k].length > 0);\r\n                               })\r\n                               .map((k: string) => {\r\n                                 // join arrays as comma seperated strings\r\n                                 let i = queryParams[k];\r\n                                 if (Array.isArray(i)) {\r\n                                   return {key: k, value: i.join(',')};\r\n                                 }\r\n                                 return {key: k, value: queryParams[k]};\r\n                               })\r\n                               .map((entry: {key: string, value: string}) => {\r\n                                 return `${entry.key}=${entry.value}`;\r\n                               })\r\n                               .join('&');\r\n    return `${protocol}//${hostAndPath}?${params}`;\r\n  }\r\n}\r\n","import { MapsAPILoader } from './maps-api-loader';\r\n\r\n/**\r\n * When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a `<script>`\r\n * Tag.\r\n * It's important that the Google Maps API script gets loaded first on the page.\r\n */\r\nexport class NoOpMapsAPILoader implements MapsAPILoader {\r\n  load(): Promise<void> {\r\n    if (!(window as any).google || !(window as any).google.maps) {\r\n      throw new Error(\r\n          'Google Maps API not loaded on page. Make sure window.google.maps is available!');\r\n    }\r\n    return Promise.resolve();\r\n  }\r\n}\r\n","import { LatLngLiteral } from './services/google-maps-types';\r\n\r\n// exported map types\r\nexport {\r\n  KmlMouseEvent,\r\n  DataMouseEvent,\r\n  LatLngBounds,\r\n  LatLngBoundsLiteral,\r\n  LatLng,\r\n  LatLngLiteral,\r\n  PolyMouseEvent,\r\n  MarkerLabel,\r\n  Geocoder,\r\n  GeocoderAddressComponent,\r\n  GeocoderComponentRestrictions,\r\n  GeocoderGeometry,\r\n  GeocoderLocationType,\r\n  GeocoderRequest,\r\n  GeocoderResult,\r\n  GeocoderStatus,\r\n  MapTypeStyle,\r\n  Padding,\r\n  ControlPosition,\r\n  OverviewMapControlOptions,\r\n  PanControlOptions,\r\n  RotateControlOptions,\r\n  MapTypeControlOptions,\r\n  MapTypeId,\r\n  ScaleControlOptions,\r\n  ScaleControlStyle,\r\n  StreetViewControlOptions,\r\n  ZoomControlOptions,\r\n  ZoomControlStyle,\r\n  FullscreenControlOptions,\r\n  CircleOptions,\r\n  Circle,\r\n  Polyline,\r\n  PolylineOptions,\r\n  Polygon,\r\n  PolygonOptions,\r\n  Rectangle,\r\n  RectangleOptions,\r\n  Marker,\r\n  MarkerOptions,\r\n} from './services/google-maps-types';\r\n\r\n/**\r\n * MouseEvent gets emitted when the user triggers mouse events on the map.\r\n */\r\nexport interface MouseEvent {\r\n  coords: LatLngLiteral;\r\n  placeId?: string;\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\n\r\nimport { AgmBicyclingLayer } from './directives/bicycling-layer';\r\nimport { AgmCircle } from './directives/circle';\r\nimport { AgmDataLayer } from './directives/data-layer';\r\nimport { AgmFitBounds } from './directives/fit-bounds';\r\nimport { AgmInfoWindow } from './directives/info-window';\r\nimport { AgmKmlLayer } from './directives/kml-layer';\r\nimport { AgmMap } from './directives/map';\r\nimport { AgmMarker } from './directives/marker';\r\nimport { AgmPolygon } from './directives/polygon';\r\nimport { AgmPolyline } from './directives/polyline';\r\nimport { AgmPolylineIcon } from './directives/polyline-icon';\r\nimport { AgmPolylinePoint } from './directives/polyline-point';\r\nimport { AgmRectangle } from './directives/rectangle';\r\nimport { AgmTransitLayer } from './directives/transit-layer';\r\n\r\nimport { LAZY_MAPS_API_CONFIG, LazyMapsAPILoader, LazyMapsAPILoaderConfigLiteral } from './services/maps-api-loader/lazy-maps-api-loader';\r\nimport { MapsAPILoader } from './services/maps-api-loader/maps-api-loader';\r\n\r\nimport { BROWSER_GLOBALS_PROVIDERS } from './utils/browser-globals';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function coreDirectives() {\r\n  return [\r\n    AgmBicyclingLayer,\r\n    AgmCircle,\r\n    AgmDataLayer,\r\n    AgmFitBounds,\r\n    AgmInfoWindow,\r\n    AgmKmlLayer,\r\n    AgmMap,\r\n    AgmMarker,\r\n    AgmPolygon,\r\n    AgmPolyline,\r\n    AgmPolylineIcon,\r\n    AgmPolylinePoint,\r\n    AgmRectangle,\r\n    AgmTransitLayer,\r\n  ];\r\n}\r\n\r\n/**\r\n * The angular-google-maps core module. Contains all Directives/Services/Pipes\r\n * of the core module. Please use `AgmCoreModule.forRoot()` in your app module.\r\n */\r\n@NgModule({declarations: coreDirectives(), exports: coreDirectives()})\r\nexport class AgmCoreModule {\r\n  /**\r\n   * Please use this method when you register the module at the root level.\r\n   */\r\n  static forRoot(lazyMapsAPILoaderConfig?: LazyMapsAPILoaderConfigLiteral): ModuleWithProviders {\r\n    return {\r\n      ngModule: AgmCoreModule,\r\n      providers: [\r\n        ...BROWSER_GLOBALS_PROVIDERS, {provide: MapsAPILoader, useClass: LazyMapsAPILoader},\r\n        {provide: LAZY_MAPS_API_CONFIG, useValue: lazyMapsAPILoaderConfig},\r\n      ],\r\n    };\r\n  }\r\n}\r\n","// main modules\r\nexport * from './directives';\r\nexport * from './services';\r\nexport * from './map-types';\r\n\r\n// core module\r\n// we explicitly export the module here to prevent this Ionic 2 bug:\r\n// http://stevemichelotti.com/integrate-angular-2-google-maps-into-ionic-2/\r\nexport { AgmCoreModule } from './core.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {coreDirectives as Éµb} from './core.module';\nexport {FitBoundsService as Éµa} from './services/fit-bounds';\nexport {BROWSER_GLOBALS_PROVIDERS as Éµe,DocumentRef as Éµd,WindowRef as Éµc} from './utils/browser-globals';"],"names":["tslib_1.__decorate","layerId","tslib_1.__param","google","tslib_1.__extends"],"mappings":"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"}