{"version":3,"file":"agm-js-marker-clusterer.js","sources":["ng://@agm/js-marker-clusterer/services/managers/cluster-manager.ts","ng://@agm/js-marker-clusterer/directives/marker-cluster.ts","ng://@agm/js-marker-clusterer/js-marker-clusterer.module.ts","ng://@agm/js-marker-clusterer/index.ts","ng://@agm/js-marker-clusterer/agm-js-marker-clusterer.ts"],"sourcesContent":["import { Injectable, NgZone } from '@angular/core';\r\nimport { Observable, Observer } from 'rxjs';\r\n\r\nimport 'js-marker-clusterer';\r\n\r\nimport { AgmMarker, GoogleMapsAPIWrapper, MarkerManager } from '@agm/core';\r\nimport { Marker } from '@agm/core/services/google-maps-types';\r\nimport { AgmMarkerCluster } from '../../directives/marker-cluster';\r\nimport { ClusterOptions, MarkerClustererInstance } from '../google-clusterer-types';\r\n\r\ndeclare var MarkerClusterer: any;\r\n\r\n@Injectable()\r\nexport class ClusterManager extends MarkerManager {\r\n  private _clustererInstance: Promise<MarkerClustererInstance>;\r\n  private _resolver: Function;\r\n\r\n  constructor(protected _mapsWrapper: GoogleMapsAPIWrapper, protected _zone: NgZone) {\r\n    super(_mapsWrapper, _zone);\r\n    this._clustererInstance = new Promise<MarkerClustererInstance>((resolver) => {\r\n      this._resolver = resolver;\r\n    });\r\n  }\r\n\r\n  init(options: ClusterOptions): void {\r\n    this._mapsWrapper.getNativeMap().then(map => {\r\n      const clusterer = new MarkerClusterer(map, [], options);\r\n      this._resolver(clusterer);\r\n    });\r\n  }\r\n\r\n  getClustererInstance(): Promise<MarkerClustererInstance> {\r\n    return this._clustererInstance;\r\n  }\r\n\r\n  addMarker(marker: AgmMarker): void {\r\n    const clusterPromise: Promise<MarkerClustererInstance> = this.getClustererInstance();\r\n    const markerPromise = this._mapsWrapper\r\n      .createMarker({\r\n        position: {\r\n          lat: marker.latitude,\r\n          lng: marker.longitude,\r\n        },\r\n        label: marker.label,\r\n        draggable: marker.draggable,\r\n        icon: marker.iconUrl,\r\n        opacity: marker.opacity,\r\n        visible: marker.visible,\r\n        zIndex: marker.zIndex,\r\n        title: marker.title,\r\n        clickable: marker.clickable,\r\n      }, false);\r\n\r\n    Promise\r\n      .all([clusterPromise, markerPromise])\r\n      .then(([cluster, marker]) => {\r\n        return cluster.addMarker(marker);\r\n      });\r\n    this._markers.set(marker, markerPromise);\r\n  }\r\n\r\n  deleteMarker(marker: AgmMarker): Promise<void> {\r\n    const m = this._markers.get(marker);\r\n    if (m == null) {\r\n      // marker already deleted\r\n      return Promise.resolve();\r\n    }\r\n    return m.then((m: Marker) => {\r\n      this._zone.run(() => {\r\n        m.setMap(null);\r\n        this.getClustererInstance().then(cluster => {\r\n          cluster.removeMarker(m);\r\n          this._markers.delete(marker);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  clearMarkers(): Promise<void> {\r\n    return this.getClustererInstance().then(cluster => {\r\n      cluster.clearMarkers();\r\n    });\r\n  }\r\n\r\n  setGridSize(c: AgmMarkerCluster): void {\r\n    this.getClustererInstance().then(cluster => {\r\n      cluster.setGridSize(c.gridSize);\r\n    });\r\n  }\r\n\r\n  setMaxZoom(c: AgmMarkerCluster): void {\r\n    this.getClustererInstance().then(cluster => {\r\n      cluster.setMaxZoom(c.maxZoom);\r\n    });\r\n  }\r\n\r\n  setStyles(c: AgmMarkerCluster): void {\r\n    this.getClustererInstance().then(cluster => {\r\n      cluster.setStyles(c.styles);\r\n    });\r\n  }\r\n\r\n  setZoomOnClick(c: AgmMarkerCluster): void {\r\n    this.getClustererInstance().then(cluster => {\r\n      if (c.zoomOnClick !== undefined) {\r\n        cluster.zoomOnClick_ = c.zoomOnClick;\r\n      }\r\n    });\r\n  }\r\n\r\n  setAverageCenter(c: AgmMarkerCluster): void {\r\n    this.getClustererInstance().then(cluster => {\r\n      if (c.averageCenter !== undefined) {\r\n        cluster.averageCenter_ = c.averageCenter;\r\n      }\r\n    });\r\n  }\r\n\r\n  setImagePath(c: AgmMarkerCluster): void {\r\n    this.getClustererInstance().then(cluster => {\r\n      if (c.imagePath !== undefined) {\r\n        cluster.imagePath_ = c.imagePath;\r\n      }\r\n    });\r\n  }\r\n\r\n  setMinimumClusterSize(c: AgmMarkerCluster): void {\r\n    this.getClustererInstance().then(cluster => {\r\n      if (c.minimumClusterSize !== undefined) {\r\n        cluster.minimumClusterSize_ = c.minimumClusterSize;\r\n      }\r\n    });\r\n  }\r\n\r\n  setImageExtension(c: AgmMarkerCluster): void {\r\n    this.getClustererInstance().then(cluster => {\r\n      if (c.imageExtension !== undefined) {\r\n        cluster.imageExtension_ = c.imageExtension;\r\n      }\r\n    });\r\n  }\r\n\r\n  createClusterEventObservable<T>(eventName: string): Observable<T> {\r\n    return Observable.create((observer: Observer<T>) => {\r\n      this._zone.runOutsideAngular(() => {\r\n        this._clustererInstance.then((m: MarkerClustererInstance) => {\r\n          m.addListener(eventName, (e: T) => this._zone.run(() => observer.next(e)));\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  setCalculator (c: AgmMarkerCluster): void {\r\n    this.getClustererInstance().then(cluster => {\r\n      if (typeof c.calculator === 'function') {\r\n        cluster.setCalculator(c.calculator);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Directive, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChange } from '@angular/core';\n\nimport { InfoWindowManager, MarkerManager } from '@agm/core';\nimport { ClusterManager } from '../services/managers/cluster-manager';\n\nimport { CalculateFunction, ClusterOptions, ClusterStyle } from '../services/google-clusterer-types';\n\nimport { Subscription } from 'rxjs';\n\n/**\n * AgmMarkerCluster clusters map marker if they are near together\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker-cluster>\n *        <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *        </agm-marker>\n *        <agm-marker [latitude]=\"lat2\" [longitude]=\"lng2\" [label]=\"'N'\">\n *        </agm-marker>\n *      </agm-marker-cluster>\n *    </agm-map>\n *  `\n * })\n * ```\n */\n@Directive({\n  selector: 'agm-marker-cluster',\n  providers: [\n    ClusterManager,\n    { provide: MarkerManager, useExisting: ClusterManager },\n    InfoWindowManager,\n  ],\n})\nexport class AgmMarkerCluster implements OnDestroy, OnChanges, OnInit, ClusterOptions {\n  /**\n   * The grid size of a cluster in pixels\n   */\n  @Input() gridSize: number;\n\n  /**\n   * The maximum zoom level that a marker can be part of a cluster.\n   */\n  @Input() maxZoom: number;\n\n  /**\n   * Whether the default behaviour of clicking on a cluster is to zoom into it.\n   */\n  @Input() zoomOnClick: boolean;\n\n  /**\n   * Whether the center of each cluster should be the average of all markers in the cluster.\n   */\n  @Input() averageCenter: boolean;\n\n  /**\n   * The minimum number of markers to be in a cluster before the markers are hidden and a count is shown.\n   */\n  @Input() minimumClusterSize: number;\n\n  /**\n   * An object that has style properties.\n   */\n  @Input() styles: ClusterStyle[];\n\n  /**\n   * A function that calculates the cluster style and text based on the markers in the cluster.\n   */\n  @Input() calculator: CalculateFunction;\n\n  @Input() imagePath: string;\n  @Input() imageExtension: string;\n\n  @Output() clusterClick: EventEmitter<void> = new EventEmitter<void>();\n\n  private _observableSubscriptions: Subscription[] = [];\n  constructor(private _clusterManager: ClusterManager) { }\n\n  /** @internal */\n  ngOnDestroy() {\n    this._clusterManager.clearMarkers();\n    this._observableSubscriptions.forEach((s) => s.unsubscribe());\n  }\n\n  /** @internal */\n  ngOnChanges(changes: { [key: string]: SimpleChange }) {\n    if (changes['gridSize']) {\n      this._clusterManager.setGridSize(this);\n    }\n    if (changes['maxZoom']) {\n      this._clusterManager.setMaxZoom(this);\n    }\n    if (changes['zoomOnClick']) {\n      this._clusterManager.setZoomOnClick(this);\n    }\n    if (changes['averageCenter']) {\n      this._clusterManager.setAverageCenter(this);\n    }\n    if (changes['minimumClusterSize']) {\n      this._clusterManager.setMinimumClusterSize(this);\n    }\n    if (changes['imagePath']) {\n      this._clusterManager.setImagePath(this);\n    }\n    if (changes['imageExtension']) {\n      this._clusterManager.setImageExtension(this);\n    }\n    if (changes['calculator']) {\n      this._clusterManager.setCalculator(this);\n    }\n    if (changes['styles']) {\n      this._clusterManager.setStyles(this);\n    }\n  }\n\n  private _addEventListeners() {\n    const handlers = [\n      {\n        name: 'clusterclick',\n        handler: (args:any) => this.clusterClick.emit(args),\n      },\n    ];\n    handlers.forEach((obj) => {\n      const os = this._clusterManager.createClusterEventObservable(obj.name).subscribe(obj.handler);\n      this._observableSubscriptions.push(os);\n    });\n  }\n\n  /** @internal */\n  ngOnInit() {\n    this._addEventListeners();\n    this._clusterManager.init({\n      gridSize: this.gridSize,\n      maxZoom: this.maxZoom,\n      zoomOnClick: this.zoomOnClick,\n      averageCenter: this.averageCenter,\n      minimumClusterSize: this.minimumClusterSize,\n      styles: this.styles,\n      imagePath: this.imagePath,\n      imageExtension: this.imageExtension,\n      calculator: this.calculator,\n    });\n  }\n}\n","import { AgmCoreModule } from '@agm/core';\r\nimport { NgModule } from '@angular/core';\r\nimport { AgmMarkerCluster } from './directives/marker-cluster';\r\n\r\n@NgModule({\r\n  imports: [AgmCoreModule],\r\n  declarations: [AgmMarkerCluster],\r\n  exports: [AgmMarkerCluster],\r\n})\r\nexport class AgmJsMarkerClustererModule {\r\n}\r\n","// main modules\r\nexport * from './directives';\r\nexport * from './services';\r\n\r\n// we explicitly export the module here to prevent this Ionic 2 bug:\r\n// http://stevemichelotti.com/integrate-angular-2-google-maps-into-ionic-2/\r\nexport { AgmJsMarkerClustererModule } from './js-marker-clusterer.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["tslib_1.__extends","tslib_1.__decorate"],"mappings":";;;;;;;IAaoCA,kCAAa;IAI/C,wBAAsB,YAAkC,EAAY,KAAa;QAAjF,YACE,kBAAM,YAAY,EAAE,KAAK,CAAC,SAI3B;QALqB,kBAAY,GAAZ,YAAY,CAAsB;QAAY,WAAK,GAAL,KAAK,CAAQ;QAE/E,KAAI,CAAC,kBAAkB,GAAG,IAAI,OAAO,CAA0B,UAAC,QAAQ;YACtE,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;SAC3B,CAAC,CAAC;;KACJ;IAED,6BAAI,GAAJ,UAAK,OAAuB;QAA5B,iBAKC;QAJC,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,UAAA,GAAG;YACvC,IAAM,SAAS,GAAG,IAAI,eAAe,CAAC,GAAG,EAAE,EAAE,EAAE,OAAO,CAAC,CAAC;YACxD,KAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;SAC3B,CAAC,CAAC;KACJ;IAED,6CAAoB,GAApB;QACE,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAChC;IAED,kCAAS,GAAT,UAAU,MAAiB;QACzB,IAAM,cAAc,GAAqC,IAAI,CAAC,oBAAoB,EAAE,CAAC;QACrF,IAAM,aAAa,GAAG,IAAI,CAAC,YAAY;aACpC,YAAY,CAAC;YACZ,QAAQ,EAAE;gBACR,GAAG,EAAE,MAAM,CAAC,QAAQ;gBACpB,GAAG,EAAE,MAAM,CAAC,SAAS;aACtB;YACD,KAAK,EAAE,MAAM,CAAC,KAAK;YACnB,SAAS,EAAE,MAAM,CAAC,SAAS;YAC3B,IAAI,EAAE,MAAM,CAAC,OAAO;YACpB,OAAO,EAAE,MAAM,CAAC,OAAO;YACvB,OAAO,EAAE,MAAM,CAAC,OAAO;YACvB,MAAM,EAAE,MAAM,CAAC,MAAM;YACrB,KAAK,EAAE,MAAM,CAAC,KAAK;YACnB,SAAS,EAAE,MAAM,CAAC,SAAS;SAC5B,EAAE,KAAK,CAAC,CAAC;QAEZ,OAAO;aACJ,GAAG,CAAC,CAAC,cAAc,EAAE,aAAa,CAAC,CAAC;aACpC,IAAI,CAAC,UAAC,EAAiB;gBAAjB,kBAAiB,EAAhB,eAAO,EAAE,cAAM;YACrB,OAAO,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;SAClC,CAAC,CAAC;QACL,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;KAC1C;IAED,qCAAY,GAAZ,UAAa,MAAiB;QAA9B,iBAeC;QAdC,IAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpC,IAAI,CAAC,IAAI,IAAI,EAAE;;YAEb,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;SAC1B;QACD,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,CAAS;YACtB,KAAI,CAAC,KAAK,CAAC,GAAG,CAAC;gBACb,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBACf,KAAI,CAAC,oBAAoB,EAAE,CAAC,IAAI,CAAC,UAAA,OAAO;oBACtC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;oBACxB,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;iBAC9B,CAAC,CAAC;aACJ,CAAC,CAAC;SACJ,CAAC,CAAC;KACJ;IAED,qCAAY,GAAZ;QACE,OAAO,IAAI,CAAC,oBAAoB,EAAE,CAAC,IAAI,CAAC,UAAA,OAAO;YAC7C,OAAO,CAAC,YAAY,EAAE,CAAC;SACxB,CAAC,CAAC;KACJ;IAED,oCAAW,GAAX,UAAY,CAAmB;QAC7B,IAAI,CAAC,oBAAoB,EAAE,CAAC,IAAI,CAAC,UAAA,OAAO;YACtC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;SACjC,CAAC,CAAC;KACJ;IAED,mCAAU,GAAV,UAAW,CAAmB;QAC5B,IAAI,CAAC,oBAAoB,EAAE,CAAC,IAAI,CAAC,UAAA,OAAO;YACtC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;SAC/B,CAAC,CAAC;KACJ;IAED,kCAAS,GAAT,UAAU,CAAmB;QAC3B,IAAI,CAAC,oBAAoB,EAAE,CAAC,IAAI,CAAC,UAAA,OAAO;YACtC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;SAC7B,CAAC,CAAC;KACJ;IAED,uCAAc,GAAd,UAAe,CAAmB;QAChC,IAAI,CAAC,oBAAoB,EAAE,CAAC,IAAI,CAAC,UAAA,OAAO;YACtC,IAAI,CAAC,CAAC,WAAW,KAAK,SAAS,EAAE;gBAC/B,OAAO,CAAC,YAAY,GAAG,CAAC,CAAC,WAAW,CAAC;aACtC;SACF,CAAC,CAAC;KACJ;IAED,yCAAgB,GAAhB,UAAiB,CAAmB;QAClC,IAAI,CAAC,oBAAoB,EAAE,CAAC,IAAI,CAAC,UAAA,OAAO;YACtC,IAAI,CAAC,CAAC,aAAa,KAAK,SAAS,EAAE;gBACjC,OAAO,CAAC,cAAc,GAAG,CAAC,CAAC,aAAa,CAAC;aAC1C;SACF,CAAC,CAAC;KACJ;IAED,qCAAY,GAAZ,UAAa,CAAmB;QAC9B,IAAI,CAAC,oBAAoB,EAAE,CAAC,IAAI,CAAC,UAAA,OAAO;YACtC,IAAI,CAAC,CAAC,SAAS,KAAK,SAAS,EAAE;gBAC7B,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC,SAAS,CAAC;aAClC;SACF,CAAC,CAAC;KACJ;IAED,8CAAqB,GAArB,UAAsB,CAAmB;QACvC,IAAI,CAAC,oBAAoB,EAAE,CAAC,IAAI,CAAC,UAAA,OAAO;YACtC,IAAI,CAAC,CAAC,kBAAkB,KAAK,SAAS,EAAE;gBACtC,OAAO,CAAC,mBAAmB,GAAG,CAAC,CAAC,kBAAkB,CAAC;aACpD;SACF,CAAC,CAAC;KACJ;IAED,0CAAiB,GAAjB,UAAkB,CAAmB;QACnC,IAAI,CAAC,oBAAoB,EAAE,CAAC,IAAI,CAAC,UAAA,OAAO;YACtC,IAAI,CAAC,CAAC,cAAc,KAAK,SAAS,EAAE;gBAClC,OAAO,CAAC,eAAe,GAAG,CAAC,CAAC,cAAc,CAAC;aAC5C;SACF,CAAC,CAAC;KACJ;IAED,qDAA4B,GAA5B,UAAgC,SAAiB;QAAjD,iBAQC;QAPC,OAAO,UAAU,CAAC,MAAM,CAAC,UAAC,QAAqB;YAC7C,KAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC;gBAC3B,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAC,CAA0B;oBACtD,CAAC,CAAC,WAAW,CAAC,SAAS,EAAE,UAAC,CAAI,IAAK,OAAA,KAAI,CAAC,KAAK,CAAC,GAAG,CAAC,cAAM,OAAA,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,GAAA,CAAC,GAAA,CAAC,CAAC;iBAC5E,CAAC,CAAC;aACJ,CAAC,CAAC;SACJ,CAAC,CAAC;KACJ;IAED,sCAAa,GAAb,UAAe,CAAmB;QAChC,IAAI,CAAC,oBAAoB,EAAE,CAAC,IAAI,CAAC,UAAA,OAAO;YACtC,IAAI,OAAO,CAAC,CAAC,UAAU,KAAK,UAAU,EAAE;gBACtC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;aACrC;SACF,CAAC,CAAC;KACJ;;gBA7ImC,oBAAoB;gBAAmB,MAAM;;IAJtE,cAAc;QAD1B,UAAU,EAAE;OACA,cAAc,CAkJ1B;IAAD,qBAAC;CAAA,CAlJmC,aAAa;;ACJjD;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;IA0CE,0BAAoB,eAA+B;QAA/B,oBAAe,GAAf,eAAe,CAAgB;QAHzC,iBAAY,GAAuB,IAAI,YAAY,EAAQ,CAAC;QAE9D,6BAAwB,GAAmB,EAAE,CAAC;KACE;;IAGxD,sCAAW,GAAX;QACE,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;QACpC,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,WAAW,EAAE,GAAA,CAAC,CAAC;KAC/D;;IAGD,sCAAW,GAAX,UAAY,OAAwC;QAClD,IAAI,OAAO,CAAC,UAAU,CAAC,EAAE;YACvB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SACxC;QACD,IAAI,OAAO,CAAC,SAAS,CAAC,EAAE;YACtB,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SACvC;QACD,IAAI,OAAO,CAAC,aAAa,CAAC,EAAE;YAC1B,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;SAC3C;QACD,IAAI,OAAO,CAAC,eAAe,CAAC,EAAE;YAC5B,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;SAC7C;QACD,IAAI,OAAO,CAAC,oBAAoB,CAAC,EAAE;YACjC,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;SAClD;QACD,IAAI,OAAO,CAAC,WAAW,CAAC,EAAE;YACxB,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;SACzC;QACD,IAAI,OAAO,CAAC,gBAAgB,CAAC,EAAE;YAC7B,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;SAC9C;QACD,IAAI,OAAO,CAAC,YAAY,CAAC,EAAE;YACzB,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SAC1C;QACD,IAAI,OAAO,CAAC,QAAQ,CAAC,EAAE;YACrB,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SACtC;KACF;IAEO,6CAAkB,GAA1B;QAAA,iBAWC;QAVC,IAAM,QAAQ,GAAG;YACf;gBACE,IAAI,EAAE,cAAc;gBACpB,OAAO,EAAE,UAAC,IAAQ,IAAK,OAAA,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,GAAA;aACpD;SACF,CAAC;QACF,QAAQ,CAAC,OAAO,CAAC,UAAC,GAAG;YACnB,IAAM,EAAE,GAAG,KAAI,CAAC,eAAe,CAAC,4BAA4B,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YAC9F,KAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACxC,CAAC,CAAC;KACJ;;IAGD,mCAAQ,GAAR;QACE,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;YACxB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,aAAa,EAAE,IAAI,CAAC,aAAa;YACjC,kBAAkB,EAAE,IAAI,CAAC,kBAAkB;YAC3C,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,UAAU,EAAE,IAAI,CAAC,UAAU;SAC5B,CAAC,CAAC;KACJ;;gBAlEoC,cAAc;;IAtC1CC;QAAR,KAAK,EAAE;sDAAkB;IAKjBA;QAAR,KAAK,EAAE;qDAAiB;IAKhBA;QAAR,KAAK,EAAE;yDAAsB;IAKrBA;QAAR,KAAK,EAAE;2DAAwB;IAKvBA;QAAR,KAAK,EAAE;gEAA4B;IAK3BA;QAAR,KAAK,EAAE;oDAAwB;IAKvBA;QAAR,KAAK,EAAE;wDAA+B;IAE9BA;QAAR,KAAK,EAAE;uDAAmB;IAClBA;QAAR,KAAK,EAAE;4DAAwB;IAEtBA;QAAT,MAAM,EAAE;0DAA6D;IAvC3D,gBAAgB;QAR5B,SAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,SAAS,EAAE;gBACT,cAAc;gBACd,EAAE,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,cAAc,EAAE;gBACvD,iBAAiB;aAClB;SACF,CAAC;OACW,gBAAgB,CA6G5B;IAAD,uBAAC;CA7GD;;;ICnCA;KACC;IADY,0BAA0B;QALtC,QAAQ,CAAC;YACR,OAAO,EAAE,CAAC,aAAa,CAAC;YACxB,YAAY,EAAE,CAAC,gBAAgB,CAAC;YAChC,OAAO,EAAE,CAAC,gBAAgB,CAAC;SAC5B,CAAC;OACW,0BAA0B,CACtC;IAAD,iCAAC;CADD;;ACTA,eAAe;;ACAf;;GAEG;;;;"}